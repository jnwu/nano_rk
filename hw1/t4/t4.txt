SJF

consider two cases with one task set involving 2 tasks t1(C1, P1) and t2(C2, P2), P1 < P2

case 1 : 
C1<C2. In this case the job with shortest period will be executed first. 
The situation will behave the same as RM and can be bounded by the Liu and Layland bound, u <= n*(2^(1/n)-1)

case 2:
C1>C2. In this case the t2 with the shorter execution time will be executed first. 
As T2 will be executed first, C1 has to be completed before P1, so C1<= P1-C2.Since C2<C1, 1/2P1 < C1 < P1
U = C1/P1 + c2/P2 . For Umin, C1/P1 > 1/2, P2 can be infinitely large, so C2/P2 -> 0. U>= 1/2

In general, for task set t1(C1, P1), t2 (C2, P2),...tn(Cn, Pn), let C1>C2>...>Cn, P1<P2<...<Pn
C1+C2+..+Cn <=P1, so C1>(1/n)P1. 
Therefore U < (1/n)P1/P1 are all schedulable.
The tight utilization bound is 1/n

MUF

consider two cases with one task set involving 2 tasks t1(C1, P1) and t2(C2, P2), P1 < P2

Case 1: 

C1/P1 > C2/P2. In this case the job with the shortest period will be executed first.
This situation will behave the same as RM and can be bounded by the Liu and Layland bound, u<= n*(2^(1/n)-1)

Case 2:
C1/P1 < C2/P2. In this case C2 will be executed first. 
For C1 to meet deadline, C2<=P1-C1. P1>=C1+C2
U=C1/P1+C2/P2>=C1/P2+C2/P2=(C1+C2)/P2. C1+C2<=P1, so U<=P1/P2 is guaranteed to be schedulable

In general, for taskset t1(C1,P1),t2(C2,P2)...,tn(Cn,Pn),let P1<P2<...<Pn, U1<U2<...<Un
U=C1/P1+C2/P2+C3/P3+...+Cn/Pn. C1+C2+...+Cn<=P1, so U<P1/Pn is guaranteed schedulable.

Therefore Uthe tight utilization bound is P1/Pn



