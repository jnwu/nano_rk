   1               		.file	"hal_rf_wait_for_crystal_oscillator.c"
   2               	__SREG__ = 0x3f
   3               	__SP_H__ = 0x3e
   4               	__SP_L__ = 0x3d
   5               	__CCP__  = 0x34
   6               	__tmp_reg__ = 0
   7               	__zero_reg__ = 1
   8               		.global __do_copy_data
   9               		.global __do_clear_bss
  12               		.text
  13               	.Ltext0:
 117               	.global	halRfWaitForCrystalOscillator
 119               	halRfWaitForCrystalOscillator:
 120               		.stabd	46,0,0
   0:../../../src/radio/cc2420/source/hal_rf_wait_for_crystal_oscillator.c **** /******************************************************************************
   1:../../../src/radio/cc2420/source/hal_rf_wait_for_crystal_oscillator.c **** *  Nano-RK, a real-time operating system for sensor networks.
   2:../../../src/radio/cc2420/source/hal_rf_wait_for_crystal_oscillator.c **** *  Copyright (C) 2007, Real-Time and Multimedia Lab, Carnegie Mellon University
   3:../../../src/radio/cc2420/source/hal_rf_wait_for_crystal_oscillator.c **** *  All rights reserved.
   4:../../../src/radio/cc2420/source/hal_rf_wait_for_crystal_oscillator.c **** *
   5:../../../src/radio/cc2420/source/hal_rf_wait_for_crystal_oscillator.c **** *  This is the Open Source Version of Nano-RK included as part of a Dual
   6:../../../src/radio/cc2420/source/hal_rf_wait_for_crystal_oscillator.c **** *  Licensing Model. If you are unsure which license to use please refer to:
   7:../../../src/radio/cc2420/source/hal_rf_wait_for_crystal_oscillator.c **** *  http://www.nanork.org/nano-RK/wiki/Licensing
   8:../../../src/radio/cc2420/source/hal_rf_wait_for_crystal_oscillator.c **** *
   9:../../../src/radio/cc2420/source/hal_rf_wait_for_crystal_oscillator.c **** *  This program is free software: you can redistribute it and/or modify
  10:../../../src/radio/cc2420/source/hal_rf_wait_for_crystal_oscillator.c **** *  it under the terms of the GNU General Public License as published by
  11:../../../src/radio/cc2420/source/hal_rf_wait_for_crystal_oscillator.c **** *  the Free Software Foundation, version 2.0 of the License.
  12:../../../src/radio/cc2420/source/hal_rf_wait_for_crystal_oscillator.c **** *
  13:../../../src/radio/cc2420/source/hal_rf_wait_for_crystal_oscillator.c **** *  This program is distributed in the hope that it will be useful,
  14:../../../src/radio/cc2420/source/hal_rf_wait_for_crystal_oscillator.c **** *  but WITHOUT ANY WARRANTY; without even the implied warranty of
  15:../../../src/radio/cc2420/source/hal_rf_wait_for_crystal_oscillator.c **** *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  16:../../../src/radio/cc2420/source/hal_rf_wait_for_crystal_oscillator.c **** *  GNU General Public License for more details.
  17:../../../src/radio/cc2420/source/hal_rf_wait_for_crystal_oscillator.c **** *
  18:../../../src/radio/cc2420/source/hal_rf_wait_for_crystal_oscillator.c **** *  You should have received a copy of the GNU General Public License
  19:../../../src/radio/cc2420/source/hal_rf_wait_for_crystal_oscillator.c **** *  along with this program.  If not, see <http://www.gnu.org/licenses/>.
  20:../../../src/radio/cc2420/source/hal_rf_wait_for_crystal_oscillator.c **** *
  21:../../../src/radio/cc2420/source/hal_rf_wait_for_crystal_oscillator.c **** *  Contributing Authors (specific to this file):
  22:../../../src/radio/cc2420/source/hal_rf_wait_for_crystal_oscillator.c **** *  Chipcon Development Team
  23:../../../src/radio/cc2420/source/hal_rf_wait_for_crystal_oscillator.c **** *******************************************************************************/
  24:../../../src/radio/cc2420/source/hal_rf_wait_for_crystal_oscillator.c **** 
  25:../../../src/radio/cc2420/source/hal_rf_wait_for_crystal_oscillator.c **** #include <include.h>
  26:../../../src/radio/cc2420/source/hal_rf_wait_for_crystal_oscillator.c **** #include <ulib.h>
  27:../../../src/radio/cc2420/source/hal_rf_wait_for_crystal_oscillator.c **** 
  28:../../../src/radio/cc2420/source/hal_rf_wait_for_crystal_oscillator.c **** //-------------------------------------------------------------------------------------------------
  29:../../../src/radio/cc2420/source/hal_rf_wait_for_crystal_oscillator.c **** //	void rfWaitForCrystalOscillator(void)
  30:../../../src/radio/cc2420/source/hal_rf_wait_for_crystal_oscillator.c **** //
  31:../../../src/radio/cc2420/source/hal_rf_wait_for_crystal_oscillator.c **** //	DESCRIPTION:
  32:../../../src/radio/cc2420/source/hal_rf_wait_for_crystal_oscillator.c **** //		Waits for the crystal oscillator to become stable. The flag is polled via the SPI status byte.
  33:../../../src/radio/cc2420/source/hal_rf_wait_for_crystal_oscillator.c **** //
  34:../../../src/radio/cc2420/source/hal_rf_wait_for_crystal_oscillator.c **** //      Note that this function will lock up if the SXOSCON command strobe has not been given befor
  35:../../../src/radio/cc2420/source/hal_rf_wait_for_crystal_oscillator.c **** //      function call. Also note that global interrupts will always be enabled when this function
  36:../../../src/radio/cc2420/source/hal_rf_wait_for_crystal_oscillator.c **** //      returns.
  37:../../../src/radio/cc2420/source/hal_rf_wait_for_crystal_oscillator.c **** //-------------------------------------------------------------------------------------------------
  38:../../../src/radio/cc2420/source/hal_rf_wait_for_crystal_oscillator.c **** void halRfWaitForCrystalOscillator(void)
  39:../../../src/radio/cc2420/source/hal_rf_wait_for_crystal_oscillator.c **** {
 122               	.LM0:
 123               	.LFBB1:
 124               	/* prologue: function */
 125               	/* frame size = 0 */
 126               	.L3:
  40:../../../src/radio/cc2420/source/hal_rf_wait_for_crystal_oscillator.c ****     uint8_t spiStatusByte;
  41:../../../src/radio/cc2420/source/hal_rf_wait_for_crystal_oscillator.c **** 
  42:../../../src/radio/cc2420/source/hal_rf_wait_for_crystal_oscillator.c ****     // Poll the SPI status byte until the crystal oscillator is stable
  43:../../../src/radio/cc2420/source/hal_rf_wait_for_crystal_oscillator.c ****     do
  44:../../../src/radio/cc2420/source/hal_rf_wait_for_crystal_oscillator.c ****     {
  45:../../../src/radio/cc2420/source/hal_rf_wait_for_crystal_oscillator.c ****         DISABLE_GLOBAL_INT();
 128               	.LM1:
 129               	/* #APP */
 130               	 ;  46 "../../../src/radio/cc2420/source/hal_rf_wait_for_crystal_oscillator.c" 1
 131 0000 F894      		cli
 132               		
 133               	 ;  0 "" 2
  46:../../../src/radio/cc2420/source/hal_rf_wait_for_crystal_oscillator.c ****         FASTSPI_UPD_STATUS(spiStatusByte);
 135               	.LM2:
 136               	/* #NOAPP */
 137 0002 C098      		cbi 56-32,0
 138 0004 1FB8      		out 47-32,__zero_reg__
 139               	.L2:
 140 0006 779B      		sbis 46-32,7
 141 0008 00C0      		rjmp .L2
 142 000a 8FB1      		in r24,47-32
 143 000c C09A      		sbi 56-32,0
  47:../../../src/radio/cc2420/source/hal_rf_wait_for_crystal_oscillator.c ****         ENABLE_GLOBAL_INT();
 145               	.LM3:
 146               	/* #APP */
 147               	 ;  48 "../../../src/radio/cc2420/source/hal_rf_wait_for_crystal_oscillator.c" 1
 148 000e 7894      		sei
 149               		
 150               	 ;  0 "" 2
  48:../../../src/radio/cc2420/source/hal_rf_wait_for_crystal_oscillator.c ****     }
  49:../../../src/radio/cc2420/source/hal_rf_wait_for_crystal_oscillator.c ****     while (!(spiStatusByte & (BM(CC2420_XOSC16M_STABLE))));
 152               	.LM4:
 153               	/* #NOAPP */
 154 0010 86FF      		sbrs r24,6
 155 0012 00C0      		rjmp .L3
 156               	/* epilogue start */
  50:../../../src/radio/cc2420/source/hal_rf_wait_for_crystal_oscillator.c **** 
  51:../../../src/radio/cc2420/source/hal_rf_wait_for_crystal_oscillator.c **** } // halRfWaitForCrystalOscillator
 158               	.LM5:
 159 0014 0895      		ret
 164               	.Lscope1:
 166               		.stabd	78,0,0
 167               		.comm _nrk_signal_list,4,1
 170               	.Letext0:
DEFINED SYMBOLS
                            *ABS*:00000000 hal_rf_wait_for_crystal_oscillator.c
     /tmp/ccrEtKqc.s:2      *ABS*:0000003f __SREG__
     /tmp/ccrEtKqc.s:3      *ABS*:0000003e __SP_H__
     /tmp/ccrEtKqc.s:4      *ABS*:0000003d __SP_L__
     /tmp/ccrEtKqc.s:5      *ABS*:00000034 __CCP__
     /tmp/ccrEtKqc.s:6      *ABS*:00000000 __tmp_reg__
     /tmp/ccrEtKqc.s:7      *ABS*:00000001 __zero_reg__
     /tmp/ccrEtKqc.s:119    .text:00000000 halRfWaitForCrystalOscillator
                            *COM*:00000004 _nrk_signal_list

UNDEFINED SYMBOLS
__do_copy_data
__do_clear_bss
