   1               		.file	"nrk_timer.c"
   2               	__SREG__ = 0x3f
   3               	__SP_H__ = 0x3e
   4               	__SP_L__ = 0x3d
   5               	__CCP__ = 0x34
   6               	__tmp_reg__ = 0
   7               	__zero_reg__ = 1
  10               		.text
  11               	.Ltext0:
 137               	.global	nrk_spin_wait_us
 139               	nrk_spin_wait_us:
 140               		.stabd	46,0,0
   1:../../../src/kernel/hal/atmega128/nrk_timer.c **** /******************************************************************************
   2:../../../src/kernel/hal/atmega128/nrk_timer.c **** *  Nano-RK, a real-time operating system for sensor networks.
   3:../../../src/kernel/hal/atmega128/nrk_timer.c **** *  Copyright (C) 2007, Real-Time and Multimedia Lab, Carnegie Mellon University
   4:../../../src/kernel/hal/atmega128/nrk_timer.c **** *  All rights reserved.
   5:../../../src/kernel/hal/atmega128/nrk_timer.c **** *
   6:../../../src/kernel/hal/atmega128/nrk_timer.c **** *  This is the Open Source Version of Nano-RK included as part of a Dual
   7:../../../src/kernel/hal/atmega128/nrk_timer.c **** *  Licensing Model. If you are unsure which license to use please refer to:
   8:../../../src/kernel/hal/atmega128/nrk_timer.c **** *  http://www.nanork.org/nano-RK/wiki/Licensing
   9:../../../src/kernel/hal/atmega128/nrk_timer.c **** *
  10:../../../src/kernel/hal/atmega128/nrk_timer.c **** *  This program is free software: you can redistribute it and/or modify
  11:../../../src/kernel/hal/atmega128/nrk_timer.c **** *  it under the terms of the GNU General Public License as published by
  12:../../../src/kernel/hal/atmega128/nrk_timer.c **** *  the Free Software Foundation, version 2.0 of the License.
  13:../../../src/kernel/hal/atmega128/nrk_timer.c **** *
  14:../../../src/kernel/hal/atmega128/nrk_timer.c **** *  This program is distributed in the hope that it will be useful,
  15:../../../src/kernel/hal/atmega128/nrk_timer.c **** *  but WITHOUT ANY WARRANTY; without even the implied warranty of
  16:../../../src/kernel/hal/atmega128/nrk_timer.c **** *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  17:../../../src/kernel/hal/atmega128/nrk_timer.c **** *  GNU General Public License for more details.
  18:../../../src/kernel/hal/atmega128/nrk_timer.c **** *
  19:../../../src/kernel/hal/atmega128/nrk_timer.c **** *  You should have received a copy of the GNU General Public License
  20:../../../src/kernel/hal/atmega128/nrk_timer.c **** *  along with this program.  If not, see <http://www.gnu.org/licenses/>.
  21:../../../src/kernel/hal/atmega128/nrk_timer.c **** *
  22:../../../src/kernel/hal/atmega128/nrk_timer.c **** *  Contributing Authors (specific to this file):
  23:../../../src/kernel/hal/atmega128/nrk_timer.c **** *  Anthony Rowe
  24:../../../src/kernel/hal/atmega128/nrk_timer.c **** *  Zane Starr
  25:../../../src/kernel/hal/atmega128/nrk_timer.c **** *******************************************************************************/
  26:../../../src/kernel/hal/atmega128/nrk_timer.c **** 
  27:../../../src/kernel/hal/atmega128/nrk_timer.c **** 
  28:../../../src/kernel/hal/atmega128/nrk_timer.c **** #include <include.h>
  29:../../../src/kernel/hal/atmega128/nrk_timer.c **** #include <avr/interrupt.h>
  30:../../../src/kernel/hal/atmega128/nrk_timer.c **** #include <ulib.h>
  31:../../../src/kernel/hal/atmega128/nrk_timer.c **** #include <nrk_timer.h>
  32:../../../src/kernel/hal/atmega128/nrk_timer.c **** #include <nrk_error.h>
  33:../../../src/kernel/hal/atmega128/nrk_timer.c **** #include <nrk_cfg.h>
  34:../../../src/kernel/hal/atmega128/nrk_timer.c **** 
  35:../../../src/kernel/hal/atmega128/nrk_timer.c **** void nrk_spin_wait_us(uint16_t timeout)
  36:../../../src/kernel/hal/atmega128/nrk_timer.c **** {
 142               	.LM0:
 143               	.LFBB1:
 144               	/* prologue: function */
 145               	/* frame size = 0 */
 146               	/* stack size = 0 */
 147               	.L__stack_usage = 0
 148               	.L2:
  37:../../../src/kernel/hal/atmega128/nrk_timer.c **** 
  38:../../../src/kernel/hal/atmega128/nrk_timer.c ****     // This sequence uses exactly 8 clock cycle for each round
  39:../../../src/kernel/hal/atmega128/nrk_timer.c ****     do
  40:../../../src/kernel/hal/atmega128/nrk_timer.c ****     {
  41:../../../src/kernel/hal/atmega128/nrk_timer.c ****         NOP();
 150               	.LM1:
 151               	/* #APP */
 152               	 ;  41 "../../../src/kernel/hal/atmega128/nrk_timer.c" 1
 153 0000 0000      		nop
 154               		
 155               	 ;  0 "" 2
  42:../../../src/kernel/hal/atmega128/nrk_timer.c ****         NOP();
 157               	.LM2:
 158               	 ;  42 "../../../src/kernel/hal/atmega128/nrk_timer.c" 1
 159 0002 0000      		nop
 160               		
 161               	 ;  0 "" 2
  43:../../../src/kernel/hal/atmega128/nrk_timer.c ****         NOP();
 163               	.LM3:
 164               	 ;  43 "../../../src/kernel/hal/atmega128/nrk_timer.c" 1
 165 0004 0000      		nop
 166               		
 167               	 ;  0 "" 2
  44:../../../src/kernel/hal/atmega128/nrk_timer.c ****         NOP();
 169               	.LM4:
 170               	 ;  44 "../../../src/kernel/hal/atmega128/nrk_timer.c" 1
 171 0006 0000      		nop
 172               		
 173               	 ;  0 "" 2
  45:../../../src/kernel/hal/atmega128/nrk_timer.c ****     }
  46:../../../src/kernel/hal/atmega128/nrk_timer.c ****     while (--timeout);
 175               	.LM5:
 176               	/* #NOAPP */
 177 0008 0197      		sbiw r24,1
 178 000a 01F4      		brne .L2
 179               	/* epilogue start */
  47:../../../src/kernel/hal/atmega128/nrk_timer.c **** 
  48:../../../src/kernel/hal/atmega128/nrk_timer.c **** }
 181               	.LM6:
 182 000c 0895      		ret
 184               	.Lscope1:
 186               		.stabd	78,0,0
 188               	.global	_nrk_high_speed_timer_stop
 190               	_nrk_high_speed_timer_stop:
 191               		.stabd	46,0,0
  49:../../../src/kernel/hal/atmega128/nrk_timer.c **** 
  50:../../../src/kernel/hal/atmega128/nrk_timer.c **** 
  51:../../../src/kernel/hal/atmega128/nrk_timer.c **** void _nrk_setup_timer()
  52:../../../src/kernel/hal/atmega128/nrk_timer.c **** {
  53:../../../src/kernel/hal/atmega128/nrk_timer.c ****     _nrk_prev_timer_val=254;
  54:../../../src/kernel/hal/atmega128/nrk_timer.c **** 
  55:../../../src/kernel/hal/atmega128/nrk_timer.c **** // Timer 0 Setup as Asynchronous timer running from 32Khz Clock
  56:../../../src/kernel/hal/atmega128/nrk_timer.c ****     ASSR = BM(AS0);
  57:../../../src/kernel/hal/atmega128/nrk_timer.c ****     OCR0 = _nrk_prev_timer_val;
  58:../../../src/kernel/hal/atmega128/nrk_timer.c ****     TIFR =   BM(OCF0) | BM(TOV0);       // Clear interrupt flag
  59:../../../src/kernel/hal/atmega128/nrk_timer.c ****     // TOP = OCR0, OCR0 update immediate, Overflow is set on MAX (255), Prescaler 32, Clear timer o
  60:../../../src/kernel/hal/atmega128/nrk_timer.c ****     TCCR0 = BM(WGM01) | BM(CS01) | BM(CS00);
  61:../../../src/kernel/hal/atmega128/nrk_timer.c ****     SFIOR |= TSM;              // reset prescaler
  62:../../../src/kernel/hal/atmega128/nrk_timer.c **** 
  63:../../../src/kernel/hal/atmega128/nrk_timer.c ****     // Clear interrupt flag
  64:../../../src/kernel/hal/atmega128/nrk_timer.c **** //    TIFR =   BM(OCF0) | BM(TOV0);
  65:../../../src/kernel/hal/atmega128/nrk_timer.c ****     // reset counter on interrupt, set divider to 128
  66:../../../src/kernel/hal/atmega128/nrk_timer.c **** //    TCCR0 = BM(WGM01) | BM(CS01) | BM(CS00);
  67:../../../src/kernel/hal/atmega128/nrk_timer.c ****     // reset prescaler
  68:../../../src/kernel/hal/atmega128/nrk_timer.c **** //    SFIOR |= TSM;
  69:../../../src/kernel/hal/atmega128/nrk_timer.c **** 
  70:../../../src/kernel/hal/atmega128/nrk_timer.c **** // Timer 1 High Precision Timer
  71:../../../src/kernel/hal/atmega128/nrk_timer.c **** // No interrupt, prescaler 1, Normal Operation
  72:../../../src/kernel/hal/atmega128/nrk_timer.c ****     TCCR1A=0;
  73:../../../src/kernel/hal/atmega128/nrk_timer.c ****     TCCR1B=BM(CS10);  // clk I/O no prescale
  74:../../../src/kernel/hal/atmega128/nrk_timer.c ****     TCNT1=0;  // 16 bit
  75:../../../src/kernel/hal/atmega128/nrk_timer.c ****     SFIOR |= BM(PSR321);              // reset prescaler
  76:../../../src/kernel/hal/atmega128/nrk_timer.c **** 
  77:../../../src/kernel/hal/atmega128/nrk_timer.c ****     _nrk_os_timer_reset();
  78:../../../src/kernel/hal/atmega128/nrk_timer.c ****     _nrk_os_timer_start();
  79:../../../src/kernel/hal/atmega128/nrk_timer.c ****     _nrk_time_trigger=0;
  80:../../../src/kernel/hal/atmega128/nrk_timer.c **** }
  81:../../../src/kernel/hal/atmega128/nrk_timer.c **** 
  82:../../../src/kernel/hal/atmega128/nrk_timer.c **** void _nrk_high_speed_timer_stop()
  83:../../../src/kernel/hal/atmega128/nrk_timer.c **** {
 193               	.LM7:
 194               	.LFBB2:
 195               	/* prologue: function */
 196               	/* frame size = 0 */
 197               	/* stack size = 0 */
 198               	.L__stack_usage = 0
  84:../../../src/kernel/hal/atmega128/nrk_timer.c ****     TCCR1B=0;  // no clock
 200               	.LM8:
 201 000e 1EBC      		out 78-32,__zero_reg__
 202               	/* epilogue start */
  85:../../../src/kernel/hal/atmega128/nrk_timer.c **** }
 204               	.LM9:
 205 0010 0895      		ret
 207               	.Lscope2:
 209               		.stabd	78,0,0
 211               	.global	_nrk_high_speed_timer_start
 213               	_nrk_high_speed_timer_start:
 214               		.stabd	46,0,0
  86:../../../src/kernel/hal/atmega128/nrk_timer.c **** 
  87:../../../src/kernel/hal/atmega128/nrk_timer.c **** void _nrk_high_speed_timer_start()
  88:../../../src/kernel/hal/atmega128/nrk_timer.c **** {
 216               	.LM10:
 217               	.LFBB3:
 218               	/* prologue: function */
 219               	/* frame size = 0 */
 220               	/* stack size = 0 */
 221               	.L__stack_usage = 0
  89:../../../src/kernel/hal/atmega128/nrk_timer.c ****     TCCR1B=BM(CS10);  // clk I/O no prescaler
 223               	.LM11:
 224 0012 81E0      		ldi r24,lo8(1)
 225 0014 8EBD      		out 78-32,r24
 226               	/* epilogue start */
  90:../../../src/kernel/hal/atmega128/nrk_timer.c **** }
 228               	.LM12:
 229 0016 0895      		ret
 231               	.Lscope3:
 233               		.stabd	78,0,0
 235               	.global	_nrk_high_speed_timer_reset
 237               	_nrk_high_speed_timer_reset:
 238               		.stabd	46,0,0
  91:../../../src/kernel/hal/atmega128/nrk_timer.c **** 
  92:../../../src/kernel/hal/atmega128/nrk_timer.c **** 
  93:../../../src/kernel/hal/atmega128/nrk_timer.c **** void _nrk_high_speed_timer_reset()
  94:../../../src/kernel/hal/atmega128/nrk_timer.c **** {
 240               	.LM13:
 241               	.LFBB4:
 242               	/* prologue: function */
 243               	/* frame size = 0 */
 244               	/* stack size = 0 */
 245               	.L__stack_usage = 0
  95:../../../src/kernel/hal/atmega128/nrk_timer.c ****     //nrk_int_disable();
  96:../../../src/kernel/hal/atmega128/nrk_timer.c ****     SFIOR |= BM(PSR321);              // reset prescaler
 247               	.LM14:
 248 0018 80B5      		in r24,64-32
 249 001a 8160      		ori r24,lo8(1)
 250 001c 80BD      		out 64-32,r24
  97:../../../src/kernel/hal/atmega128/nrk_timer.c ****     TCNT1=0;
 252               	.LM15:
 253 001e 1DBC      		out 76+1-32,__zero_reg__
 254 0020 1CBC      		out 76-32,__zero_reg__
 255               	/* epilogue start */
  98:../../../src/kernel/hal/atmega128/nrk_timer.c ****     //nrk_int_enable();
  99:../../../src/kernel/hal/atmega128/nrk_timer.c **** }
 257               	.LM16:
 258 0022 0895      		ret
 260               	.Lscope4:
 262               		.stabd	78,0,0
 264               	.global	_nrk_high_speed_timer_get
 266               	_nrk_high_speed_timer_get:
 267               		.stabd	46,0,0
 100:../../../src/kernel/hal/atmega128/nrk_timer.c **** 
 101:../../../src/kernel/hal/atmega128/nrk_timer.c **** /**
 102:../../../src/kernel/hal/atmega128/nrk_timer.c ****   This function blocks for n ticks of the high speed timer after the
 103:../../../src/kernel/hal/atmega128/nrk_timer.c ****   start number of ticks.  It will handle the overflow that can occur.
 104:../../../src/kernel/hal/atmega128/nrk_timer.c ****   Do not use this for delays longer than 8ms!
 105:../../../src/kernel/hal/atmega128/nrk_timer.c **** */
 106:../../../src/kernel/hal/atmega128/nrk_timer.c **** void nrk_high_speed_timer_wait( uint16_t start, uint16_t ticks )
 107:../../../src/kernel/hal/atmega128/nrk_timer.c **** {
 108:../../../src/kernel/hal/atmega128/nrk_timer.c ****     uint32_t tmp;
 109:../../../src/kernel/hal/atmega128/nrk_timer.c ****     if(start>65400) start=0;
 110:../../../src/kernel/hal/atmega128/nrk_timer.c ****     tmp=(uint32_t)start+(uint32_t)ticks;
 111:../../../src/kernel/hal/atmega128/nrk_timer.c ****     if(tmp>65536)
 112:../../../src/kernel/hal/atmega128/nrk_timer.c ****     {
 113:../../../src/kernel/hal/atmega128/nrk_timer.c ****         tmp-=65536;
 114:../../../src/kernel/hal/atmega128/nrk_timer.c ****         do {}
 115:../../../src/kernel/hal/atmega128/nrk_timer.c ****         while(_nrk_high_speed_timer_get()>start);
 116:../../../src/kernel/hal/atmega128/nrk_timer.c ****     }
 117:../../../src/kernel/hal/atmega128/nrk_timer.c **** 
 118:../../../src/kernel/hal/atmega128/nrk_timer.c ****     ticks=tmp;
 119:../../../src/kernel/hal/atmega128/nrk_timer.c ****     do {}
 120:../../../src/kernel/hal/atmega128/nrk_timer.c ****     while(_nrk_high_speed_timer_get()<ticks);
 121:../../../src/kernel/hal/atmega128/nrk_timer.c **** }
 122:../../../src/kernel/hal/atmega128/nrk_timer.c **** 
 123:../../../src/kernel/hal/atmega128/nrk_timer.c **** inline uint16_t _nrk_high_speed_timer_get()
 124:../../../src/kernel/hal/atmega128/nrk_timer.c **** {
 269               	.LM17:
 270               	.LFBB5:
 271 0024 DF93      		push r29
 272 0026 CF93      		push r28
 273 0028 00D0      		rcall .
 274 002a CDB7      		in r28,__SP_L__
 275 002c DEB7      		in r29,__SP_H__
 276               	/* prologue: function */
 277               	/* frame size = 2 */
 278               	/* stack size = 4 */
 279               	.L__stack_usage = 4
 125:../../../src/kernel/hal/atmega128/nrk_timer.c ****     volatile uint16_t tmp;
 126:../../../src/kernel/hal/atmega128/nrk_timer.c ****     //nrk_int_disable();
 127:../../../src/kernel/hal/atmega128/nrk_timer.c ****     tmp=TCNT1;
 281               	.LM18:
 282 002e 8CB5      		in r24,76-32
 283 0030 9DB5      		in r25,76+1-32
 284 0032 9A83      		std Y+2,r25
 285 0034 8983      		std Y+1,r24
 128:../../../src/kernel/hal/atmega128/nrk_timer.c ****     //nrk_int_enable();
 129:../../../src/kernel/hal/atmega128/nrk_timer.c ****     return tmp;
 287               	.LM19:
 288 0036 2981      		ldd r18,Y+1
 289 0038 3A81      		ldd r19,Y+2
 130:../../../src/kernel/hal/atmega128/nrk_timer.c **** }
 291               	.LM20:
 292 003a C901      		movw r24,r18
 293               	/* epilogue start */
 294 003c 0F90      		pop __tmp_reg__
 295 003e 0F90      		pop __tmp_reg__
 296 0040 CF91      		pop r28
 297 0042 DF91      		pop r29
 298 0044 0895      		ret
 303               	.Lscope5:
 305               		.stabd	78,0,0
 309               	.global	nrk_high_speed_timer_wait
 311               	nrk_high_speed_timer_wait:
 312               		.stabd	46,0,0
 107:../../../src/kernel/hal/atmega128/nrk_timer.c **** {
 314               	.LM21:
 315               	.LFBB6:
 316 0046 EF92      		push r14
 317 0048 FF92      		push r15
 318 004a 0F93      		push r16
 319 004c 1F93      		push r17
 320 004e CF93      		push r28
 321 0050 DF93      		push r29
 322               	/* prologue: function */
 323               	/* frame size = 0 */
 324               	/* stack size = 6 */
 325               	.L__stack_usage = 6
 326 0052 EC01      		movw r28,r24
 109:../../../src/kernel/hal/atmega128/nrk_timer.c ****     if(start>65400) start=0;
 328               	.LM22:
 329 0054 8FEF      		ldi r24,hi8(-135)
 330 0056 C937      		cpi r28,lo8(-135)
 331 0058 D807      		cpc r29,r24
 332 005a 00F0      		brlo .L9
 333 005c C0E0      		ldi r28,lo8(0)
 334 005e D0E0      		ldi r29,hi8(0)
 335               	.L9:
 110:../../../src/kernel/hal/atmega128/nrk_timer.c ****     tmp=(uint32_t)start+(uint32_t)ticks;
 337               	.LM23:
 338 0060 7E01      		movw r14,r28
 339 0062 00E0      		ldi r16,lo8(0)
 340 0064 10E0      		ldi r17,hi8(0)
 341 0066 80E0      		ldi r24,lo8(0)
 342 0068 90E0      		ldi r25,hi8(0)
 343 006a E60E      		add r14,r22
 344 006c F71E      		adc r15,r23
 345 006e 081F      		adc r16,r24
 346 0070 191F      		adc r17,r25
 111:../../../src/kernel/hal/atmega128/nrk_timer.c ****     if(tmp>65536)
 348               	.LM24:
 349 0072 91E0      		ldi r25,lo8(65537)
 350 0074 E916      		cp r14,r25
 351 0076 90E0      		ldi r25,hi8(65537)
 352 0078 F906      		cpc r15,r25
 353 007a 91E0      		ldi r25,hlo8(65537)
 354 007c 0907      		cpc r16,r25
 355 007e 90E0      		ldi r25,hhi8(65537)
 356 0080 1907      		cpc r17,r25
 357 0082 00F0      		brlo .L12
 113:../../../src/kernel/hal/atmega128/nrk_timer.c ****         tmp-=65536;
 359               	.LM25:
 360 0084 80E0      		ldi r24,lo8(-65536)
 361 0086 90E0      		ldi r25,hi8(-65536)
 362 0088 AFEF      		ldi r26,hlo8(-65536)
 363 008a BFEF      		ldi r27,hhi8(-65536)
 364 008c E80E      		add r14,r24
 365 008e F91E      		adc r15,r25
 366 0090 0A1F      		adc r16,r26
 367 0092 1B1F      		adc r17,r27
 368               	.L11:
 115:../../../src/kernel/hal/atmega128/nrk_timer.c ****         while(_nrk_high_speed_timer_get()>start);
 370               	.LM26:
 371 0094 0E94 0000 		call _nrk_high_speed_timer_get
 372 0098 C817      		cp r28,r24
 373 009a D907      		cpc r29,r25
 374 009c 00F0      		brlo .L11
 375               	.L12:
 120:../../../src/kernel/hal/atmega128/nrk_timer.c ****     while(_nrk_high_speed_timer_get()<ticks);
 377               	.LM27:
 378 009e 0E94 0000 		call _nrk_high_speed_timer_get
 379 00a2 8E15      		cp r24,r14
 380 00a4 9F05      		cpc r25,r15
 381 00a6 00F0      		brlo .L12
 382               	/* epilogue start */
 121:../../../src/kernel/hal/atmega128/nrk_timer.c **** }
 384               	.LM28:
 385 00a8 DF91      		pop r29
 386 00aa CF91      		pop r28
 387 00ac 1F91      		pop r17
 388 00ae 0F91      		pop r16
 389 00b0 FF90      		pop r15
 390 00b2 EF90      		pop r14
 391 00b4 0895      		ret
 396               	.Lscope6:
 398               		.stabd	78,0,0
 401               	.global	_nrk_os_timer_set
 403               	_nrk_os_timer_set:
 404               		.stabd	46,0,0
 131:../../../src/kernel/hal/atmega128/nrk_timer.c **** 
 132:../../../src/kernel/hal/atmega128/nrk_timer.c **** void _nrk_os_timer_set(uint8_t v)
 133:../../../src/kernel/hal/atmega128/nrk_timer.c **** {
 406               	.LM29:
 407               	.LFBB7:
 408               	/* prologue: function */
 409               	/* frame size = 0 */
 410               	/* stack size = 0 */
 411               	.L__stack_usage = 0
 134:../../../src/kernel/hal/atmega128/nrk_timer.c ****     TCNT0=v;
 413               	.LM30:
 414 00b6 82BF      		out 82-32,r24
 415               	/* epilogue start */
 135:../../../src/kernel/hal/atmega128/nrk_timer.c **** }
 417               	.LM31:
 418 00b8 0895      		ret
 420               	.Lscope7:
 422               		.stabd	78,0,0
 424               	.global	_nrk_os_timer_stop
 426               	_nrk_os_timer_stop:
 427               		.stabd	46,0,0
 136:../../../src/kernel/hal/atmega128/nrk_timer.c **** 
 137:../../../src/kernel/hal/atmega128/nrk_timer.c **** 
 138:../../../src/kernel/hal/atmega128/nrk_timer.c **** void _nrk_os_timer_stop()
 139:../../../src/kernel/hal/atmega128/nrk_timer.c **** {
 429               	.LM32:
 430               	.LFBB8:
 431               	/* prologue: function */
 432               	/* frame size = 0 */
 433               	/* stack size = 0 */
 434               	.L__stack_usage = 0
 140:../../../src/kernel/hal/atmega128/nrk_timer.c ****     TCCR0 = 0;  // stop clock
 436               	.LM33:
 437 00ba 13BE      		out 83-32,__zero_reg__
 141:../../../src/kernel/hal/atmega128/nrk_timer.c ****     TIMSK &=  ~BM(OCIE0) ;
 439               	.LM34:
 440 00bc 87B7      		in r24,87-32
 441 00be 8D7F      		andi r24,lo8(-3)
 442 00c0 87BF      		out 87-32,r24
 142:../../../src/kernel/hal/atmega128/nrk_timer.c ****     TIMSK &=  ~BM(TOIE0) ;
 444               	.LM35:
 445 00c2 87B7      		in r24,87-32
 446 00c4 8E7F      		andi r24,lo8(-2)
 447 00c6 87BF      		out 87-32,r24
 448               	/* epilogue start */
 143:../../../src/kernel/hal/atmega128/nrk_timer.c ****     //ASSR = 0;
 144:../../../src/kernel/hal/atmega128/nrk_timer.c **** }
 450               	.LM36:
 451 00c8 0895      		ret
 453               	.Lscope8:
 455               		.stabd	78,0,0
 457               	.global	_nrk_os_timer_start
 459               	_nrk_os_timer_start:
 460               		.stabd	46,0,0
 145:../../../src/kernel/hal/atmega128/nrk_timer.c **** //must also include timer3
 146:../../../src/kernel/hal/atmega128/nrk_timer.c **** void _nrk_os_timer_start()
 147:../../../src/kernel/hal/atmega128/nrk_timer.c **** {
 462               	.LM37:
 463               	.LFBB9:
 464               	/* prologue: function */
 465               	/* frame size = 0 */
 466               	/* stack size = 0 */
 467               	.L__stack_usage = 0
 148:../../../src/kernel/hal/atmega128/nrk_timer.c ****     TCCR0 = BM(WGM01) | BM(CS01) | BM(CS00); // set divider to 32
 469               	.LM38:
 470 00ca 8BE0      		ldi r24,lo8(11)
 471 00cc 83BF      		out 83-32,r24
 149:../../../src/kernel/hal/atmega128/nrk_timer.c ****     TIMSK =  TIMSK| BM(OCIE0) | BM(TOIE0) ;//| BM(TICIE1);    // Enable interrupt
 473               	.LM39:
 474 00ce 87B7      		in r24,87-32
 475 00d0 8360      		ori r24,lo8(3)
 476 00d2 87BF      		out 87-32,r24
 477               	/* epilogue start */
 150:../../../src/kernel/hal/atmega128/nrk_timer.c **** }
 479               	.LM40:
 480 00d4 0895      		ret
 482               	.Lscope9:
 484               		.stabd	78,0,0
 486               	.global	_nrk_os_timer_reset
 488               	_nrk_os_timer_reset:
 489               		.stabd	46,0,0
 151:../../../src/kernel/hal/atmega128/nrk_timer.c **** 
 152:../../../src/kernel/hal/atmega128/nrk_timer.c **** inline void _nrk_os_timer_reset()
 153:../../../src/kernel/hal/atmega128/nrk_timer.c **** {
 491               	.LM41:
 492               	.LFBB10:
 493               	/* prologue: function */
 494               	/* frame size = 0 */
 495               	/* stack size = 0 */
 496               	.L__stack_usage = 0
 154:../../../src/kernel/hal/atmega128/nrk_timer.c **** 
 155:../../../src/kernel/hal/atmega128/nrk_timer.c ****     SFIOR |= BM(PSR0);              // reset prescaler
 498               	.LM42:
 499 00d6 80B5      		in r24,64-32
 500 00d8 8260      		ori r24,lo8(2)
 501 00da 80BD      		out 64-32,r24
 156:../../../src/kernel/hal/atmega128/nrk_timer.c ****     TCNT0 = 0;                  // reset counter
 503               	.LM43:
 504 00dc 12BE      		out 82-32,__zero_reg__
 157:../../../src/kernel/hal/atmega128/nrk_timer.c ****     _nrk_time_trigger=0;
 506               	.LM44:
 507 00de 1092 0000 		sts _nrk_time_trigger,__zero_reg__
 158:../../../src/kernel/hal/atmega128/nrk_timer.c ****     _nrk_prev_timer_val=0;
 509               	.LM45:
 510 00e2 1092 0000 		sts _nrk_prev_timer_val,__zero_reg__
 511               	/* epilogue start */
 159:../../../src/kernel/hal/atmega128/nrk_timer.c **** }
 513               	.LM46:
 514 00e6 0895      		ret
 516               	.Lscope10:
 518               		.stabd	78,0,0
 520               	.global	_nrk_setup_timer
 522               	_nrk_setup_timer:
 523               		.stabd	46,0,0
  52:../../../src/kernel/hal/atmega128/nrk_timer.c **** {
 525               	.LM47:
 526               	.LFBB11:
 527               	/* prologue: function */
 528               	/* frame size = 0 */
 529               	/* stack size = 0 */
 530               	.L__stack_usage = 0
  53:../../../src/kernel/hal/atmega128/nrk_timer.c ****     _nrk_prev_timer_val=254;
 532               	.LM48:
 533 00e8 8EEF      		ldi r24,lo8(-2)
 534 00ea 8093 0000 		sts _nrk_prev_timer_val,r24
  56:../../../src/kernel/hal/atmega128/nrk_timer.c ****     ASSR = BM(AS0);
 536               	.LM49:
 537 00ee 98E0      		ldi r25,lo8(8)
 538 00f0 90BF      		out 80-32,r25
  57:../../../src/kernel/hal/atmega128/nrk_timer.c ****     OCR0 = _nrk_prev_timer_val;
 540               	.LM50:
 541 00f2 81BF      		out 81-32,r24
  58:../../../src/kernel/hal/atmega128/nrk_timer.c ****     TIFR =   BM(OCF0) | BM(TOV0);       // Clear interrupt flag
 543               	.LM51:
 544 00f4 83E0      		ldi r24,lo8(3)
 545 00f6 86BF      		out 86-32,r24
  60:../../../src/kernel/hal/atmega128/nrk_timer.c ****     TCCR0 = BM(WGM01) | BM(CS01) | BM(CS00);
 547               	.LM52:
 548 00f8 8BE0      		ldi r24,lo8(11)
 549 00fa 83BF      		out 83-32,r24
  61:../../../src/kernel/hal/atmega128/nrk_timer.c ****     SFIOR |= TSM;              // reset prescaler
 551               	.LM53:
 552 00fc 80B5      		in r24,64-32
 553 00fe 8760      		ori r24,lo8(7)
 554 0100 80BD      		out 64-32,r24
  72:../../../src/kernel/hal/atmega128/nrk_timer.c ****     TCCR1A=0;
 556               	.LM54:
 557 0102 1FBC      		out 79-32,__zero_reg__
  73:../../../src/kernel/hal/atmega128/nrk_timer.c ****     TCCR1B=BM(CS10);  // clk I/O no prescale
 559               	.LM55:
 560 0104 81E0      		ldi r24,lo8(1)
 561 0106 8EBD      		out 78-32,r24
  74:../../../src/kernel/hal/atmega128/nrk_timer.c ****     TCNT1=0;  // 16 bit
 563               	.LM56:
 564 0108 1DBC      		out 76+1-32,__zero_reg__
 565 010a 1CBC      		out 76-32,__zero_reg__
  75:../../../src/kernel/hal/atmega128/nrk_timer.c ****     SFIOR |= BM(PSR321);              // reset prescaler
 567               	.LM57:
 568 010c 80B5      		in r24,64-32
 569 010e 8160      		ori r24,lo8(1)
 570 0110 80BD      		out 64-32,r24
  77:../../../src/kernel/hal/atmega128/nrk_timer.c ****     _nrk_os_timer_reset();
 572               	.LM58:
 573 0112 0E94 0000 		call _nrk_os_timer_reset
  78:../../../src/kernel/hal/atmega128/nrk_timer.c ****     _nrk_os_timer_start();
 575               	.LM59:
 576 0116 0E94 0000 		call _nrk_os_timer_start
  79:../../../src/kernel/hal/atmega128/nrk_timer.c ****     _nrk_time_trigger=0;
 578               	.LM60:
 579 011a 1092 0000 		sts _nrk_time_trigger,__zero_reg__
 580               	/* epilogue start */
  80:../../../src/kernel/hal/atmega128/nrk_timer.c **** }
 582               	.LM61:
 583 011e 0895      		ret
 585               	.Lscope11:
 587               		.stabd	78,0,0
 589               	.global	_nrk_precision_os_timer_reset
 591               	_nrk_precision_os_timer_reset:
 592               		.stabd	46,0,0
 160:../../../src/kernel/hal/atmega128/nrk_timer.c **** 
 161:../../../src/kernel/hal/atmega128/nrk_timer.c **** void _nrk_precision_os_timer_reset()
 162:../../../src/kernel/hal/atmega128/nrk_timer.c **** {
 594               	.LM62:
 595               	.LFBB12:
 596               	/* prologue: function */
 597               	/* frame size = 0 */
 598               	/* stack size = 0 */
 599               	.L__stack_usage = 0
 600               	/* epilogue start */
 163:../../../src/kernel/hal/atmega128/nrk_timer.c **** //   _nrk_os_timer_reset();
 164:../../../src/kernel/hal/atmega128/nrk_timer.c **** }
 602               	.LM63:
 603 0120 0895      		ret
 605               	.Lscope12:
 607               		.stabd	78,0,0
 609               	.global	_nrk_get_next_wakeup
 611               	_nrk_get_next_wakeup:
 612               		.stabd	46,0,0
 165:../../../src/kernel/hal/atmega128/nrk_timer.c **** 
 166:../../../src/kernel/hal/atmega128/nrk_timer.c **** 
 167:../../../src/kernel/hal/atmega128/nrk_timer.c **** uint8_t _nrk_get_next_wakeup()
 168:../../../src/kernel/hal/atmega128/nrk_timer.c **** {
 614               	.LM64:
 615               	.LFBB13:
 616               	/* prologue: function */
 617               	/* frame size = 0 */
 618               	/* stack size = 0 */
 619               	.L__stack_usage = 0
 169:../../../src/kernel/hal/atmega128/nrk_timer.c ****     return OCR0+1;      // pdiener: what's this +1 ?
 621               	.LM65:
 622 0122 81B7      		in r24,81-32
 170:../../../src/kernel/hal/atmega128/nrk_timer.c **** }
 624               	.LM66:
 625 0124 8F5F      		subi r24,lo8(-(1))
 626               	/* epilogue start */
 627 0126 0895      		ret
 629               	.Lscope13:
 631               		.stabd	78,0,0
 634               	.global	_nrk_set_next_wakeup
 636               	_nrk_set_next_wakeup:
 637               		.stabd	46,0,0
 171:../../../src/kernel/hal/atmega128/nrk_timer.c **** 
 172:../../../src/kernel/hal/atmega128/nrk_timer.c **** void _nrk_set_next_wakeup(uint8_t nw)
 173:../../../src/kernel/hal/atmega128/nrk_timer.c **** {
 639               	.LM67:
 640               	.LFBB14:
 641               	/* prologue: function */
 642               	/* frame size = 0 */
 643               	/* stack size = 0 */
 644               	.L__stack_usage = 0
 174:../../../src/kernel/hal/atmega128/nrk_timer.c ****     OCR0 = nw-1;        // pdiener: what's this -1 ?
 646               	.LM68:
 647 0128 8150      		subi r24,lo8(-(-1))
 648 012a 81BF      		out 81-32,r24
 649               	/* epilogue start */
 175:../../../src/kernel/hal/atmega128/nrk_timer.c **** }
 651               	.LM69:
 652 012c 0895      		ret
 654               	.Lscope14:
 656               		.stabd	78,0,0
 658               	.global	_nrk_os_timer_get
 660               	_nrk_os_timer_get:
 661               		.stabd	46,0,0
 176:../../../src/kernel/hal/atmega128/nrk_timer.c **** 
 177:../../../src/kernel/hal/atmega128/nrk_timer.c **** 
 178:../../../src/kernel/hal/atmega128/nrk_timer.c **** 
 179:../../../src/kernel/hal/atmega128/nrk_timer.c **** inline uint8_t _nrk_os_timer_get()
 180:../../../src/kernel/hal/atmega128/nrk_timer.c **** {
 663               	.LM70:
 664               	.LFBB15:
 665               	/* prologue: function */
 666               	/* frame size = 0 */
 667               	/* stack size = 0 */
 668               	.L__stack_usage = 0
 181:../../../src/kernel/hal/atmega128/nrk_timer.c ****     return TCNT0;
 670               	.LM71:
 671 012e 82B7      		in r24,82-32
 672               	/* epilogue start */
 182:../../../src/kernel/hal/atmega128/nrk_timer.c **** }
 674               	.LM72:
 675 0130 0895      		ret
 677               	.Lscope15:
 679               		.stabd	78,0,0
 681               	.global	__vector_default
 683               	__vector_default:
 684               		.stabd	46,0,0
 183:../../../src/kernel/hal/atmega128/nrk_timer.c **** 
 184:../../../src/kernel/hal/atmega128/nrk_timer.c **** //-------------------------------------------------------------------------------------------------
 185:../../../src/kernel/hal/atmega128/nrk_timer.c **** //  Default ISR
 186:../../../src/kernel/hal/atmega128/nrk_timer.c **** //-------------------------------------------------------------------------------------------------
 187:../../../src/kernel/hal/atmega128/nrk_timer.c **** SIGNAL(__vector_default)
 188:../../../src/kernel/hal/atmega128/nrk_timer.c **** {
 686               	.LM73:
 687               	.LFBB16:
 688 0132 1F92      		push __zero_reg__
 689 0134 0F92      		push r0
 690 0136 0FB6      		in r0,__SREG__
 691 0138 0F92      		push r0
 692 013a 0BB6      		in r0,91-32
 693 013c 0F92      		push r0
 694 013e 1124      		clr __zero_reg__
 695 0140 2F93      		push r18
 696 0142 3F93      		push r19
 697 0144 4F93      		push r20
 698 0146 5F93      		push r21
 699 0148 6F93      		push r22
 700 014a 7F93      		push r23
 701 014c 8F93      		push r24
 702 014e 9F93      		push r25
 703 0150 AF93      		push r26
 704 0152 BF93      		push r27
 705 0154 EF93      		push r30
 706 0156 FF93      		push r31
 707               	/* prologue: Signal */
 708               	/* frame size = 0 */
 709               	/* stack size = 16 */
 710               	.L__stack_usage = 16
 189:../../../src/kernel/hal/atmega128/nrk_timer.c ****     nrk_kernel_error_add(NRK_SEG_FAULT,0);
 712               	.LM74:
 713 0158 8AE0      		ldi r24,lo8(10)
 714 015a 60E0      		ldi r22,lo8(0)
 715 015c 0E94 0000 		call nrk_kernel_error_add
 716               	/* epilogue start */
 190:../../../src/kernel/hal/atmega128/nrk_timer.c **** }
 718               	.LM75:
 719 0160 FF91      		pop r31
 720 0162 EF91      		pop r30
 721 0164 BF91      		pop r27
 722 0166 AF91      		pop r26
 723 0168 9F91      		pop r25
 724 016a 8F91      		pop r24
 725 016c 7F91      		pop r23
 726 016e 6F91      		pop r22
 727 0170 5F91      		pop r21
 728 0172 4F91      		pop r20
 729 0174 3F91      		pop r19
 730 0176 2F91      		pop r18
 731 0178 0F90      		pop r0
 732 017a 0BBE      		out 91-32,r0
 733 017c 0F90      		pop r0
 734 017e 0FBE      		out __SREG__,r0
 735 0180 0F90      		pop r0
 736 0182 1F90      		pop __zero_reg__
 737 0184 1895      		reti
 739               	.Lscope16:
 741               		.stabd	78,0,0
 743               	.global	__vector_16
 745               	__vector_16:
 746               		.stabd	46,0,0
 191:../../../src/kernel/hal/atmega128/nrk_timer.c **** 
 192:../../../src/kernel/hal/atmega128/nrk_timer.c **** //SIGNAL(SIG_OVERFLOW0) {
 193:../../../src/kernel/hal/atmega128/nrk_timer.c **** void SIG_OVERFLOW0( void ) __attribute__ ( ( signal,naked ));
 194:../../../src/kernel/hal/atmega128/nrk_timer.c **** void SIG_OVERFLOW0(void)
 195:../../../src/kernel/hal/atmega128/nrk_timer.c **** {
 748               	.LM76:
 749               	.LFBB17:
 750               	/* prologue: naked */
 751               	/* frame size = 0 */
 752               	/* stack size = 0 */
 753               	.L__stack_usage = 0
 754               	/* epilogue start */
 196:../../../src/kernel/hal/atmega128/nrk_timer.c **** #ifdef NRK_KERNEL_TEST
 197:../../../src/kernel/hal/atmega128/nrk_timer.c ****     nrk_kernel_error_add(NRK_TIMER_OVERFLOW,0);
 198:../../../src/kernel/hal/atmega128/nrk_timer.c **** #endif
 199:../../../src/kernel/hal/atmega128/nrk_timer.c ****     return;
 200:../../../src/kernel/hal/atmega128/nrk_timer.c **** }
 756               	.LM77:
 758               	.Lscope17:
 760               		.stabd	78,0,0
 762               	.global	__vector_15
 764               	__vector_15:
 765               		.stabd	46,0,0
 201:../../../src/kernel/hal/atmega128/nrk_timer.c **** 
 202:../../../src/kernel/hal/atmega128/nrk_timer.c **** // This is the SUSPEND for the OS timer Tick
 203:../../../src/kernel/hal/atmega128/nrk_timer.c **** // pdiener: All registers are saved and control is transfered from a task to the kernel
 204:../../../src/kernel/hal/atmega128/nrk_timer.c **** void SIG_OUTPUT_COMPARE0( void ) __attribute__ ( ( signal,naked ));
 205:../../../src/kernel/hal/atmega128/nrk_timer.c **** void SIG_OUTPUT_COMPARE0(void)
 206:../../../src/kernel/hal/atmega128/nrk_timer.c **** {
 767               	.LM78:
 768               	.LFBB18:
 769               	/* prologue: naked */
 770               	/* frame size = 0 */
 771               	/* stack size = 0 */
 772               	.L__stack_usage = 0
 207:../../../src/kernel/hal/atmega128/nrk_timer.c ****     asm volatile (
 774               	.LM79:
 775               	/* #APP */
 776               	 ;  207 "../../../src/kernel/hal/atmega128/nrk_timer.c" 1
 777 0186 0F92      		push    r0 
 778 0188 0FB6      		in      r0, __SREG__  
 779 018a 0F92      		push    r0  
 780 018c 1F92      		push    r1 
 781 018e 2F92      		push    r2 
 782 0190 3F92      		push    r3 
 783 0192 4F92      		push    r4 
 784 0194 5F92      		push    r5 
 785 0196 6F92      		push    r6 
 786 0198 7F92      		push    r7 
 787 019a 8F92      		push    r8 
 788 019c 9F92      		push    r9 
 789 019e AF92      		push    r10 
 790 01a0 BF92      		push    r11 
 791 01a2 CF92      		push    r12 
 792 01a4 DF92      		push    r13 
 793 01a6 EF92      		push    r14 
 794 01a8 FF92      		push    r15 
 795 01aa 0F93      		push    r16 
 796 01ac 1F93      		push    r17 
 797 01ae 2F93      		push    r18 
 798 01b0 3F93      		push    r19 
 799 01b2 4F93      		push    r20 
 800 01b4 5F93      		push    r21 
 801 01b6 6F93      		push    r22 
 802 01b8 7F93      		push    r23 
 803 01ba 8F93      		push    r24 
 804 01bc 9F93      		push    r25 
 805 01be AF93      		push    r26 
 806 01c0 BF93      		push    r27 
 807 01c2 CF93      		push    r28 
 808 01c4 DF93      		push    r29 
 809 01c6 EF93      		push    r30 
 810 01c8 FF93      		push    r31 
 811 01ca A091 0000 		lds r26,nrk_cur_task_TCB 
 812 01ce B091 0000 		lds r27,nrk_cur_task_TCB+1 
 813 01d2 0DB6      		in r0,__SP_L__ 
 814 01d4 0D92      		st x+, r0 
 815 01d6 0EB6      		in r0,__SP_H__ 
 816 01d8 0D92      		st x+, r0 
 817 01da 1F92      		push r1  
 818 01dc A091 0000 		lds r26,nrk_kernel_stk_ptr 
 819 01e0 B091 0000 		lds r27,nrk_kernel_stk_ptr+1 
 820 01e4 1E90      		ld r1,-x 
 821 01e6 BEBF      		out __SP_H__, r27 
 822 01e8 ADBF      		out __SP_L__, r26 
 823 01ea 0895      		ret
 824               		
 825               	 ;  0 "" 2
 826               	/* epilogue start */
 208:../../../src/kernel/hal/atmega128/nrk_timer.c ****         "push    r0 \n\t" \
 209:../../../src/kernel/hal/atmega128/nrk_timer.c ****         "in      r0, __SREG__  \n\t" \
 210:../../../src/kernel/hal/atmega128/nrk_timer.c ****         "push    r0  \n\t" \
 211:../../../src/kernel/hal/atmega128/nrk_timer.c ****         "push    r1 \n\t" \
 212:../../../src/kernel/hal/atmega128/nrk_timer.c ****         "push    r2 \n\t" \
 213:../../../src/kernel/hal/atmega128/nrk_timer.c ****         "push    r3 \n\t" \
 214:../../../src/kernel/hal/atmega128/nrk_timer.c ****         "push    r4 \n\t" \
 215:../../../src/kernel/hal/atmega128/nrk_timer.c ****         "push    r5 \n\t" \
 216:../../../src/kernel/hal/atmega128/nrk_timer.c ****         "push    r6 \n\t" \
 217:../../../src/kernel/hal/atmega128/nrk_timer.c ****         "push    r7 \n\t" \
 218:../../../src/kernel/hal/atmega128/nrk_timer.c ****         "push    r8 \n\t" \
 219:../../../src/kernel/hal/atmega128/nrk_timer.c ****         "push    r9 \n\t" \
 220:../../../src/kernel/hal/atmega128/nrk_timer.c ****         "push    r10 \n\t" \
 221:../../../src/kernel/hal/atmega128/nrk_timer.c ****         "push    r11 \n\t" \
 222:../../../src/kernel/hal/atmega128/nrk_timer.c ****         "push    r12 \n\t" \
 223:../../../src/kernel/hal/atmega128/nrk_timer.c ****         "push    r13 \n\t" \
 224:../../../src/kernel/hal/atmega128/nrk_timer.c ****         "push    r14 \n\t" \
 225:../../../src/kernel/hal/atmega128/nrk_timer.c ****         "push    r15 \n\t" \
 226:../../../src/kernel/hal/atmega128/nrk_timer.c ****         "push    r16 \n\t" \
 227:../../../src/kernel/hal/atmega128/nrk_timer.c ****         "push    r17 \n\t" \
 228:../../../src/kernel/hal/atmega128/nrk_timer.c ****         "push    r18 \n\t" \
 229:../../../src/kernel/hal/atmega128/nrk_timer.c ****         "push    r19 \n\t" \
 230:../../../src/kernel/hal/atmega128/nrk_timer.c ****         "push    r20 \n\t" \
 231:../../../src/kernel/hal/atmega128/nrk_timer.c ****         "push    r21 \n\t" \
 232:../../../src/kernel/hal/atmega128/nrk_timer.c ****         "push    r22 \n\t" \
 233:../../../src/kernel/hal/atmega128/nrk_timer.c ****         "push    r23 \n\t" \
 234:../../../src/kernel/hal/atmega128/nrk_timer.c ****         "push    r24 \n\t" \
 235:../../../src/kernel/hal/atmega128/nrk_timer.c ****         "push    r25 \n\t" \
 236:../../../src/kernel/hal/atmega128/nrk_timer.c ****         "push    r26 \n\t" \
 237:../../../src/kernel/hal/atmega128/nrk_timer.c ****         "push    r27 \n\t" \
 238:../../../src/kernel/hal/atmega128/nrk_timer.c ****         "push    r28 \n\t" \
 239:../../../src/kernel/hal/atmega128/nrk_timer.c ****         "push    r29 \n\t" \
 240:../../../src/kernel/hal/atmega128/nrk_timer.c ****         "push    r30 \n\t" \
 241:../../../src/kernel/hal/atmega128/nrk_timer.c ****         "push    r31 \n\t" \
 242:../../../src/kernel/hal/atmega128/nrk_timer.c ****         "lds r26,nrk_cur_task_TCB \n\t" \
 243:../../../src/kernel/hal/atmega128/nrk_timer.c ****         "lds r27,nrk_cur_task_TCB+1 \n\t" \
 244:../../../src/kernel/hal/atmega128/nrk_timer.c ****         "in r0,__SP_L__ \n\t" \
 245:../../../src/kernel/hal/atmega128/nrk_timer.c ****         "st x+, r0 \n\t" \
 246:../../../src/kernel/hal/atmega128/nrk_timer.c ****         "in r0,__SP_H__ \n\t" \
 247:../../../src/kernel/hal/atmega128/nrk_timer.c ****         "st x+, r0 \n\t" \
 248:../../../src/kernel/hal/atmega128/nrk_timer.c ****         "push r1  \n\t" \
 249:../../../src/kernel/hal/atmega128/nrk_timer.c ****         "lds r26,nrk_kernel_stk_ptr \n\t" \
 250:../../../src/kernel/hal/atmega128/nrk_timer.c ****         "lds r27,nrk_kernel_stk_ptr+1 \n\t" \
 251:../../../src/kernel/hal/atmega128/nrk_timer.c ****         "ld r1,-x \n\t" \
 252:../../../src/kernel/hal/atmega128/nrk_timer.c ****         "out __SP_H__, r27 \n\t" \
 253:../../../src/kernel/hal/atmega128/nrk_timer.c ****         "out __SP_L__, r26 \n\t" \
 254:../../../src/kernel/hal/atmega128/nrk_timer.c ****         "ret\n\t" \
 255:../../../src/kernel/hal/atmega128/nrk_timer.c ****     );
 256:../../../src/kernel/hal/atmega128/nrk_timer.c **** 
 257:../../../src/kernel/hal/atmega128/nrk_timer.c **** 
 258:../../../src/kernel/hal/atmega128/nrk_timer.c **** 
 259:../../../src/kernel/hal/atmega128/nrk_timer.c ****     return;
 260:../../../src/kernel/hal/atmega128/nrk_timer.c **** }
 828               	.LM80:
 829               	/* #NOAPP */
 831               	.Lscope18:
 833               		.stabd	78,0,0
 836               	.global	nrk_timer_int_stop
 838               	nrk_timer_int_stop:
 839               		.stabd	46,0,0
 261:../../../src/kernel/hal/atmega128/nrk_timer.c **** 
 262:../../../src/kernel/hal/atmega128/nrk_timer.c **** 
 263:../../../src/kernel/hal/atmega128/nrk_timer.c **** //-------------------------------------------------------------------------------------------------
 264:../../../src/kernel/hal/atmega128/nrk_timer.c **** //  TIMER 1 COMPARE ISR
 265:../../../src/kernel/hal/atmega128/nrk_timer.c **** //-------------------------------------------------------------------------------------------------
 266:../../../src/kernel/hal/atmega128/nrk_timer.c **** /*
 267:../../../src/kernel/hal/atmega128/nrk_timer.c **** 
 268:../../../src/kernel/hal/atmega128/nrk_timer.c ****  08/03/2007 - Nuno Pereira
 269:../../../src/kernel/hal/atmega128/nrk_timer.c **** 
 270:../../../src/kernel/hal/atmega128/nrk_timer.c ****  Commented this out; Widom uses this interrupt
 271:../../../src/kernel/hal/atmega128/nrk_timer.c **** 
 272:../../../src/kernel/hal/atmega128/nrk_timer.c **** SIGNAL(SIG_OUTPUT_COMPARE1A) {
 273:../../../src/kernel/hal/atmega128/nrk_timer.c **** 	static uint8_t i=0;
 274:../../../src/kernel/hal/atmega128/nrk_timer.c **** 
 275:../../../src/kernel/hal/atmega128/nrk_timer.c **** 	CLR_LED_1();
 276:../../../src/kernel/hal/atmega128/nrk_timer.c **** 	if(i==0 ) {
 277:../../../src/kernel/hal/atmega128/nrk_timer.c **** 
 278:../../../src/kernel/hal/atmega128/nrk_timer.c **** 	   SET_LED_0();
 279:../../../src/kernel/hal/atmega128/nrk_timer.c **** 		i=1;
 280:../../../src/kernel/hal/atmega128/nrk_timer.c **** 	}else
 281:../../../src/kernel/hal/atmega128/nrk_timer.c **** 	{
 282:../../../src/kernel/hal/atmega128/nrk_timer.c **** 	   CLR_LED_0();
 283:../../../src/kernel/hal/atmega128/nrk_timer.c **** 	   i=0;
 284:../../../src/kernel/hal/atmega128/nrk_timer.c **** 
 285:../../../src/kernel/hal/atmega128/nrk_timer.c **** 	}
 286:../../../src/kernel/hal/atmega128/nrk_timer.c **** 
 287:../../../src/kernel/hal/atmega128/nrk_timer.c **** 	//SuspendTask2();
 288:../../../src/kernel/hal/atmega128/nrk_timer.c **** 	return;
 289:../../../src/kernel/hal/atmega128/nrk_timer.c **** }
 290:../../../src/kernel/hal/atmega128/nrk_timer.c **** */
 291:../../../src/kernel/hal/atmega128/nrk_timer.c **** 
 292:../../../src/kernel/hal/atmega128/nrk_timer.c **** 
 293:../../../src/kernel/hal/atmega128/nrk_timer.c **** int8_t nrk_timer_int_stop(uint8_t timer )
 294:../../../src/kernel/hal/atmega128/nrk_timer.c **** {
 841               	.LM81:
 842               	.LFBB19:
 843               	/* prologue: function */
 844               	/* frame size = 0 */
 845               	/* stack size = 0 */
 846               	.L__stack_usage = 0
 295:../../../src/kernel/hal/atmega128/nrk_timer.c ****     if(timer==NRK_APP_TIMER_0)
 848               	.LM82:
 849 01ec 8823      		tst r24
 850 01ee 01F4      		brne .L29
 296:../../../src/kernel/hal/atmega128/nrk_timer.c ****     {
 297:../../../src/kernel/hal/atmega128/nrk_timer.c ****         TIMSK &= ~(BM(OCIE2));
 852               	.LM83:
 853 01f0 87B7      		in r24,87-32
 854 01f2 8F77      		andi r24,lo8(127)
 855 01f4 87BF      		out 87-32,r24
 856               	.L29:
 298:../../../src/kernel/hal/atmega128/nrk_timer.c ****     }
 299:../../../src/kernel/hal/atmega128/nrk_timer.c ****     return NRK_ERROR;
 300:../../../src/kernel/hal/atmega128/nrk_timer.c **** }
 858               	.LM84:
 859 01f6 8FEF      		ldi r24,lo8(-1)
 860               	/* epilogue start */
 861 01f8 0895      		ret
 863               	.Lscope19:
 865               		.stabd	78,0,0
 868               	.global	nrk_timer_int_reset
 870               	nrk_timer_int_reset:
 871               		.stabd	46,0,0
 301:../../../src/kernel/hal/atmega128/nrk_timer.c **** 
 302:../../../src/kernel/hal/atmega128/nrk_timer.c **** int8_t nrk_timer_int_reset(uint8_t timer )
 303:../../../src/kernel/hal/atmega128/nrk_timer.c **** {
 873               	.LM85:
 874               	.LFBB20:
 875               	/* prologue: function */
 876               	/* frame size = 0 */
 877               	/* stack size = 0 */
 878               	.L__stack_usage = 0
 304:../../../src/kernel/hal/atmega128/nrk_timer.c ****     if(timer==NRK_APP_TIMER_0)
 880               	.LM86:
 881 01fa 8823      		tst r24
 882 01fc 01F4      		brne .L32
 305:../../../src/kernel/hal/atmega128/nrk_timer.c ****     {
 306:../../../src/kernel/hal/atmega128/nrk_timer.c ****         TCNT2=0;
 884               	.LM87:
 885 01fe 14BC      		out 68-32,__zero_reg__
 307:../../../src/kernel/hal/atmega128/nrk_timer.c ****         return NRK_OK;
 887               	.LM88:
 888 0200 81E0      		ldi r24,lo8(1)
 889 0202 0895      		ret
 890               	.L32:
 308:../../../src/kernel/hal/atmega128/nrk_timer.c ****     }
 309:../../../src/kernel/hal/atmega128/nrk_timer.c ****     return NRK_ERROR;
 892               	.LM89:
 893 0204 8FEF      		ldi r24,lo8(-1)
 310:../../../src/kernel/hal/atmega128/nrk_timer.c **** }
 895               	.LM90:
 896 0206 0895      		ret
 898               	.Lscope20:
 900               		.stabd	78,0,0
 903               	.global	nrk_timer_int_read
 905               	nrk_timer_int_read:
 906               		.stabd	46,0,0
 311:../../../src/kernel/hal/atmega128/nrk_timer.c **** 
 312:../../../src/kernel/hal/atmega128/nrk_timer.c **** uint16_t nrk_timer_int_read(uint8_t timer )
 313:../../../src/kernel/hal/atmega128/nrk_timer.c **** {
 908               	.LM91:
 909               	.LFBB21:
 910               	/* prologue: function */
 911               	/* frame size = 0 */
 912               	/* stack size = 0 */
 913               	.L__stack_usage = 0
 314:../../../src/kernel/hal/atmega128/nrk_timer.c ****     if(timer==NRK_APP_TIMER_0)
 915               	.LM92:
 916 0208 8823      		tst r24
 917 020a 01F4      		brne .L35
 315:../../../src/kernel/hal/atmega128/nrk_timer.c ****     {
 316:../../../src/kernel/hal/atmega128/nrk_timer.c ****         return TCNT2;
 919               	.LM93:
 920 020c 24B5      		in r18,68-32
 921 020e 30E0      		ldi r19,lo8(0)
 922 0210 00C0      		rjmp .L34
 923               	.L35:
 317:../../../src/kernel/hal/atmega128/nrk_timer.c ****     }
 318:../../../src/kernel/hal/atmega128/nrk_timer.c ****     return 0;
 925               	.LM94:
 926 0212 20E0      		ldi r18,lo8(0)
 927 0214 30E0      		ldi r19,hi8(0)
 928               	.L34:
 319:../../../src/kernel/hal/atmega128/nrk_timer.c **** 
 320:../../../src/kernel/hal/atmega128/nrk_timer.c **** }
 930               	.LM95:
 931 0216 C901      		movw r24,r18
 932               	/* epilogue start */
 933 0218 0895      		ret
 935               	.Lscope21:
 937               		.stabd	78,0,0
 940               	.global	nrk_timer_int_start
 942               	nrk_timer_int_start:
 943               		.stabd	46,0,0
 321:../../../src/kernel/hal/atmega128/nrk_timer.c **** 
 322:../../../src/kernel/hal/atmega128/nrk_timer.c **** int8_t  nrk_timer_int_start(uint8_t timer)
 323:../../../src/kernel/hal/atmega128/nrk_timer.c **** {
 945               	.LM96:
 946               	.LFBB22:
 947               	/* prologue: function */
 948               	/* frame size = 0 */
 949               	/* stack size = 0 */
 950               	.L__stack_usage = 0
 324:../../../src/kernel/hal/atmega128/nrk_timer.c ****     if(timer==NRK_APP_TIMER_0)
 952               	.LM97:
 953 021a 8823      		tst r24
 954 021c 01F4      		brne .L38
 325:../../../src/kernel/hal/atmega128/nrk_timer.c ****     {
 326:../../../src/kernel/hal/atmega128/nrk_timer.c ****         TIMSK |= BM(OCIE2);
 956               	.LM98:
 957 021e 87B7      		in r24,87-32
 958 0220 8068      		ori r24,lo8(-128)
 959 0222 87BF      		out 87-32,r24
 327:../../../src/kernel/hal/atmega128/nrk_timer.c ****         return NRK_OK;
 961               	.LM99:
 962 0224 81E0      		ldi r24,lo8(1)
 963 0226 0895      		ret
 964               	.L38:
 328:../../../src/kernel/hal/atmega128/nrk_timer.c ****     }
 329:../../../src/kernel/hal/atmega128/nrk_timer.c ****     return NRK_ERROR;
 966               	.LM100:
 967 0228 8FEF      		ldi r24,lo8(-1)
 330:../../../src/kernel/hal/atmega128/nrk_timer.c **** }
 969               	.LM101:
 970 022a 0895      		ret
 972               	.Lscope22:
 974               		.stabd	78,0,0
 979               	.global	nrk_timer_int_configure
 981               	nrk_timer_int_configure:
 982               		.stabd	46,0,0
 331:../../../src/kernel/hal/atmega128/nrk_timer.c **** 
 332:../../../src/kernel/hal/atmega128/nrk_timer.c **** int8_t  nrk_timer_int_configure(uint8_t timer, uint16_t prescaler, uint16_t compare_value, void *ca
 333:../../../src/kernel/hal/atmega128/nrk_timer.c **** {
 984               	.LM102:
 985               	.LFBB23:
 986               	/* prologue: function */
 987               	/* frame size = 0 */
 988               	/* stack size = 0 */
 989               	.L__stack_usage = 0
 334:../../../src/kernel/hal/atmega128/nrk_timer.c ****     if(timer==NRK_APP_TIMER_0)
 991               	.LM103:
 992 022c 8823      		tst r24
 993 022e 01F4      		brne .L46
 335:../../../src/kernel/hal/atmega128/nrk_timer.c ****     {
 336:../../../src/kernel/hal/atmega128/nrk_timer.c ****         if(prescaler>0 && prescaler<6 ) app_timer0_prescale=prescaler;
 995               	.LM104:
 996 0230 CB01      		movw r24,r22
 997 0232 0197      		sbiw r24,1
 998 0234 8530      		cpi r24,5
 999 0236 9105      		cpc r25,__zero_reg__
 1000 0238 00F4      		brsh .L41
 1002               	.LM105:
 1003 023a 6093 0000 		sts app_timer0_prescale,r22
 1004               	.L41:
 337:../../../src/kernel/hal/atmega128/nrk_timer.c ****         TCCR2 = BM(WGM32);  // Automatic restart on compare, count up
 1006               	.LM106:
 1007 023e 88E0      		ldi r24,lo8(8)
 1008 0240 85BD      		out 69-32,r24
 338:../../../src/kernel/hal/atmega128/nrk_timer.c ****         OCR2 = (compare_value & 0xFF );
 1010               	.LM107:
 1011 0242 43BD      		out 67-32,r20
 339:../../../src/kernel/hal/atmega128/nrk_timer.c ****         app_timer0_callback=callback_func;
 1013               	.LM108:
 1014 0244 3093 0000 		sts app_timer0_callback+1,r19
 1015 0248 2093 0000 		sts app_timer0_callback,r18
 340:../../../src/kernel/hal/atmega128/nrk_timer.c ****         if(app_timer0_prescale==1) TCCR2 |= BM(CS30);
 1017               	.LM109:
 1018 024c 8091 0000 		lds r24,app_timer0_prescale
 1019 0250 8130      		cpi r24,lo8(1)
 1020 0252 01F4      		brne .L42
 1022               	.LM110:
 1023 0254 85B5      		in r24,69-32
 1024 0256 8160      		ori r24,lo8(1)
 1025 0258 00C0      		rjmp .L48
 1026               	.L42:
 341:../../../src/kernel/hal/atmega128/nrk_timer.c ****         // Divide by 1
 342:../../../src/kernel/hal/atmega128/nrk_timer.c ****         else if(app_timer0_prescale==2) TCCR2 |= BM(CS31);
 1028               	.LM111:
 1029 025a 8230      		cpi r24,lo8(2)
 1030 025c 01F4      		brne .L43
 1032               	.LM112:
 1033 025e 85B5      		in r24,69-32
 1034 0260 8260      		ori r24,lo8(2)
 1035 0262 00C0      		rjmp .L48
 1036               	.L43:
 343:../../../src/kernel/hal/atmega128/nrk_timer.c ****         // Divide by 8
 344:../../../src/kernel/hal/atmega128/nrk_timer.c ****         else if(app_timer0_prescale==3) TCCR2 |= BM(CS31) | BM(CS30);
 1038               	.LM113:
 1039 0264 8330      		cpi r24,lo8(3)
 1040 0266 01F4      		brne .L44
 1042               	.LM114:
 1043 0268 85B5      		in r24,69-32
 1044 026a 8360      		ori r24,lo8(3)
 1045               	.L48:
 1046 026c 85BD      		out 69-32,r24
 345:../../../src/kernel/hal/atmega128/nrk_timer.c ****         // Divide by 64
 346:../../../src/kernel/hal/atmega128/nrk_timer.c ****         else if(app_timer0_prescale==4) TCCR2 |= BM(CS32) ;
 347:../../../src/kernel/hal/atmega128/nrk_timer.c ****         // Divide by 256
 348:../../../src/kernel/hal/atmega128/nrk_timer.c ****         else if(app_timer0_prescale==5) TCCR2 |= BM(CS32) | BM(CS30);
 349:../../../src/kernel/hal/atmega128/nrk_timer.c ****         // Divide by 1024
 350:../../../src/kernel/hal/atmega128/nrk_timer.c ****         return NRK_OK;
 1048               	.LM115:
 1049 026e 81E0      		ldi r24,lo8(1)
 1050 0270 0895      		ret
 1051               	.L44:
 346:../../../src/kernel/hal/atmega128/nrk_timer.c ****         else if(app_timer0_prescale==4) TCCR2 |= BM(CS32) ;
 1053               	.LM116:
 1054 0272 8430      		cpi r24,lo8(4)
 1055 0274 01F4      		brne .L45
 346:../../../src/kernel/hal/atmega128/nrk_timer.c ****         else if(app_timer0_prescale==4) TCCR2 |= BM(CS32) ;
 1057               	.LM117:
 1058 0276 85B5      		in r24,69-32
 1059 0278 8460      		ori r24,lo8(4)
 1060 027a 00C0      		rjmp .L48
 1061               	.L45:
 348:../../../src/kernel/hal/atmega128/nrk_timer.c ****         else if(app_timer0_prescale==5) TCCR2 |= BM(CS32) | BM(CS30);
 1063               	.LM118:
 1064 027c 8530      		cpi r24,lo8(5)
 1065 027e 01F4      		brne .L47
 348:../../../src/kernel/hal/atmega128/nrk_timer.c ****         else if(app_timer0_prescale==5) TCCR2 |= BM(CS32) | BM(CS30);
 1067               	.LM119:
 1068 0280 85B5      		in r24,69-32
 1069 0282 8560      		ori r24,lo8(5)
 1070 0284 00C0      		rjmp .L48
 1071               	.L46:
 351:../../../src/kernel/hal/atmega128/nrk_timer.c ****     }
 352:../../../src/kernel/hal/atmega128/nrk_timer.c **** 
 353:../../../src/kernel/hal/atmega128/nrk_timer.c ****     return NRK_ERROR;
 1073               	.LM120:
 1074 0286 8FEF      		ldi r24,lo8(-1)
 1075 0288 0895      		ret
 1076               	.L47:
 350:../../../src/kernel/hal/atmega128/nrk_timer.c ****         return NRK_OK;
 1078               	.LM121:
 1079 028a 81E0      		ldi r24,lo8(1)
 354:../../../src/kernel/hal/atmega128/nrk_timer.c **** }
 1081               	.LM122:
 1082 028c 0895      		ret
 1084               	.Lscope23:
 1086               		.stabd	78,0,0
 1088               	.global	__vector_9
 1090               	__vector_9:
 1091               		.stabd	46,0,0
 355:../../../src/kernel/hal/atmega128/nrk_timer.c **** 
 356:../../../src/kernel/hal/atmega128/nrk_timer.c **** 
 357:../../../src/kernel/hal/atmega128/nrk_timer.c **** SIGNAL(TIMER2_COMP_vect)
 358:../../../src/kernel/hal/atmega128/nrk_timer.c **** {
 1093               	.LM123:
 1094               	.LFBB24:
 1095 028e 1F92      		push __zero_reg__
 1096 0290 0F92      		push r0
 1097 0292 0FB6      		in r0,__SREG__
 1098 0294 0F92      		push r0
 1099 0296 0BB6      		in r0,91-32
 1100 0298 0F92      		push r0
 1101 029a 1124      		clr __zero_reg__
 1102 029c 2F93      		push r18
 1103 029e 3F93      		push r19
 1104 02a0 4F93      		push r20
 1105 02a2 5F93      		push r21
 1106 02a4 6F93      		push r22
 1107 02a6 7F93      		push r23
 1108 02a8 8F93      		push r24
 1109 02aa 9F93      		push r25
 1110 02ac AF93      		push r26
 1111 02ae BF93      		push r27
 1112 02b0 EF93      		push r30
 1113 02b2 FF93      		push r31
 1114               	/* prologue: Signal */
 1115               	/* frame size = 0 */
 1116               	/* stack size = 16 */
 1117               	.L__stack_usage = 16
 359:../../../src/kernel/hal/atmega128/nrk_timer.c ****     if(app_timer0_callback!=NULL) app_timer0_callback();
 1119               	.LM124:
 1120 02b4 E091 0000 		lds r30,app_timer0_callback
 1121 02b8 F091 0000 		lds r31,app_timer0_callback+1
 1122 02bc 3097      		sbiw r30,0
 1123 02be 01F0      		breq .L50
 1125               	.LM125:
 1126 02c0 0995      		icall
 1127 02c2 00C0      		rjmp .L49
 1128               	.L50:
 360:../../../src/kernel/hal/atmega128/nrk_timer.c ****     else
 361:../../../src/kernel/hal/atmega128/nrk_timer.c ****         nrk_kernel_error_add(NRK_SEG_FAULT,0);
 1130               	.LM126:
 1131 02c4 8AE0      		ldi r24,lo8(10)
 1132 02c6 60E0      		ldi r22,lo8(0)
 1133 02c8 0E94 0000 		call nrk_kernel_error_add
 1134               	.L49:
 1135               	/* epilogue start */
 362:../../../src/kernel/hal/atmega128/nrk_timer.c ****     return;
 363:../../../src/kernel/hal/atmega128/nrk_timer.c **** }
 1137               	.LM127:
 1138 02cc FF91      		pop r31
 1139 02ce EF91      		pop r30
 1140 02d0 BF91      		pop r27
 1141 02d2 AF91      		pop r26
 1142 02d4 9F91      		pop r25
 1143 02d6 8F91      		pop r24
 1144 02d8 7F91      		pop r23
 1145 02da 6F91      		pop r22
 1146 02dc 5F91      		pop r21
 1147 02de 4F91      		pop r20
 1148 02e0 3F91      		pop r19
 1149 02e2 2F91      		pop r18
 1150 02e4 0F90      		pop r0
 1151 02e6 0BBE      		out 91-32,r0
 1152 02e8 0F90      		pop r0
 1153 02ea 0FBE      		out __SREG__,r0
 1154 02ec 0F90      		pop r0
 1155 02ee 1F90      		pop __zero_reg__
 1156 02f0 1895      		reti
 1158               	.Lscope24:
 1160               		.stabd	78,0,0
 1161               		.comm _nrk_signal_list,4,1
 1162               		.comm nrk_idle_task_stk,128,1
 1163               		.comm nrk_kernel_stk_ptr,2,1
 1164               		.comm _nrk_prev_timer_val,1,1
 1165               		.comm _nrk_time_trigger,1,1
 1166               		.comm app_timer0_callback,2,1
 1167               		.comm app_timer0_prescale,1,1
 1168               		.comm error_task,1,1
 1169               		.comm error_num,1,1
 1180               	.Letext0:
 1181               	.global __do_clear_bss
DEFINED SYMBOLS
                            *ABS*:00000000 nrk_timer.c
     /tmp/ccOgH1ou.s:2      *ABS*:0000003f __SREG__
     /tmp/ccOgH1ou.s:3      *ABS*:0000003e __SP_H__
     /tmp/ccOgH1ou.s:4      *ABS*:0000003d __SP_L__
     /tmp/ccOgH1ou.s:5      *ABS*:00000034 __CCP__
     /tmp/ccOgH1ou.s:6      *ABS*:00000000 __tmp_reg__
     /tmp/ccOgH1ou.s:7      *ABS*:00000001 __zero_reg__
     /tmp/ccOgH1ou.s:139    .text:00000000 nrk_spin_wait_us
     /tmp/ccOgH1ou.s:190    .text:0000000e _nrk_high_speed_timer_stop
     /tmp/ccOgH1ou.s:213    .text:00000012 _nrk_high_speed_timer_start
     /tmp/ccOgH1ou.s:237    .text:00000018 _nrk_high_speed_timer_reset
     /tmp/ccOgH1ou.s:266    .text:00000024 _nrk_high_speed_timer_get
     /tmp/ccOgH1ou.s:311    .text:00000046 nrk_high_speed_timer_wait
     /tmp/ccOgH1ou.s:403    .text:000000b6 _nrk_os_timer_set
     /tmp/ccOgH1ou.s:426    .text:000000ba _nrk_os_timer_stop
     /tmp/ccOgH1ou.s:459    .text:000000ca _nrk_os_timer_start
     /tmp/ccOgH1ou.s:488    .text:000000d6 _nrk_os_timer_reset
                            *COM*:00000001 _nrk_time_trigger
                            *COM*:00000001 _nrk_prev_timer_val
     /tmp/ccOgH1ou.s:522    .text:000000e8 _nrk_setup_timer
     /tmp/ccOgH1ou.s:591    .text:00000120 _nrk_precision_os_timer_reset
     /tmp/ccOgH1ou.s:611    .text:00000122 _nrk_get_next_wakeup
     /tmp/ccOgH1ou.s:636    .text:00000128 _nrk_set_next_wakeup
     /tmp/ccOgH1ou.s:660    .text:0000012e _nrk_os_timer_get
     /tmp/ccOgH1ou.s:683    .text:00000132 __vector_default
     /tmp/ccOgH1ou.s:745    .text:00000186 __vector_16
     /tmp/ccOgH1ou.s:764    .text:00000186 __vector_15
                            *COM*:00000002 nrk_kernel_stk_ptr
     /tmp/ccOgH1ou.s:838    .text:000001ec nrk_timer_int_stop
     /tmp/ccOgH1ou.s:870    .text:000001fa nrk_timer_int_reset
     /tmp/ccOgH1ou.s:905    .text:00000208 nrk_timer_int_read
     /tmp/ccOgH1ou.s:942    .text:0000021a nrk_timer_int_start
     /tmp/ccOgH1ou.s:981    .text:0000022c nrk_timer_int_configure
                            *COM*:00000001 app_timer0_prescale
                            *COM*:00000002 app_timer0_callback
     /tmp/ccOgH1ou.s:1090   .text:0000028e __vector_9
                            *COM*:00000004 _nrk_signal_list
                            *COM*:00000080 nrk_idle_task_stk
                            *COM*:00000001 error_task
                            *COM*:00000001 error_num

UNDEFINED SYMBOLS
nrk_kernel_error_add
nrk_cur_task_TCB
__do_clear_bss
