   1               		.file	"nrk_timer.c"
   2               	__SREG__ = 0x3f
   3               	__SP_H__ = 0x3e
   4               	__SP_L__ = 0x3d
   5               	__CCP__  = 0x34
   6               	__tmp_reg__ = 0
   7               	__zero_reg__ = 1
   8               		.global __do_copy_data
   9               		.global __do_clear_bss
  12               		.text
  13               	.Ltext0:
 137               	.global	nrk_spin_wait_us
 139               	nrk_spin_wait_us:
 140               		.stabd	46,0,0
   0:../../../src/kernel/hal/atmega128/nrk_timer.c **** /******************************************************************************
   1:../../../src/kernel/hal/atmega128/nrk_timer.c **** *  Nano-RK, a real-time operating system for sensor networks.
   2:../../../src/kernel/hal/atmega128/nrk_timer.c **** *  Copyright (C) 2007, Real-Time and Multimedia Lab, Carnegie Mellon University
   3:../../../src/kernel/hal/atmega128/nrk_timer.c **** *  All rights reserved.
   4:../../../src/kernel/hal/atmega128/nrk_timer.c **** *
   5:../../../src/kernel/hal/atmega128/nrk_timer.c **** *  This is the Open Source Version of Nano-RK included as part of a Dual
   6:../../../src/kernel/hal/atmega128/nrk_timer.c **** *  Licensing Model. If you are unsure which license to use please refer to:
   7:../../../src/kernel/hal/atmega128/nrk_timer.c **** *  http://www.nanork.org/nano-RK/wiki/Licensing
   8:../../../src/kernel/hal/atmega128/nrk_timer.c **** *
   9:../../../src/kernel/hal/atmega128/nrk_timer.c **** *  This program is free software: you can redistribute it and/or modify
  10:../../../src/kernel/hal/atmega128/nrk_timer.c **** *  it under the terms of the GNU General Public License as published by
  11:../../../src/kernel/hal/atmega128/nrk_timer.c **** *  the Free Software Foundation, version 2.0 of the License.
  12:../../../src/kernel/hal/atmega128/nrk_timer.c **** *
  13:../../../src/kernel/hal/atmega128/nrk_timer.c **** *  This program is distributed in the hope that it will be useful,
  14:../../../src/kernel/hal/atmega128/nrk_timer.c **** *  but WITHOUT ANY WARRANTY; without even the implied warranty of
  15:../../../src/kernel/hal/atmega128/nrk_timer.c **** *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  16:../../../src/kernel/hal/atmega128/nrk_timer.c **** *  GNU General Public License for more details.
  17:../../../src/kernel/hal/atmega128/nrk_timer.c **** *
  18:../../../src/kernel/hal/atmega128/nrk_timer.c **** *  You should have received a copy of the GNU General Public License
  19:../../../src/kernel/hal/atmega128/nrk_timer.c **** *  along with this program.  If not, see <http://www.gnu.org/licenses/>.
  20:../../../src/kernel/hal/atmega128/nrk_timer.c **** *
  21:../../../src/kernel/hal/atmega128/nrk_timer.c **** *  Contributing Authors (specific to this file):
  22:../../../src/kernel/hal/atmega128/nrk_timer.c **** *  Anthony Rowe
  23:../../../src/kernel/hal/atmega128/nrk_timer.c **** *  Zane Starr
  24:../../../src/kernel/hal/atmega128/nrk_timer.c **** *******************************************************************************/
  25:../../../src/kernel/hal/atmega128/nrk_timer.c **** 
  26:../../../src/kernel/hal/atmega128/nrk_timer.c **** 
  27:../../../src/kernel/hal/atmega128/nrk_timer.c **** #include <include.h>
  28:../../../src/kernel/hal/atmega128/nrk_timer.c **** #include <avr/interrupt.h>
  29:../../../src/kernel/hal/atmega128/nrk_timer.c **** #include <ulib.h>
  30:../../../src/kernel/hal/atmega128/nrk_timer.c **** #include <nrk_timer.h>
  31:../../../src/kernel/hal/atmega128/nrk_timer.c **** #include <nrk_error.h>
  32:../../../src/kernel/hal/atmega128/nrk_timer.c **** #include <nrk_cfg.h>
  33:../../../src/kernel/hal/atmega128/nrk_timer.c **** 
  34:../../../src/kernel/hal/atmega128/nrk_timer.c **** void nrk_spin_wait_us(uint16_t timeout)
  35:../../../src/kernel/hal/atmega128/nrk_timer.c **** {
 142               	.LM0:
 143               	.LFBB1:
 144               	/* prologue: function */
 145               	/* frame size = 0 */
 146               	.L2:
  36:../../../src/kernel/hal/atmega128/nrk_timer.c **** 
  37:../../../src/kernel/hal/atmega128/nrk_timer.c ****     // This sequence uses exactly 8 clock cycle for each round
  38:../../../src/kernel/hal/atmega128/nrk_timer.c ****     do
  39:../../../src/kernel/hal/atmega128/nrk_timer.c ****     {
  40:../../../src/kernel/hal/atmega128/nrk_timer.c ****         NOP();
 148               	.LM1:
 149               	/* #APP */
 150               	 ;  41 "../../../src/kernel/hal/atmega128/nrk_timer.c" 1
 151 0000 0000      		nop
 152               		
 153               	 ;  0 "" 2
  41:../../../src/kernel/hal/atmega128/nrk_timer.c ****         NOP();
 155               	.LM2:
 156               	 ;  42 "../../../src/kernel/hal/atmega128/nrk_timer.c" 1
 157 0002 0000      		nop
 158               		
 159               	 ;  0 "" 2
  42:../../../src/kernel/hal/atmega128/nrk_timer.c ****         NOP();
 161               	.LM3:
 162               	 ;  43 "../../../src/kernel/hal/atmega128/nrk_timer.c" 1
 163 0004 0000      		nop
 164               		
 165               	 ;  0 "" 2
  43:../../../src/kernel/hal/atmega128/nrk_timer.c ****         NOP();
 167               	.LM4:
 168               	 ;  44 "../../../src/kernel/hal/atmega128/nrk_timer.c" 1
 169 0006 0000      		nop
 170               		
 171               	 ;  0 "" 2
  44:../../../src/kernel/hal/atmega128/nrk_timer.c ****     }
  45:../../../src/kernel/hal/atmega128/nrk_timer.c ****     while (--timeout);
 173               	.LM5:
 174               	/* #NOAPP */
 175 0008 0197      		sbiw r24,1
 176 000a 01F4      		brne .L2
 177               	/* epilogue start */
  46:../../../src/kernel/hal/atmega128/nrk_timer.c **** 
  47:../../../src/kernel/hal/atmega128/nrk_timer.c **** }
 179               	.LM6:
 180 000c 0895      		ret
 182               	.Lscope1:
 184               		.stabd	78,0,0
 186               	.global	_nrk_setup_timer
 188               	_nrk_setup_timer:
 189               		.stabd	46,0,0
  48:../../../src/kernel/hal/atmega128/nrk_timer.c **** 
  49:../../../src/kernel/hal/atmega128/nrk_timer.c **** 
  50:../../../src/kernel/hal/atmega128/nrk_timer.c **** void _nrk_setup_timer()
  51:../../../src/kernel/hal/atmega128/nrk_timer.c **** {
 191               	.LM7:
 192               	.LFBB2:
 193               	/* prologue: function */
 194               	/* frame size = 0 */
  52:../../../src/kernel/hal/atmega128/nrk_timer.c ****     _nrk_prev_timer_val=254;
  53:../../../src/kernel/hal/atmega128/nrk_timer.c **** 
  54:../../../src/kernel/hal/atmega128/nrk_timer.c **** // Timer 0 Setup as Asynchronous timer running from 32Khz Clock
  55:../../../src/kernel/hal/atmega128/nrk_timer.c ****     ASSR = BM(AS0);
 196               	.LM8:
 197 000e 88E0      		ldi r24,lo8(8)
 198 0010 80BF      		out 80-32,r24
  56:../../../src/kernel/hal/atmega128/nrk_timer.c ****     OCR0 = _nrk_prev_timer_val;
 200               	.LM9:
 201 0012 8EEF      		ldi r24,lo8(-2)
 202 0014 81BF      		out 81-32,r24
  57:../../../src/kernel/hal/atmega128/nrk_timer.c ****     TIFR =   BM(OCF0) | BM(TOV0);       // Clear interrupt flag
 204               	.LM10:
 205 0016 83E0      		ldi r24,lo8(3)
 206 0018 86BF      		out 86-32,r24
  58:../../../src/kernel/hal/atmega128/nrk_timer.c ****     // TOP = OCR0, OCR0 update immediate, Overflow is set on MAX (255), Prescaler 32, Clear timer o
  59:../../../src/kernel/hal/atmega128/nrk_timer.c ****     TCCR0 = BM(WGM01) | BM(CS01) | BM(CS00);
 208               	.LM11:
 209 001a 9BE0      		ldi r25,lo8(11)
 210 001c 93BF      		out 83-32,r25
  60:../../../src/kernel/hal/atmega128/nrk_timer.c ****     SFIOR |= TSM;              // reset prescaler
 212               	.LM12:
 213 001e 80B5      		in r24,64-32
 214 0020 8760      		ori r24,lo8(7)
 215 0022 80BD      		out 64-32,r24
  61:../../../src/kernel/hal/atmega128/nrk_timer.c **** 
  62:../../../src/kernel/hal/atmega128/nrk_timer.c ****     // Clear interrupt flag
  63:../../../src/kernel/hal/atmega128/nrk_timer.c **** //    TIFR =   BM(OCF0) | BM(TOV0);
  64:../../../src/kernel/hal/atmega128/nrk_timer.c ****     // reset counter on interrupt, set divider to 128
  65:../../../src/kernel/hal/atmega128/nrk_timer.c **** //    TCCR0 = BM(WGM01) | BM(CS01) | BM(CS00);
  66:../../../src/kernel/hal/atmega128/nrk_timer.c ****     // reset prescaler
  67:../../../src/kernel/hal/atmega128/nrk_timer.c **** //    SFIOR |= TSM;
  68:../../../src/kernel/hal/atmega128/nrk_timer.c **** 
  69:../../../src/kernel/hal/atmega128/nrk_timer.c **** // Timer 1 High Precision Timer
  70:../../../src/kernel/hal/atmega128/nrk_timer.c **** // No interrupt, prescaler 1, Normal Operation
  71:../../../src/kernel/hal/atmega128/nrk_timer.c ****     TCCR1A=0;
 217               	.LM13:
 218 0024 1FBC      		out 79-32,__zero_reg__
  72:../../../src/kernel/hal/atmega128/nrk_timer.c ****     TCCR1B=BM(CS10);  // clk I/O no prescale
 220               	.LM14:
 221 0026 81E0      		ldi r24,lo8(1)
 222 0028 8EBD      		out 78-32,r24
  73:../../../src/kernel/hal/atmega128/nrk_timer.c ****     TCNT1=0;  // 16 bit
 224               	.LM15:
 225 002a 1DBC      		out (76)+1-32,__zero_reg__
 226 002c 1CBC      		out 76-32,__zero_reg__
  74:../../../src/kernel/hal/atmega128/nrk_timer.c ****     SFIOR |= BM(PSR321);              // reset prescaler
 228               	.LM16:
 229 002e 80B5      		in r24,64-32
 230 0030 8160      		ori r24,lo8(1)
 231 0032 80BD      		out 64-32,r24
 232               	.LBB10:
 233               	.LBB11:
  75:../../../src/kernel/hal/atmega128/nrk_timer.c **** 
  76:../../../src/kernel/hal/atmega128/nrk_timer.c ****     _nrk_os_timer_reset();
  77:../../../src/kernel/hal/atmega128/nrk_timer.c ****     _nrk_os_timer_start();
  78:../../../src/kernel/hal/atmega128/nrk_timer.c ****     _nrk_time_trigger=0;
  79:../../../src/kernel/hal/atmega128/nrk_timer.c **** }
  80:../../../src/kernel/hal/atmega128/nrk_timer.c **** 
  81:../../../src/kernel/hal/atmega128/nrk_timer.c **** void _nrk_high_speed_timer_stop()
  82:../../../src/kernel/hal/atmega128/nrk_timer.c **** {
  83:../../../src/kernel/hal/atmega128/nrk_timer.c ****     TCCR1B=0;  // no clock
  84:../../../src/kernel/hal/atmega128/nrk_timer.c **** }
  85:../../../src/kernel/hal/atmega128/nrk_timer.c **** 
  86:../../../src/kernel/hal/atmega128/nrk_timer.c **** void _nrk_high_speed_timer_start()
  87:../../../src/kernel/hal/atmega128/nrk_timer.c **** {
  88:../../../src/kernel/hal/atmega128/nrk_timer.c ****     TCCR1B=BM(CS10);  // clk I/O no prescaler
  89:../../../src/kernel/hal/atmega128/nrk_timer.c **** }
  90:../../../src/kernel/hal/atmega128/nrk_timer.c **** 
  91:../../../src/kernel/hal/atmega128/nrk_timer.c **** 
  92:../../../src/kernel/hal/atmega128/nrk_timer.c **** void _nrk_high_speed_timer_reset()
  93:../../../src/kernel/hal/atmega128/nrk_timer.c **** {
  94:../../../src/kernel/hal/atmega128/nrk_timer.c ****     //nrk_int_disable();
  95:../../../src/kernel/hal/atmega128/nrk_timer.c ****     SFIOR |= BM(PSR321);              // reset prescaler
  96:../../../src/kernel/hal/atmega128/nrk_timer.c ****     TCNT1=0;
  97:../../../src/kernel/hal/atmega128/nrk_timer.c ****     //nrk_int_enable();
  98:../../../src/kernel/hal/atmega128/nrk_timer.c **** }
  99:../../../src/kernel/hal/atmega128/nrk_timer.c **** 
 100:../../../src/kernel/hal/atmega128/nrk_timer.c **** /**
 101:../../../src/kernel/hal/atmega128/nrk_timer.c ****   This function blocks for n ticks of the high speed timer after the
 102:../../../src/kernel/hal/atmega128/nrk_timer.c ****   start number of ticks.  It will handle the overflow that can occur.
 103:../../../src/kernel/hal/atmega128/nrk_timer.c ****   Do not use this for delays longer than 8ms!
 104:../../../src/kernel/hal/atmega128/nrk_timer.c **** */
 105:../../../src/kernel/hal/atmega128/nrk_timer.c **** void nrk_high_speed_timer_wait( uint16_t start, uint16_t ticks )
 106:../../../src/kernel/hal/atmega128/nrk_timer.c **** {
 107:../../../src/kernel/hal/atmega128/nrk_timer.c ****     uint32_t tmp;
 108:../../../src/kernel/hal/atmega128/nrk_timer.c ****     if(start>65400) start=0;
 109:../../../src/kernel/hal/atmega128/nrk_timer.c ****     tmp=(uint32_t)start+(uint32_t)ticks;
 110:../../../src/kernel/hal/atmega128/nrk_timer.c ****     if(tmp>65536)
 111:../../../src/kernel/hal/atmega128/nrk_timer.c ****     {
 112:../../../src/kernel/hal/atmega128/nrk_timer.c ****         tmp-=65536;
 113:../../../src/kernel/hal/atmega128/nrk_timer.c ****         do {}
 114:../../../src/kernel/hal/atmega128/nrk_timer.c ****         while(_nrk_high_speed_timer_get()>start);
 115:../../../src/kernel/hal/atmega128/nrk_timer.c ****     }
 116:../../../src/kernel/hal/atmega128/nrk_timer.c **** 
 117:../../../src/kernel/hal/atmega128/nrk_timer.c ****     ticks=tmp;
 118:../../../src/kernel/hal/atmega128/nrk_timer.c ****     do {}
 119:../../../src/kernel/hal/atmega128/nrk_timer.c ****     while(_nrk_high_speed_timer_get()<ticks);
 120:../../../src/kernel/hal/atmega128/nrk_timer.c **** }
 121:../../../src/kernel/hal/atmega128/nrk_timer.c **** 
 122:../../../src/kernel/hal/atmega128/nrk_timer.c **** inline uint16_t _nrk_high_speed_timer_get()
 123:../../../src/kernel/hal/atmega128/nrk_timer.c **** {
 124:../../../src/kernel/hal/atmega128/nrk_timer.c ****     volatile uint16_t tmp;
 125:../../../src/kernel/hal/atmega128/nrk_timer.c ****     //nrk_int_disable();
 126:../../../src/kernel/hal/atmega128/nrk_timer.c ****     tmp=TCNT1;
 127:../../../src/kernel/hal/atmega128/nrk_timer.c ****     //nrk_int_enable();
 128:../../../src/kernel/hal/atmega128/nrk_timer.c ****     return tmp;
 129:../../../src/kernel/hal/atmega128/nrk_timer.c **** }
 130:../../../src/kernel/hal/atmega128/nrk_timer.c **** 
 131:../../../src/kernel/hal/atmega128/nrk_timer.c **** void _nrk_os_timer_set(uint8_t v)
 132:../../../src/kernel/hal/atmega128/nrk_timer.c **** {
 133:../../../src/kernel/hal/atmega128/nrk_timer.c ****     TCNT0=v;
 134:../../../src/kernel/hal/atmega128/nrk_timer.c **** }
 135:../../../src/kernel/hal/atmega128/nrk_timer.c **** 
 136:../../../src/kernel/hal/atmega128/nrk_timer.c **** 
 137:../../../src/kernel/hal/atmega128/nrk_timer.c **** void _nrk_os_timer_stop()
 138:../../../src/kernel/hal/atmega128/nrk_timer.c **** {
 139:../../../src/kernel/hal/atmega128/nrk_timer.c ****     TCCR0 = 0;  // stop clock
 140:../../../src/kernel/hal/atmega128/nrk_timer.c ****     TIMSK &=  ~BM(OCIE0) ;
 141:../../../src/kernel/hal/atmega128/nrk_timer.c ****     TIMSK &=  ~BM(TOIE0) ;
 142:../../../src/kernel/hal/atmega128/nrk_timer.c ****     //ASSR = 0;
 143:../../../src/kernel/hal/atmega128/nrk_timer.c **** }
 144:../../../src/kernel/hal/atmega128/nrk_timer.c **** //must also include timer3
 145:../../../src/kernel/hal/atmega128/nrk_timer.c **** void _nrk_os_timer_start()
 146:../../../src/kernel/hal/atmega128/nrk_timer.c **** {
 147:../../../src/kernel/hal/atmega128/nrk_timer.c ****     TCCR0 = BM(WGM01) | BM(CS01) | BM(CS00); // set divider to 32
 148:../../../src/kernel/hal/atmega128/nrk_timer.c ****     TIMSK =  TIMSK| BM(OCIE0) | BM(TOIE0) ;//| BM(TICIE1);    // Enable interrupt
 149:../../../src/kernel/hal/atmega128/nrk_timer.c **** }
 150:../../../src/kernel/hal/atmega128/nrk_timer.c **** 
 151:../../../src/kernel/hal/atmega128/nrk_timer.c **** inline void _nrk_os_timer_reset()
 152:../../../src/kernel/hal/atmega128/nrk_timer.c **** {
 153:../../../src/kernel/hal/atmega128/nrk_timer.c **** 
 154:../../../src/kernel/hal/atmega128/nrk_timer.c ****     SFIOR |= BM(PSR0);              // reset prescaler
 235               	.LM17:
 236 0034 80B5      		in r24,64-32
 237 0036 8260      		ori r24,lo8(2)
 238 0038 80BD      		out 64-32,r24
 155:../../../src/kernel/hal/atmega128/nrk_timer.c ****     TCNT0 = 0;                  // reset counter
 240               	.LM18:
 241 003a 12BE      		out 82-32,__zero_reg__
 156:../../../src/kernel/hal/atmega128/nrk_timer.c ****     _nrk_time_trigger=0;
 157:../../../src/kernel/hal/atmega128/nrk_timer.c ****     _nrk_prev_timer_val=0;
 243               	.LM19:
 244 003c 1092 0000 		sts _nrk_prev_timer_val,__zero_reg__
 245               	.LBE11:
 246               	.LBE10:
 247               	.LBB12:
 248               	.LBB13:
 148:../../../src/kernel/hal/atmega128/nrk_timer.c ****     TCCR0 = BM(WGM01) | BM(CS01) | BM(CS00); // set divider to 32
 250               	.LM20:
 251 0040 93BF      		out 83-32,r25
 149:../../../src/kernel/hal/atmega128/nrk_timer.c ****     TIMSK =  TIMSK| BM(OCIE0) | BM(TOIE0) ;//| BM(TICIE1);    // Enable interrupt
 253               	.LM21:
 254 0042 87B7      		in r24,87-32
 255 0044 8360      		ori r24,lo8(3)
 256 0046 87BF      		out 87-32,r24
 257               	.LBE13:
 258               	.LBE12:
  79:../../../src/kernel/hal/atmega128/nrk_timer.c ****     _nrk_time_trigger=0;
 260               	.LM22:
 261 0048 1092 0000 		sts _nrk_time_trigger,__zero_reg__
 262               	/* epilogue start */
  80:../../../src/kernel/hal/atmega128/nrk_timer.c **** }
 264               	.LM23:
 265 004c 0895      		ret
 267               	.Lscope2:
 269               		.stabd	78,0,0
 271               	.global	_nrk_high_speed_timer_stop
 273               	_nrk_high_speed_timer_stop:
 274               		.stabd	46,0,0
  83:../../../src/kernel/hal/atmega128/nrk_timer.c **** {
 276               	.LM24:
 277               	.LFBB3:
 278               	/* prologue: function */
 279               	/* frame size = 0 */
  84:../../../src/kernel/hal/atmega128/nrk_timer.c ****     TCCR1B=0;  // no clock
 281               	.LM25:
 282 004e 1EBC      		out 78-32,__zero_reg__
 283               	/* epilogue start */
  85:../../../src/kernel/hal/atmega128/nrk_timer.c **** }
 285               	.LM26:
 286 0050 0895      		ret
 288               	.Lscope3:
 290               		.stabd	78,0,0
 292               	.global	_nrk_high_speed_timer_start
 294               	_nrk_high_speed_timer_start:
 295               		.stabd	46,0,0
  88:../../../src/kernel/hal/atmega128/nrk_timer.c **** {
 297               	.LM27:
 298               	.LFBB4:
 299               	/* prologue: function */
 300               	/* frame size = 0 */
  89:../../../src/kernel/hal/atmega128/nrk_timer.c ****     TCCR1B=BM(CS10);  // clk I/O no prescaler
 302               	.LM28:
 303 0052 81E0      		ldi r24,lo8(1)
 304 0054 8EBD      		out 78-32,r24
 305               	/* epilogue start */
  90:../../../src/kernel/hal/atmega128/nrk_timer.c **** }
 307               	.LM29:
 308 0056 0895      		ret
 310               	.Lscope4:
 312               		.stabd	78,0,0
 314               	.global	_nrk_high_speed_timer_reset
 316               	_nrk_high_speed_timer_reset:
 317               		.stabd	46,0,0
  94:../../../src/kernel/hal/atmega128/nrk_timer.c **** {
 319               	.LM30:
 320               	.LFBB5:
 321               	/* prologue: function */
 322               	/* frame size = 0 */
  96:../../../src/kernel/hal/atmega128/nrk_timer.c ****     SFIOR |= BM(PSR321);              // reset prescaler
 324               	.LM31:
 325 0058 80B5      		in r24,64-32
 326 005a 8160      		ori r24,lo8(1)
 327 005c 80BD      		out 64-32,r24
  97:../../../src/kernel/hal/atmega128/nrk_timer.c ****     TCNT1=0;
 329               	.LM32:
 330 005e 1DBC      		out (76)+1-32,__zero_reg__
 331 0060 1CBC      		out 76-32,__zero_reg__
 332               	/* epilogue start */
  99:../../../src/kernel/hal/atmega128/nrk_timer.c **** }
 334               	.LM33:
 335 0062 0895      		ret
 337               	.Lscope5:
 339               		.stabd	78,0,0
 343               	.global	nrk_high_speed_timer_wait
 345               	nrk_high_speed_timer_wait:
 346               		.stabd	46,0,0
 107:../../../src/kernel/hal/atmega128/nrk_timer.c **** {
 348               	.LM34:
 349               	.LFBB6:
 350 0064 DF93      		push r29
 351 0066 CF93      		push r28
 352 0068 00D0      		rcall .
 353 006a CDB7      		in r28,__SP_L__
 354 006c DEB7      		in r29,__SP_H__
 355               	/* prologue: function */
 356               	/* frame size = 2 */
 357 006e FC01      		movw r30,r24
 109:../../../src/kernel/hal/atmega128/nrk_timer.c ****     if(start>65400) start=0;
 359               	.LM35:
 360 0070 8FEF      		ldi r24,hi8(-135)
 361 0072 E937      		cpi r30,lo8(-135)
 362 0074 F807      		cpc r31,r24
 363 0076 00F0      		brlo .L14
 364 0078 E0E0      		ldi r30,lo8(0)
 365 007a F0E0      		ldi r31,hi8(0)
 366               	.L14:
 110:../../../src/kernel/hal/atmega128/nrk_timer.c ****     tmp=(uint32_t)start+(uint32_t)ticks;
 368               	.LM36:
 369 007c 9F01      		movw r18,r30
 370 007e 40E0      		ldi r20,lo8(0)
 371 0080 50E0      		ldi r21,hi8(0)
 372 0082 CB01      		movw r24,r22
 373 0084 A0E0      		ldi r26,lo8(0)
 374 0086 B0E0      		ldi r27,hi8(0)
 375 0088 280F      		add r18,r24
 376 008a 391F      		adc r19,r25
 377 008c 4A1F      		adc r20,r26
 378 008e 5B1F      		adc r21,r27
 111:../../../src/kernel/hal/atmega128/nrk_timer.c ****     if(tmp>65536)
 380               	.LM37:
 381 0090 2130      		cpi r18,lo8(65537)
 382 0092 80E0      		ldi r24,hi8(65537)
 383 0094 3807      		cpc r19,r24
 384 0096 81E0      		ldi r24,hlo8(65537)
 385 0098 4807      		cpc r20,r24
 386 009a 80E0      		ldi r24,hhi8(65537)
 387 009c 5807      		cpc r21,r24
 388 009e 00F0      		brlo .L17
 389               	.L19:
 390               	.LBB14:
 391               	.LBB15:
 127:../../../src/kernel/hal/atmega128/nrk_timer.c ****     tmp=TCNT1;
 393               	.LM38:
 394 00a0 8CB5      		in r24,76-32
 395 00a2 9DB5      		in r25,(76)+1-32
 396 00a4 9A83      		std Y+2,r25
 397 00a6 8983      		std Y+1,r24
 129:../../../src/kernel/hal/atmega128/nrk_timer.c ****     return tmp;
 399               	.LM39:
 400 00a8 8981      		ldd r24,Y+1
 401 00aa 9A81      		ldd r25,Y+2
 402               	.LBE15:
 403               	.LBE14:
 115:../../../src/kernel/hal/atmega128/nrk_timer.c ****         while(_nrk_high_speed_timer_get()>start);
 405               	.LM40:
 406 00ac E817      		cp r30,r24
 407 00ae F907      		cpc r31,r25
 408 00b0 00F0      		brlo .L19
 113:../../../src/kernel/hal/atmega128/nrk_timer.c ****         tmp-=65536;
 410               	.LM41:
 411 00b2 2050      		subi r18,lo8(-(-65536))
 412 00b4 3040      		sbci r19,hi8(-(-65536))
 413 00b6 4140      		sbci r20,hlo8(-(-65536))
 414 00b8 5040      		sbci r21,hhi8(-(-65536))
 415               	.L17:
 416               	.LBB16:
 417               	.LBB17:
 127:../../../src/kernel/hal/atmega128/nrk_timer.c ****     tmp=TCNT1;
 419               	.LM42:
 420 00ba 8CB5      		in r24,76-32
 421 00bc 9DB5      		in r25,(76)+1-32
 422 00be 9A83      		std Y+2,r25
 423 00c0 8983      		std Y+1,r24
 129:../../../src/kernel/hal/atmega128/nrk_timer.c ****     return tmp;
 425               	.LM43:
 426 00c2 8981      		ldd r24,Y+1
 427 00c4 9A81      		ldd r25,Y+2
 428               	.LBE17:
 429               	.LBE16:
 120:../../../src/kernel/hal/atmega128/nrk_timer.c ****     while(_nrk_high_speed_timer_get()<ticks);
 431               	.LM44:
 432 00c6 8217      		cp r24,r18
 433 00c8 9307      		cpc r25,r19
 434 00ca 00F0      		brlo .L17
 435               	/* epilogue start */
 121:../../../src/kernel/hal/atmega128/nrk_timer.c **** }
 437               	.LM45:
 438 00cc 0F90      		pop __tmp_reg__
 439 00ce 0F90      		pop __tmp_reg__
 440 00d0 CF91      		pop r28
 441 00d2 DF91      		pop r29
 442 00d4 0895      		ret
 453               	.Lscope6:
 455               		.stabd	78,0,0
 457               	.global	_nrk_high_speed_timer_get
 459               	_nrk_high_speed_timer_get:
 460               		.stabd	46,0,0
 124:../../../src/kernel/hal/atmega128/nrk_timer.c **** {
 462               	.LM46:
 463               	.LFBB7:
 464 00d6 DF93      		push r29
 465 00d8 CF93      		push r28
 466 00da 00D0      		rcall .
 467 00dc CDB7      		in r28,__SP_L__
 468 00de DEB7      		in r29,__SP_H__
 469               	/* prologue: function */
 470               	/* frame size = 2 */
 127:../../../src/kernel/hal/atmega128/nrk_timer.c ****     tmp=TCNT1;
 472               	.LM47:
 473 00e0 8CB5      		in r24,76-32
 474 00e2 9DB5      		in r25,(76)+1-32
 475 00e4 9A83      		std Y+2,r25
 476 00e6 8983      		std Y+1,r24
 129:../../../src/kernel/hal/atmega128/nrk_timer.c ****     return tmp;
 478               	.LM48:
 479 00e8 2981      		ldd r18,Y+1
 480 00ea 3A81      		ldd r19,Y+2
 130:../../../src/kernel/hal/atmega128/nrk_timer.c **** }
 482               	.LM49:
 483 00ec C901      		movw r24,r18
 484               	/* epilogue start */
 485 00ee 0F90      		pop __tmp_reg__
 486 00f0 0F90      		pop __tmp_reg__
 487 00f2 CF91      		pop r28
 488 00f4 DF91      		pop r29
 489 00f6 0895      		ret
 494               	.Lscope7:
 496               		.stabd	78,0,0
 499               	.global	_nrk_os_timer_set
 501               	_nrk_os_timer_set:
 502               		.stabd	46,0,0
 133:../../../src/kernel/hal/atmega128/nrk_timer.c **** {
 504               	.LM50:
 505               	.LFBB8:
 506               	/* prologue: function */
 507               	/* frame size = 0 */
 134:../../../src/kernel/hal/atmega128/nrk_timer.c ****     TCNT0=v;
 509               	.LM51:
 510 00f8 82BF      		out 82-32,r24
 511               	/* epilogue start */
 135:../../../src/kernel/hal/atmega128/nrk_timer.c **** }
 513               	.LM52:
 514 00fa 0895      		ret
 516               	.Lscope8:
 518               		.stabd	78,0,0
 520               	.global	_nrk_os_timer_stop
 522               	_nrk_os_timer_stop:
 523               		.stabd	46,0,0
 139:../../../src/kernel/hal/atmega128/nrk_timer.c **** {
 525               	.LM53:
 526               	.LFBB9:
 527               	/* prologue: function */
 528               	/* frame size = 0 */
 140:../../../src/kernel/hal/atmega128/nrk_timer.c ****     TCCR0 = 0;  // stop clock
 530               	.LM54:
 531 00fc 13BE      		out 83-32,__zero_reg__
 141:../../../src/kernel/hal/atmega128/nrk_timer.c ****     TIMSK &=  ~BM(OCIE0) ;
 533               	.LM55:
 534 00fe 87B7      		in r24,87-32
 535 0100 8D7F      		andi r24,lo8(-3)
 536 0102 87BF      		out 87-32,r24
 142:../../../src/kernel/hal/atmega128/nrk_timer.c ****     TIMSK &=  ~BM(TOIE0) ;
 538               	.LM56:
 539 0104 87B7      		in r24,87-32
 540 0106 8E7F      		andi r24,lo8(-2)
 541 0108 87BF      		out 87-32,r24
 542               	/* epilogue start */
 144:../../../src/kernel/hal/atmega128/nrk_timer.c **** }
 544               	.LM57:
 545 010a 0895      		ret
 547               	.Lscope9:
 549               		.stabd	78,0,0
 551               	.global	_nrk_os_timer_start
 553               	_nrk_os_timer_start:
 554               		.stabd	46,0,0
 147:../../../src/kernel/hal/atmega128/nrk_timer.c **** {
 556               	.LM58:
 557               	.LFBB10:
 558               	/* prologue: function */
 559               	/* frame size = 0 */
 148:../../../src/kernel/hal/atmega128/nrk_timer.c ****     TCCR0 = BM(WGM01) | BM(CS01) | BM(CS00); // set divider to 32
 561               	.LM59:
 562 010c 8BE0      		ldi r24,lo8(11)
 563 010e 83BF      		out 83-32,r24
 149:../../../src/kernel/hal/atmega128/nrk_timer.c ****     TIMSK =  TIMSK| BM(OCIE0) | BM(TOIE0) ;//| BM(TICIE1);    // Enable interrupt
 565               	.LM60:
 566 0110 87B7      		in r24,87-32
 567 0112 8360      		ori r24,lo8(3)
 568 0114 87BF      		out 87-32,r24
 569               	/* epilogue start */
 150:../../../src/kernel/hal/atmega128/nrk_timer.c **** }
 571               	.LM61:
 572 0116 0895      		ret
 574               	.Lscope10:
 576               		.stabd	78,0,0
 578               	.global	_nrk_os_timer_reset
 580               	_nrk_os_timer_reset:
 581               		.stabd	46,0,0
 153:../../../src/kernel/hal/atmega128/nrk_timer.c **** {
 583               	.LM62:
 584               	.LFBB11:
 585               	/* prologue: function */
 586               	/* frame size = 0 */
 155:../../../src/kernel/hal/atmega128/nrk_timer.c ****     SFIOR |= BM(PSR0);              // reset prescaler
 588               	.LM63:
 589 0118 80B5      		in r24,64-32
 590 011a 8260      		ori r24,lo8(2)
 591 011c 80BD      		out 64-32,r24
 156:../../../src/kernel/hal/atmega128/nrk_timer.c ****     TCNT0 = 0;                  // reset counter
 593               	.LM64:
 594 011e 12BE      		out 82-32,__zero_reg__
 157:../../../src/kernel/hal/atmega128/nrk_timer.c ****     _nrk_time_trigger=0;
 596               	.LM65:
 597 0120 1092 0000 		sts _nrk_time_trigger,__zero_reg__
 599               	.LM66:
 600 0124 1092 0000 		sts _nrk_prev_timer_val,__zero_reg__
 601               	/* epilogue start */
 158:../../../src/kernel/hal/atmega128/nrk_timer.c **** }
 603               	.LM67:
 604 0128 0895      		ret
 606               	.Lscope11:
 608               		.stabd	78,0,0
 610               	.global	_nrk_precision_os_timer_reset
 612               	_nrk_precision_os_timer_reset:
 613               		.stabd	46,0,0
 159:../../../src/kernel/hal/atmega128/nrk_timer.c **** 
 160:../../../src/kernel/hal/atmega128/nrk_timer.c **** void _nrk_precision_os_timer_reset()
 161:../../../src/kernel/hal/atmega128/nrk_timer.c **** {
 615               	.LM68:
 616               	.LFBB12:
 617               	/* prologue: function */
 618               	/* frame size = 0 */
 619               	/* epilogue start */
 162:../../../src/kernel/hal/atmega128/nrk_timer.c **** //   _nrk_os_timer_reset();
 163:../../../src/kernel/hal/atmega128/nrk_timer.c **** }
 621               	.LM69:
 622 012a 0895      		ret
 624               	.Lscope12:
 626               		.stabd	78,0,0
 628               	.global	_nrk_get_next_wakeup
 630               	_nrk_get_next_wakeup:
 631               		.stabd	46,0,0
 164:../../../src/kernel/hal/atmega128/nrk_timer.c **** 
 165:../../../src/kernel/hal/atmega128/nrk_timer.c **** 
 166:../../../src/kernel/hal/atmega128/nrk_timer.c **** uint8_t _nrk_get_next_wakeup()
 167:../../../src/kernel/hal/atmega128/nrk_timer.c **** {
 633               	.LM70:
 634               	.LFBB13:
 635               	/* prologue: function */
 636               	/* frame size = 0 */
 168:../../../src/kernel/hal/atmega128/nrk_timer.c ****     return OCR0+1;      // pdiener: what's this +1 ?
 638               	.LM71:
 639 012c 81B7      		in r24,81-32
 169:../../../src/kernel/hal/atmega128/nrk_timer.c **** }
 641               	.LM72:
 642 012e 8F5F      		subi r24,lo8(-(1))
 643               	/* epilogue start */
 644 0130 0895      		ret
 646               	.Lscope13:
 648               		.stabd	78,0,0
 651               	.global	_nrk_set_next_wakeup
 653               	_nrk_set_next_wakeup:
 654               		.stabd	46,0,0
 170:../../../src/kernel/hal/atmega128/nrk_timer.c **** 
 171:../../../src/kernel/hal/atmega128/nrk_timer.c **** void _nrk_set_next_wakeup(uint8_t nw)
 172:../../../src/kernel/hal/atmega128/nrk_timer.c **** {
 656               	.LM73:
 657               	.LFBB14:
 658               	/* prologue: function */
 659               	/* frame size = 0 */
 173:../../../src/kernel/hal/atmega128/nrk_timer.c ****     OCR0 = nw-1;        // pdiener: what's this -1 ?
 661               	.LM74:
 662 0132 8150      		subi r24,lo8(-(-1))
 663 0134 81BF      		out 81-32,r24
 664               	/* epilogue start */
 174:../../../src/kernel/hal/atmega128/nrk_timer.c **** }
 666               	.LM75:
 667 0136 0895      		ret
 669               	.Lscope14:
 671               		.stabd	78,0,0
 673               	.global	_nrk_os_timer_get
 675               	_nrk_os_timer_get:
 676               		.stabd	46,0,0
 175:../../../src/kernel/hal/atmega128/nrk_timer.c **** 
 176:../../../src/kernel/hal/atmega128/nrk_timer.c **** 
 177:../../../src/kernel/hal/atmega128/nrk_timer.c **** 
 178:../../../src/kernel/hal/atmega128/nrk_timer.c **** inline uint8_t _nrk_os_timer_get()
 179:../../../src/kernel/hal/atmega128/nrk_timer.c **** {
 678               	.LM76:
 679               	.LFBB15:
 680               	/* prologue: function */
 681               	/* frame size = 0 */
 180:../../../src/kernel/hal/atmega128/nrk_timer.c ****     return TCNT0;
 683               	.LM77:
 684 0138 82B7      		in r24,82-32
 685               	/* epilogue start */
 181:../../../src/kernel/hal/atmega128/nrk_timer.c **** }
 687               	.LM78:
 688 013a 0895      		ret
 690               	.Lscope15:
 692               		.stabd	78,0,0
 694               	.global	__vector_16
 696               	__vector_16:
 697               		.stabd	46,0,0
 182:../../../src/kernel/hal/atmega128/nrk_timer.c **** 
 183:../../../src/kernel/hal/atmega128/nrk_timer.c **** //-------------------------------------------------------------------------------------------------
 184:../../../src/kernel/hal/atmega128/nrk_timer.c **** //  Default ISR
 185:../../../src/kernel/hal/atmega128/nrk_timer.c **** //-------------------------------------------------------------------------------------------------
 186:../../../src/kernel/hal/atmega128/nrk_timer.c **** SIGNAL(__vector_default)
 187:../../../src/kernel/hal/atmega128/nrk_timer.c **** {
 188:../../../src/kernel/hal/atmega128/nrk_timer.c ****     nrk_kernel_error_add(NRK_SEG_FAULT,0);
 189:../../../src/kernel/hal/atmega128/nrk_timer.c **** }
 190:../../../src/kernel/hal/atmega128/nrk_timer.c **** 
 191:../../../src/kernel/hal/atmega128/nrk_timer.c **** //SIGNAL(SIG_OVERFLOW0) {
 192:../../../src/kernel/hal/atmega128/nrk_timer.c **** void SIG_OVERFLOW0( void ) __attribute__ ( ( signal,naked ));
 193:../../../src/kernel/hal/atmega128/nrk_timer.c **** void SIG_OVERFLOW0(void)
 194:../../../src/kernel/hal/atmega128/nrk_timer.c **** {
 699               	.LM79:
 700               	.LFBB16:
 701               	/* prologue: naked */
 702               	/* frame size = 0 */
 703               	/* epilogue start */
 195:../../../src/kernel/hal/atmega128/nrk_timer.c **** #ifdef NRK_KERNEL_TEST
 196:../../../src/kernel/hal/atmega128/nrk_timer.c ****     nrk_kernel_error_add(NRK_TIMER_OVERFLOW,0);
 197:../../../src/kernel/hal/atmega128/nrk_timer.c **** #endif
 198:../../../src/kernel/hal/atmega128/nrk_timer.c ****     return;
 199:../../../src/kernel/hal/atmega128/nrk_timer.c **** }
 705               	.LM80:
 707               	.Lscope16:
 709               		.stabd	78,0,0
 711               	.global	__vector_15
 713               	__vector_15:
 714               		.stabd	46,0,0
 200:../../../src/kernel/hal/atmega128/nrk_timer.c **** 
 201:../../../src/kernel/hal/atmega128/nrk_timer.c **** // This is the SUSPEND for the OS timer Tick
 202:../../../src/kernel/hal/atmega128/nrk_timer.c **** // pdiener: All registers are saved and control is transfered from a task to the kernel
 203:../../../src/kernel/hal/atmega128/nrk_timer.c **** void SIG_OUTPUT_COMPARE0( void ) __attribute__ ( ( signal,naked ));
 204:../../../src/kernel/hal/atmega128/nrk_timer.c **** void SIG_OUTPUT_COMPARE0(void)
 205:../../../src/kernel/hal/atmega128/nrk_timer.c **** {
 716               	.LM81:
 717               	.LFBB17:
 718               	/* prologue: naked */
 719               	/* frame size = 0 */
 206:../../../src/kernel/hal/atmega128/nrk_timer.c ****     asm volatile (
 721               	.LM82:
 722               	/* #APP */
 723               	 ;  207 "../../../src/kernel/hal/atmega128/nrk_timer.c" 1
 724 013c 0F92      		push    r0 
 725 013e 0FB6      		in      r0, __SREG__  
 726 0140 0F92      		push    r0  
 727 0142 1F92      		push    r1 
 728 0144 2F92      		push    r2 
 729 0146 3F92      		push    r3 
 730 0148 4F92      		push    r4 
 731 014a 5F92      		push    r5 
 732 014c 6F92      		push    r6 
 733 014e 7F92      		push    r7 
 734 0150 8F92      		push    r8 
 735 0152 9F92      		push    r9 
 736 0154 AF92      		push    r10 
 737 0156 BF92      		push    r11 
 738 0158 CF92      		push    r12 
 739 015a DF92      		push    r13 
 740 015c EF92      		push    r14 
 741 015e FF92      		push    r15 
 742 0160 0F93      		push    r16 
 743 0162 1F93      		push    r17 
 744 0164 2F93      		push    r18 
 745 0166 3F93      		push    r19 
 746 0168 4F93      		push    r20 
 747 016a 5F93      		push    r21 
 748 016c 6F93      		push    r22 
 749 016e 7F93      		push    r23 
 750 0170 8F93      		push    r24 
 751 0172 9F93      		push    r25 
 752 0174 AF93      		push    r26 
 753 0176 BF93      		push    r27 
 754 0178 CF93      		push    r28 
 755 017a DF93      		push    r29 
 756 017c EF93      		push    r30 
 757 017e FF93      		push    r31 
 758 0180 A091 0000 		lds r26,nrk_cur_task_TCB 
 759 0184 B091 0000 		lds r27,nrk_cur_task_TCB+1 
 760 0188 0DB6      		in r0,__SP_L__ 
 761 018a 0D92      		st x+, r0 
 762 018c 0EB6      		in r0,__SP_H__ 
 763 018e 0D92      		st x+, r0 
 764 0190 1F92      		push r1  
 765 0192 A091 0000 		lds r26,nrk_kernel_stk_ptr 
 766 0196 B091 0000 		lds r27,nrk_kernel_stk_ptr+1 
 767 019a 1E90      		ld r1,-x 
 768 019c BEBF      		out __SP_H__, r27 
 769 019e ADBF      		out __SP_L__, r26 
 770 01a0 0895      		ret
 771               		
 772               	 ;  0 "" 2
 773               	/* epilogue start */
 207:../../../src/kernel/hal/atmega128/nrk_timer.c ****         "push    r0 \n\t" \
 208:../../../src/kernel/hal/atmega128/nrk_timer.c ****         "in      r0, __SREG__  \n\t" \
 209:../../../src/kernel/hal/atmega128/nrk_timer.c ****         "push    r0  \n\t" \
 210:../../../src/kernel/hal/atmega128/nrk_timer.c ****         "push    r1 \n\t" \
 211:../../../src/kernel/hal/atmega128/nrk_timer.c ****         "push    r2 \n\t" \
 212:../../../src/kernel/hal/atmega128/nrk_timer.c ****         "push    r3 \n\t" \
 213:../../../src/kernel/hal/atmega128/nrk_timer.c ****         "push    r4 \n\t" \
 214:../../../src/kernel/hal/atmega128/nrk_timer.c ****         "push    r5 \n\t" \
 215:../../../src/kernel/hal/atmega128/nrk_timer.c ****         "push    r6 \n\t" \
 216:../../../src/kernel/hal/atmega128/nrk_timer.c ****         "push    r7 \n\t" \
 217:../../../src/kernel/hal/atmega128/nrk_timer.c ****         "push    r8 \n\t" \
 218:../../../src/kernel/hal/atmega128/nrk_timer.c ****         "push    r9 \n\t" \
 219:../../../src/kernel/hal/atmega128/nrk_timer.c ****         "push    r10 \n\t" \
 220:../../../src/kernel/hal/atmega128/nrk_timer.c ****         "push    r11 \n\t" \
 221:../../../src/kernel/hal/atmega128/nrk_timer.c ****         "push    r12 \n\t" \
 222:../../../src/kernel/hal/atmega128/nrk_timer.c ****         "push    r13 \n\t" \
 223:../../../src/kernel/hal/atmega128/nrk_timer.c ****         "push    r14 \n\t" \
 224:../../../src/kernel/hal/atmega128/nrk_timer.c ****         "push    r15 \n\t" \
 225:../../../src/kernel/hal/atmega128/nrk_timer.c ****         "push    r16 \n\t" \
 226:../../../src/kernel/hal/atmega128/nrk_timer.c ****         "push    r17 \n\t" \
 227:../../../src/kernel/hal/atmega128/nrk_timer.c ****         "push    r18 \n\t" \
 228:../../../src/kernel/hal/atmega128/nrk_timer.c ****         "push    r19 \n\t" \
 229:../../../src/kernel/hal/atmega128/nrk_timer.c ****         "push    r20 \n\t" \
 230:../../../src/kernel/hal/atmega128/nrk_timer.c ****         "push    r21 \n\t" \
 231:../../../src/kernel/hal/atmega128/nrk_timer.c ****         "push    r22 \n\t" \
 232:../../../src/kernel/hal/atmega128/nrk_timer.c ****         "push    r23 \n\t" \
 233:../../../src/kernel/hal/atmega128/nrk_timer.c ****         "push    r24 \n\t" \
 234:../../../src/kernel/hal/atmega128/nrk_timer.c ****         "push    r25 \n\t" \
 235:../../../src/kernel/hal/atmega128/nrk_timer.c ****         "push    r26 \n\t" \
 236:../../../src/kernel/hal/atmega128/nrk_timer.c ****         "push    r27 \n\t" \
 237:../../../src/kernel/hal/atmega128/nrk_timer.c ****         "push    r28 \n\t" \
 238:../../../src/kernel/hal/atmega128/nrk_timer.c ****         "push    r29 \n\t" \
 239:../../../src/kernel/hal/atmega128/nrk_timer.c ****         "push    r30 \n\t" \
 240:../../../src/kernel/hal/atmega128/nrk_timer.c ****         "push    r31 \n\t" \
 241:../../../src/kernel/hal/atmega128/nrk_timer.c ****         "lds r26,nrk_cur_task_TCB \n\t" \
 242:../../../src/kernel/hal/atmega128/nrk_timer.c ****         "lds r27,nrk_cur_task_TCB+1 \n\t" \
 243:../../../src/kernel/hal/atmega128/nrk_timer.c ****         "in r0,__SP_L__ \n\t" \
 244:../../../src/kernel/hal/atmega128/nrk_timer.c ****         "st x+, r0 \n\t" \
 245:../../../src/kernel/hal/atmega128/nrk_timer.c ****         "in r0,__SP_H__ \n\t" \
 246:../../../src/kernel/hal/atmega128/nrk_timer.c ****         "st x+, r0 \n\t" \
 247:../../../src/kernel/hal/atmega128/nrk_timer.c ****         "push r1  \n\t" \
 248:../../../src/kernel/hal/atmega128/nrk_timer.c ****         "lds r26,nrk_kernel_stk_ptr \n\t" \
 249:../../../src/kernel/hal/atmega128/nrk_timer.c ****         "lds r27,nrk_kernel_stk_ptr+1 \n\t" \
 250:../../../src/kernel/hal/atmega128/nrk_timer.c ****         "ld r1,-x \n\t" \
 251:../../../src/kernel/hal/atmega128/nrk_timer.c ****         "out __SP_H__, r27 \n\t" \
 252:../../../src/kernel/hal/atmega128/nrk_timer.c ****         "out __SP_L__, r26 \n\t" \
 253:../../../src/kernel/hal/atmega128/nrk_timer.c ****         "ret\n\t" \
 254:../../../src/kernel/hal/atmega128/nrk_timer.c ****     );
 255:../../../src/kernel/hal/atmega128/nrk_timer.c **** 
 256:../../../src/kernel/hal/atmega128/nrk_timer.c **** 
 257:../../../src/kernel/hal/atmega128/nrk_timer.c **** 
 258:../../../src/kernel/hal/atmega128/nrk_timer.c ****     return;
 259:../../../src/kernel/hal/atmega128/nrk_timer.c **** }
 775               	.LM83:
 776               	/* #NOAPP */
 778               	.Lscope17:
 780               		.stabd	78,0,0
 783               	.global	nrk_timer_int_stop
 785               	nrk_timer_int_stop:
 786               		.stabd	46,0,0
 260:../../../src/kernel/hal/atmega128/nrk_timer.c **** 
 261:../../../src/kernel/hal/atmega128/nrk_timer.c **** 
 262:../../../src/kernel/hal/atmega128/nrk_timer.c **** //-------------------------------------------------------------------------------------------------
 263:../../../src/kernel/hal/atmega128/nrk_timer.c **** //  TIMER 1 COMPARE ISR
 264:../../../src/kernel/hal/atmega128/nrk_timer.c **** //-------------------------------------------------------------------------------------------------
 265:../../../src/kernel/hal/atmega128/nrk_timer.c **** /*
 266:../../../src/kernel/hal/atmega128/nrk_timer.c **** 
 267:../../../src/kernel/hal/atmega128/nrk_timer.c ****  08/03/2007 - Nuno Pereira
 268:../../../src/kernel/hal/atmega128/nrk_timer.c **** 
 269:../../../src/kernel/hal/atmega128/nrk_timer.c ****  Commented this out; Widom uses this interrupt
 270:../../../src/kernel/hal/atmega128/nrk_timer.c **** 
 271:../../../src/kernel/hal/atmega128/nrk_timer.c **** SIGNAL(SIG_OUTPUT_COMPARE1A) {
 272:../../../src/kernel/hal/atmega128/nrk_timer.c **** 	static uint8_t i=0;
 273:../../../src/kernel/hal/atmega128/nrk_timer.c **** 
 274:../../../src/kernel/hal/atmega128/nrk_timer.c **** 	CLR_LED_1();
 275:../../../src/kernel/hal/atmega128/nrk_timer.c **** 	if(i==0 ) {
 276:../../../src/kernel/hal/atmega128/nrk_timer.c **** 
 277:../../../src/kernel/hal/atmega128/nrk_timer.c **** 	   SET_LED_0();
 278:../../../src/kernel/hal/atmega128/nrk_timer.c **** 		i=1;
 279:../../../src/kernel/hal/atmega128/nrk_timer.c **** 	}else
 280:../../../src/kernel/hal/atmega128/nrk_timer.c **** 	{
 281:../../../src/kernel/hal/atmega128/nrk_timer.c **** 	   CLR_LED_0();
 282:../../../src/kernel/hal/atmega128/nrk_timer.c **** 	   i=0;
 283:../../../src/kernel/hal/atmega128/nrk_timer.c **** 
 284:../../../src/kernel/hal/atmega128/nrk_timer.c **** 	}
 285:../../../src/kernel/hal/atmega128/nrk_timer.c **** 
 286:../../../src/kernel/hal/atmega128/nrk_timer.c **** 	//SuspendTask2();
 287:../../../src/kernel/hal/atmega128/nrk_timer.c **** 	return;
 288:../../../src/kernel/hal/atmega128/nrk_timer.c **** }
 289:../../../src/kernel/hal/atmega128/nrk_timer.c **** */
 290:../../../src/kernel/hal/atmega128/nrk_timer.c **** 
 291:../../../src/kernel/hal/atmega128/nrk_timer.c **** 
 292:../../../src/kernel/hal/atmega128/nrk_timer.c **** int8_t nrk_timer_int_stop(uint8_t timer )
 293:../../../src/kernel/hal/atmega128/nrk_timer.c **** {
 788               	.LM84:
 789               	.LFBB18:
 790               	/* prologue: function */
 791               	/* frame size = 0 */
 294:../../../src/kernel/hal/atmega128/nrk_timer.c ****     if(timer==NRK_APP_TIMER_0)
 793               	.LM85:
 794 01a2 8823      		tst r24
 795 01a4 01F4      		brne .L45
 295:../../../src/kernel/hal/atmega128/nrk_timer.c ****     {
 296:../../../src/kernel/hal/atmega128/nrk_timer.c ****         TIMSK &= ~(BM(OCIE2));
 797               	.LM86:
 798 01a6 87B7      		in r24,87-32
 799 01a8 8F77      		andi r24,lo8(127)
 800 01aa 87BF      		out 87-32,r24
 801               	.L45:
 297:../../../src/kernel/hal/atmega128/nrk_timer.c ****     }
 298:../../../src/kernel/hal/atmega128/nrk_timer.c ****     return NRK_ERROR;
 299:../../../src/kernel/hal/atmega128/nrk_timer.c **** }
 803               	.LM87:
 804 01ac 8FEF      		ldi r24,lo8(-1)
 805               	/* epilogue start */
 806 01ae 0895      		ret
 808               	.Lscope18:
 810               		.stabd	78,0,0
 813               	.global	nrk_timer_int_reset
 815               	nrk_timer_int_reset:
 816               		.stabd	46,0,0
 300:../../../src/kernel/hal/atmega128/nrk_timer.c **** 
 301:../../../src/kernel/hal/atmega128/nrk_timer.c **** int8_t nrk_timer_int_reset(uint8_t timer )
 302:../../../src/kernel/hal/atmega128/nrk_timer.c **** {
 818               	.LM88:
 819               	.LFBB19:
 820               	/* prologue: function */
 821               	/* frame size = 0 */
 303:../../../src/kernel/hal/atmega128/nrk_timer.c ****     if(timer==NRK_APP_TIMER_0)
 823               	.LM89:
 824 01b0 8823      		tst r24
 825 01b2 01F0      		breq .L48
 826 01b4 8FEF      		ldi r24,lo8(-1)
 827 01b6 0895      		ret
 828               	.L48:
 304:../../../src/kernel/hal/atmega128/nrk_timer.c ****     {
 305:../../../src/kernel/hal/atmega128/nrk_timer.c ****         TCNT2=0;
 830               	.LM90:
 831 01b8 14BC      		out 68-32,__zero_reg__
 832 01ba 81E0      		ldi r24,lo8(1)
 306:../../../src/kernel/hal/atmega128/nrk_timer.c ****         return NRK_OK;
 307:../../../src/kernel/hal/atmega128/nrk_timer.c ****     }
 308:../../../src/kernel/hal/atmega128/nrk_timer.c ****     return NRK_ERROR;
 309:../../../src/kernel/hal/atmega128/nrk_timer.c **** }
 834               	.LM91:
 835 01bc 0895      		ret
 837               	.Lscope19:
 839               		.stabd	78,0,0
 842               	.global	nrk_timer_int_read
 844               	nrk_timer_int_read:
 845               		.stabd	46,0,0
 310:../../../src/kernel/hal/atmega128/nrk_timer.c **** 
 311:../../../src/kernel/hal/atmega128/nrk_timer.c **** uint16_t nrk_timer_int_read(uint8_t timer )
 312:../../../src/kernel/hal/atmega128/nrk_timer.c **** {
 847               	.LM92:
 848               	.LFBB20:
 849               	/* prologue: function */
 850               	/* frame size = 0 */
 313:../../../src/kernel/hal/atmega128/nrk_timer.c ****     if(timer==NRK_APP_TIMER_0)
 852               	.LM93:
 853 01be 8823      		tst r24
 854 01c0 01F0      		breq .L52
 855 01c2 20E0      		ldi r18,lo8(0)
 856 01c4 30E0      		ldi r19,hi8(0)
 857 01c6 00C0      		rjmp .L53
 858               	.L52:
 314:../../../src/kernel/hal/atmega128/nrk_timer.c ****     {
 315:../../../src/kernel/hal/atmega128/nrk_timer.c ****         return TCNT2;
 860               	.LM94:
 861 01c8 84B5      		in r24,68-32
 862 01ca 282F      		mov r18,r24
 863 01cc 30E0      		ldi r19,lo8(0)
 864               	.L53:
 316:../../../src/kernel/hal/atmega128/nrk_timer.c ****     }
 317:../../../src/kernel/hal/atmega128/nrk_timer.c ****     return 0;
 318:../../../src/kernel/hal/atmega128/nrk_timer.c **** 
 319:../../../src/kernel/hal/atmega128/nrk_timer.c **** }
 866               	.LM95:
 867 01ce C901      		movw r24,r18
 868               	/* epilogue start */
 869 01d0 0895      		ret
 871               	.Lscope20:
 873               		.stabd	78,0,0
 876               	.global	nrk_timer_int_start
 878               	nrk_timer_int_start:
 879               		.stabd	46,0,0
 320:../../../src/kernel/hal/atmega128/nrk_timer.c **** 
 321:../../../src/kernel/hal/atmega128/nrk_timer.c **** int8_t  nrk_timer_int_start(uint8_t timer)
 322:../../../src/kernel/hal/atmega128/nrk_timer.c **** {
 881               	.LM96:
 882               	.LFBB21:
 883               	/* prologue: function */
 884               	/* frame size = 0 */
 323:../../../src/kernel/hal/atmega128/nrk_timer.c ****     if(timer==NRK_APP_TIMER_0)
 886               	.LM97:
 887 01d2 8823      		tst r24
 888 01d4 01F0      		breq .L56
 889 01d6 8FEF      		ldi r24,lo8(-1)
 890 01d8 0895      		ret
 891               	.L56:
 324:../../../src/kernel/hal/atmega128/nrk_timer.c ****     {
 325:../../../src/kernel/hal/atmega128/nrk_timer.c ****         TIMSK |= BM(OCIE2);
 893               	.LM98:
 894 01da 87B7      		in r24,87-32
 895 01dc 8068      		ori r24,lo8(-128)
 896 01de 87BF      		out 87-32,r24
 897 01e0 81E0      		ldi r24,lo8(1)
 326:../../../src/kernel/hal/atmega128/nrk_timer.c ****         return NRK_OK;
 327:../../../src/kernel/hal/atmega128/nrk_timer.c ****     }
 328:../../../src/kernel/hal/atmega128/nrk_timer.c ****     return NRK_ERROR;
 329:../../../src/kernel/hal/atmega128/nrk_timer.c **** }
 899               	.LM99:
 900 01e2 0895      		ret
 902               	.Lscope21:
 904               		.stabd	78,0,0
 909               	.global	nrk_timer_int_configure
 911               	nrk_timer_int_configure:
 912               		.stabd	46,0,0
 330:../../../src/kernel/hal/atmega128/nrk_timer.c **** 
 331:../../../src/kernel/hal/atmega128/nrk_timer.c **** int8_t  nrk_timer_int_configure(uint8_t timer, uint16_t prescaler, uint16_t compare_value, void *ca
 332:../../../src/kernel/hal/atmega128/nrk_timer.c **** {
 914               	.LM100:
 915               	.LFBB22:
 916               	/* prologue: function */
 917               	/* frame size = 0 */
 333:../../../src/kernel/hal/atmega128/nrk_timer.c ****     if(timer==NRK_APP_TIMER_0)
 919               	.LM101:
 920 01e4 8823      		tst r24
 921 01e6 01F0      		breq .L60
 922 01e8 8FEF      		ldi r24,lo8(-1)
 923 01ea 0895      		ret
 924               	.L60:
 334:../../../src/kernel/hal/atmega128/nrk_timer.c ****     {
 335:../../../src/kernel/hal/atmega128/nrk_timer.c ****         if(prescaler>0 && prescaler<6 ) app_timer0_prescale=prescaler;
 926               	.LM102:
 927 01ec CB01      		movw r24,r22
 928 01ee 0197      		sbiw r24,1
 929 01f0 0597      		sbiw r24,5
 930 01f2 00F4      		brsh .L62
 931 01f4 6093 0000 		sts app_timer0_prescale,r22
 932               	.L62:
 336:../../../src/kernel/hal/atmega128/nrk_timer.c ****         TCCR2 = BM(WGM32);  // Automatic restart on compare, count up
 934               	.LM103:
 935 01f8 88E0      		ldi r24,lo8(8)
 936 01fa 85BD      		out 69-32,r24
 337:../../../src/kernel/hal/atmega128/nrk_timer.c ****         OCR2 = (compare_value & 0xFF );
 938               	.LM104:
 939 01fc 43BD      		out 67-32,r20
 338:../../../src/kernel/hal/atmega128/nrk_timer.c ****         app_timer0_callback=callback_func;
 941               	.LM105:
 942 01fe 3093 0000 		sts (app_timer0_callback)+1,r19
 943 0202 2093 0000 		sts app_timer0_callback,r18
 339:../../../src/kernel/hal/atmega128/nrk_timer.c ****         if(app_timer0_prescale==1) TCCR2 |= BM(CS30);
 945               	.LM106:
 946 0206 8091 0000 		lds r24,app_timer0_prescale
 947 020a 8130      		cpi r24,lo8(1)
 948 020c 01F4      		brne .L63
 949 020e 85B5      		in r24,69-32
 950 0210 8160      		ori r24,lo8(1)
 951 0212 00C0      		rjmp .L70
 952               	.L63:
 340:../../../src/kernel/hal/atmega128/nrk_timer.c ****         // Divide by 1
 341:../../../src/kernel/hal/atmega128/nrk_timer.c ****         else if(app_timer0_prescale==2) TCCR2 |= BM(CS31);
 954               	.LM107:
 955 0214 8230      		cpi r24,lo8(2)
 956 0216 01F4      		brne .L64
 957 0218 85B5      		in r24,69-32
 958 021a 8260      		ori r24,lo8(2)
 959 021c 00C0      		rjmp .L70
 960               	.L64:
 342:../../../src/kernel/hal/atmega128/nrk_timer.c ****         // Divide by 8
 343:../../../src/kernel/hal/atmega128/nrk_timer.c ****         else if(app_timer0_prescale==3) TCCR2 |= BM(CS31) | BM(CS30);
 962               	.LM108:
 963 021e 8330      		cpi r24,lo8(3)
 964 0220 01F4      		brne .L65
 965 0222 85B5      		in r24,69-32
 966 0224 8360      		ori r24,lo8(3)
 967               	.L70:
 968 0226 85BD      		out 69-32,r24
 969 0228 00C0      		rjmp .L69
 970               	.L65:
 344:../../../src/kernel/hal/atmega128/nrk_timer.c ****         // Divide by 64
 345:../../../src/kernel/hal/atmega128/nrk_timer.c ****         else if(app_timer0_prescale==4) TCCR2 |= BM(CS32) ;
 972               	.LM109:
 973 022a 8430      		cpi r24,lo8(4)
 974 022c 01F4      		brne .L66
 975 022e 85B5      		in r24,69-32
 976 0230 8460      		ori r24,lo8(4)
 977 0232 00C0      		rjmp .L70
 978               	.L66:
 346:../../../src/kernel/hal/atmega128/nrk_timer.c ****         // Divide by 256
 347:../../../src/kernel/hal/atmega128/nrk_timer.c ****         else if(app_timer0_prescale==5) TCCR2 |= BM(CS32) | BM(CS30);
 980               	.LM110:
 981 0234 8530      		cpi r24,lo8(5)
 982 0236 01F0      		breq .L67
 983               	.L69:
 984 0238 81E0      		ldi r24,lo8(1)
 985 023a 0895      		ret
 986               	.L67:
 987 023c 85B5      		in r24,69-32
 988 023e 8560      		ori r24,lo8(5)
 989 0240 85BD      		out 69-32,r24
 990 0242 81E0      		ldi r24,lo8(1)
 348:../../../src/kernel/hal/atmega128/nrk_timer.c ****         // Divide by 1024
 349:../../../src/kernel/hal/atmega128/nrk_timer.c ****         return NRK_OK;
 350:../../../src/kernel/hal/atmega128/nrk_timer.c ****     }
 351:../../../src/kernel/hal/atmega128/nrk_timer.c **** 
 352:../../../src/kernel/hal/atmega128/nrk_timer.c ****     return NRK_ERROR;
 353:../../../src/kernel/hal/atmega128/nrk_timer.c **** }
 992               	.LM111:
 993 0244 0895      		ret
 995               	.Lscope22:
 997               		.stabd	78,0,0
 999               	.global	__vector_9
 1001               	__vector_9:
 1002               		.stabd	46,0,0
 354:../../../src/kernel/hal/atmega128/nrk_timer.c **** 
 355:../../../src/kernel/hal/atmega128/nrk_timer.c **** 
 356:../../../src/kernel/hal/atmega128/nrk_timer.c **** SIGNAL(TIMER2_COMP_vect)
 357:../../../src/kernel/hal/atmega128/nrk_timer.c **** {
 1004               	.LM112:
 1005               	.LFBB23:
 1006 0246 1F92      		push __zero_reg__
 1007 0248 0F92      		push r0
 1008 024a 0FB6      		in r0,__SREG__
 1009 024c 0F92      		push r0
 1010 024e 0BB6      		in r0,91-32
 1011 0250 0F92      		push r0
 1012 0252 1124      		clr __zero_reg__
 1013 0254 2F93      		push r18
 1014 0256 3F93      		push r19
 1015 0258 4F93      		push r20
 1016 025a 5F93      		push r21
 1017 025c 6F93      		push r22
 1018 025e 7F93      		push r23
 1019 0260 8F93      		push r24
 1020 0262 9F93      		push r25
 1021 0264 AF93      		push r26
 1022 0266 BF93      		push r27
 1023 0268 EF93      		push r30
 1024 026a FF93      		push r31
 1025               	/* prologue: Signal */
 1026               	/* frame size = 0 */
 358:../../../src/kernel/hal/atmega128/nrk_timer.c ****     if(app_timer0_callback!=NULL) app_timer0_callback();
 1028               	.LM113:
 1029 026c E091 0000 		lds r30,app_timer0_callback
 1030 0270 F091 0000 		lds r31,(app_timer0_callback)+1
 1031 0274 3097      		sbiw r30,0
 1032 0276 01F0      		breq .L72
 1033 0278 0995      		icall
 1034 027a 00C0      		rjmp .L74
 1035               	.L72:
 359:../../../src/kernel/hal/atmega128/nrk_timer.c ****     else
 360:../../../src/kernel/hal/atmega128/nrk_timer.c ****         nrk_kernel_error_add(NRK_SEG_FAULT,0);
 1037               	.LM114:
 1038 027c 8AE0      		ldi r24,lo8(10)
 1039 027e 60E0      		ldi r22,lo8(0)
 1040 0280 0E94 0000 		call nrk_kernel_error_add
 1041               	.L74:
 1042               	/* epilogue start */
 361:../../../src/kernel/hal/atmega128/nrk_timer.c ****     return;
 362:../../../src/kernel/hal/atmega128/nrk_timer.c **** }
 1044               	.LM115:
 1045 0284 FF91      		pop r31
 1046 0286 EF91      		pop r30
 1047 0288 BF91      		pop r27
 1048 028a AF91      		pop r26
 1049 028c 9F91      		pop r25
 1050 028e 8F91      		pop r24
 1051 0290 7F91      		pop r23
 1052 0292 6F91      		pop r22
 1053 0294 5F91      		pop r21
 1054 0296 4F91      		pop r20
 1055 0298 3F91      		pop r19
 1056 029a 2F91      		pop r18
 1057 029c 0F90      		pop r0
 1058 029e 0BBE      		out 91-32,r0
 1059 02a0 0F90      		pop r0
 1060 02a2 0FBE      		out __SREG__,r0
 1061 02a4 0F90      		pop r0
 1062 02a6 1F90      		pop __zero_reg__
 1063 02a8 1895      		reti
 1065               	.Lscope23:
 1067               		.stabd	78,0,0
 1069               	.global	__vector_default
 1071               	__vector_default:
 1072               		.stabd	46,0,0
 188:../../../src/kernel/hal/atmega128/nrk_timer.c **** {
 1074               	.LM116:
 1075               	.LFBB24:
 1076 02aa 1F92      		push __zero_reg__
 1077 02ac 0F92      		push r0
 1078 02ae 0FB6      		in r0,__SREG__
 1079 02b0 0F92      		push r0
 1080 02b2 0BB6      		in r0,91-32
 1081 02b4 0F92      		push r0
 1082 02b6 1124      		clr __zero_reg__
 1083 02b8 2F93      		push r18
 1084 02ba 3F93      		push r19
 1085 02bc 4F93      		push r20
 1086 02be 5F93      		push r21
 1087 02c0 6F93      		push r22
 1088 02c2 7F93      		push r23
 1089 02c4 8F93      		push r24
 1090 02c6 9F93      		push r25
 1091 02c8 AF93      		push r26
 1092 02ca BF93      		push r27
 1093 02cc EF93      		push r30
 1094 02ce FF93      		push r31
 1095               	/* prologue: Signal */
 1096               	/* frame size = 0 */
 189:../../../src/kernel/hal/atmega128/nrk_timer.c ****     nrk_kernel_error_add(NRK_SEG_FAULT,0);
 1098               	.LM117:
 1099 02d0 8AE0      		ldi r24,lo8(10)
 1100 02d2 60E0      		ldi r22,lo8(0)
 1101 02d4 0E94 0000 		call nrk_kernel_error_add
 1102               	/* epilogue start */
 190:../../../src/kernel/hal/atmega128/nrk_timer.c **** }
 1104               	.LM118:
 1105 02d8 FF91      		pop r31
 1106 02da EF91      		pop r30
 1107 02dc BF91      		pop r27
 1108 02de AF91      		pop r26
 1109 02e0 9F91      		pop r25
 1110 02e2 8F91      		pop r24
 1111 02e4 7F91      		pop r23
 1112 02e6 6F91      		pop r22
 1113 02e8 5F91      		pop r21
 1114 02ea 4F91      		pop r20
 1115 02ec 3F91      		pop r19
 1116 02ee 2F91      		pop r18
 1117 02f0 0F90      		pop r0
 1118 02f2 0BBE      		out 91-32,r0
 1119 02f4 0F90      		pop r0
 1120 02f6 0FBE      		out __SREG__,r0
 1121 02f8 0F90      		pop r0
 1122 02fa 1F90      		pop __zero_reg__
 1123 02fc 1895      		reti
 1125               	.Lscope24:
 1127               		.stabd	78,0,0
 1128               		.comm _nrk_signal_list,4,1
 1129               		.comm nrk_idle_task_stk,128,1
 1130               		.comm nrk_kernel_stk_ptr,2,1
 1131               		.comm _nrk_prev_timer_val,1,1
 1132               		.comm _nrk_time_trigger,1,1
 1133               		.comm app_timer0_callback,2,1
 1134               		.comm app_timer0_prescale,1,1
 1135               		.comm error_task,1,1
 1136               		.comm error_num,1,1
 1147               	.Letext0:
DEFINED SYMBOLS
                            *ABS*:00000000 nrk_timer.c
     /tmp/ccxfmFu9.s:2      *ABS*:0000003f __SREG__
     /tmp/ccxfmFu9.s:3      *ABS*:0000003e __SP_H__
     /tmp/ccxfmFu9.s:4      *ABS*:0000003d __SP_L__
     /tmp/ccxfmFu9.s:5      *ABS*:00000034 __CCP__
     /tmp/ccxfmFu9.s:6      *ABS*:00000000 __tmp_reg__
     /tmp/ccxfmFu9.s:7      *ABS*:00000001 __zero_reg__
     /tmp/ccxfmFu9.s:139    .text:00000000 nrk_spin_wait_us
     /tmp/ccxfmFu9.s:188    .text:0000000e _nrk_setup_timer
                            *COM*:00000001 _nrk_prev_timer_val
                            *COM*:00000001 _nrk_time_trigger
     /tmp/ccxfmFu9.s:273    .text:0000004e _nrk_high_speed_timer_stop
     /tmp/ccxfmFu9.s:294    .text:00000052 _nrk_high_speed_timer_start
     /tmp/ccxfmFu9.s:316    .text:00000058 _nrk_high_speed_timer_reset
     /tmp/ccxfmFu9.s:345    .text:00000064 nrk_high_speed_timer_wait
     /tmp/ccxfmFu9.s:459    .text:000000d6 _nrk_high_speed_timer_get
     /tmp/ccxfmFu9.s:501    .text:000000f8 _nrk_os_timer_set
     /tmp/ccxfmFu9.s:522    .text:000000fc _nrk_os_timer_stop
     /tmp/ccxfmFu9.s:553    .text:0000010c _nrk_os_timer_start
     /tmp/ccxfmFu9.s:580    .text:00000118 _nrk_os_timer_reset
     /tmp/ccxfmFu9.s:612    .text:0000012a _nrk_precision_os_timer_reset
     /tmp/ccxfmFu9.s:630    .text:0000012c _nrk_get_next_wakeup
     /tmp/ccxfmFu9.s:653    .text:00000132 _nrk_set_next_wakeup
     /tmp/ccxfmFu9.s:675    .text:00000138 _nrk_os_timer_get
     /tmp/ccxfmFu9.s:696    .text:0000013c __vector_16
     /tmp/ccxfmFu9.s:713    .text:0000013c __vector_15
                            *COM*:00000002 nrk_kernel_stk_ptr
     /tmp/ccxfmFu9.s:785    .text:000001a2 nrk_timer_int_stop
     /tmp/ccxfmFu9.s:815    .text:000001b0 nrk_timer_int_reset
     /tmp/ccxfmFu9.s:844    .text:000001be nrk_timer_int_read
     /tmp/ccxfmFu9.s:878    .text:000001d2 nrk_timer_int_start
     /tmp/ccxfmFu9.s:911    .text:000001e4 nrk_timer_int_configure
                            *COM*:00000001 app_timer0_prescale
                            *COM*:00000002 app_timer0_callback
     /tmp/ccxfmFu9.s:1001   .text:00000246 __vector_9
     /tmp/ccxfmFu9.s:1071   .text:000002aa __vector_default
                            *COM*:00000004 _nrk_signal_list
                            *COM*:00000080 nrk_idle_task_stk
                            *COM*:00000001 error_task
                            *COM*:00000001 error_num

UNDEFINED SYMBOLS
__do_copy_data
__do_clear_bss
nrk_cur_task_TCB
nrk_kernel_error_add
