   1               		.file	"nrk_status.c"
   2               	__SREG__ = 0x3f
   3               	__SP_H__ = 0x3e
   4               	__SP_L__ = 0x3d
   5               	__CCP__ = 0x34
   6               	__tmp_reg__ = 0
   7               	__zero_reg__ = 1
  10               		.text
  11               	.Ltext0:
 117               	.global	_nrk_startup_error
 119               	_nrk_startup_error:
 120               		.stabd	46,0,0
   1:../../../src/kernel/hal/atmega128/nrk_status.c **** /******************************************************************************
   2:../../../src/kernel/hal/atmega128/nrk_status.c **** *  Nano-RK, a real-time operating system for sensor networks.
   3:../../../src/kernel/hal/atmega128/nrk_status.c **** *  Copyright (C) 2007, Real-Time and Multimedia Lab, Carnegie Mellon University
   4:../../../src/kernel/hal/atmega128/nrk_status.c **** *  All rights reserved.
   5:../../../src/kernel/hal/atmega128/nrk_status.c **** *
   6:../../../src/kernel/hal/atmega128/nrk_status.c **** *  This is the Open Source Version of Nano-RK included as part of a Dual
   7:../../../src/kernel/hal/atmega128/nrk_status.c **** *  Licensing Model. If you are unsure which license to use please refer to:
   8:../../../src/kernel/hal/atmega128/nrk_status.c **** *  http://www.nanork.org/nano-RK/wiki/Licensing
   9:../../../src/kernel/hal/atmega128/nrk_status.c **** *
  10:../../../src/kernel/hal/atmega128/nrk_status.c **** *  This program is free software: you can redistribute it and/or modify
  11:../../../src/kernel/hal/atmega128/nrk_status.c **** *  it under the terms of the GNU General Public License as published by
  12:../../../src/kernel/hal/atmega128/nrk_status.c **** *  the Free Software Foundation, version 2.0 of the License.
  13:../../../src/kernel/hal/atmega128/nrk_status.c **** *
  14:../../../src/kernel/hal/atmega128/nrk_status.c **** *  This program is distributed in the hope that it will be useful,
  15:../../../src/kernel/hal/atmega128/nrk_status.c **** *  but WITHOUT ANY WARRANTY; without even the implied warranty of
  16:../../../src/kernel/hal/atmega128/nrk_status.c **** *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  17:../../../src/kernel/hal/atmega128/nrk_status.c **** *  GNU General Public License for more details.
  18:../../../src/kernel/hal/atmega128/nrk_status.c **** *
  19:../../../src/kernel/hal/atmega128/nrk_status.c **** *  You should have received a copy of the GNU General Public License
  20:../../../src/kernel/hal/atmega128/nrk_status.c **** *  along with this program.  If not, see <http://www.gnu.org/licenses/>.
  21:../../../src/kernel/hal/atmega128/nrk_status.c **** *
  22:../../../src/kernel/hal/atmega128/nrk_status.c **** *  Contributing Authors (specific to this file):
  23:../../../src/kernel/hal/atmega128/nrk_status.c **** *  Anthony Rowe
  24:../../../src/kernel/hal/atmega128/nrk_status.c **** *******************************************************************************/
  25:../../../src/kernel/hal/atmega128/nrk_status.c **** 
  26:../../../src/kernel/hal/atmega128/nrk_status.c **** 
  27:../../../src/kernel/hal/atmega128/nrk_status.c **** #include <include.h>
  28:../../../src/kernel/hal/atmega128/nrk_status.c **** #include <nrk_status.h>
  29:../../../src/kernel/hal/atmega128/nrk_status.c **** 
  30:../../../src/kernel/hal/atmega128/nrk_status.c **** uint8_t _nrk_startup_error()
  31:../../../src/kernel/hal/atmega128/nrk_status.c **** {
 122               	.LM0:
 123               	.LFBB1:
 124               	/* prologue: function */
 125               	/* frame size = 0 */
 126               	/* stack size = 0 */
 127               	.L__stack_usage = 0
  32:../../../src/kernel/hal/atmega128/nrk_status.c **** uint8_t error;
  33:../../../src/kernel/hal/atmega128/nrk_status.c **** error=0;
  34:../../../src/kernel/hal/atmega128/nrk_status.c **** // Use the timer settings that are normally 0 on reset to detect
  35:../../../src/kernel/hal/atmega128/nrk_status.c **** // if the OS has reboot by accident
  36:../../../src/kernel/hal/atmega128/nrk_status.c **** 
  37:../../../src/kernel/hal/atmega128/nrk_status.c **** 
  38:../../../src/kernel/hal/atmega128/nrk_status.c **** // Check Watchdog timer
  39:../../../src/kernel/hal/atmega128/nrk_status.c **** if( (MCUSR & (1<<WDRF)) != 0 )
 129               	.LM1:
 130 0000 04B6      		in __tmp_reg__,84-32
 131 0002 03FC      		sbrc __tmp_reg__,3
 132 0004 00C0      		rjmp .L7
  33:../../../src/kernel/hal/atmega128/nrk_status.c **** error=0;
 134               	.LM2:
 135 0006 80E0      		ldi r24,lo8(0)
 136 0008 00C0      		rjmp .L2
 137               	.L7:
  40:../../../src/kernel/hal/atmega128/nrk_status.c **** 	{
  41:../../../src/kernel/hal/atmega128/nrk_status.c **** 	// don't clear wdt
  42:../../../src/kernel/hal/atmega128/nrk_status.c **** 	error|=0x10;
 139               	.LM3:
 140 000a 80E1      		ldi r24,lo8(16)
 141               	.L2:
  43:../../../src/kernel/hal/atmega128/nrk_status.c **** 	}
  44:../../../src/kernel/hal/atmega128/nrk_status.c **** 
  45:../../../src/kernel/hal/atmega128/nrk_status.c **** 
  46:../../../src/kernel/hal/atmega128/nrk_status.c **** // Check Brown Out 
  47:../../../src/kernel/hal/atmega128/nrk_status.c **** if( (MCUSR & (1<<BORF)) != 0 )
 143               	.LM4:
 144 000c 04B6      		in __tmp_reg__,84-32
 145 000e 02FE      		sbrs __tmp_reg__,2
 146 0010 00C0      		rjmp .L3
  48:../../../src/kernel/hal/atmega128/nrk_status.c **** 	{
  49:../../../src/kernel/hal/atmega128/nrk_status.c **** 	MCUSR &= ~(1<<BORF);	
 148               	.LM5:
 149 0012 94B7      		in r25,84-32
 150 0014 9B7F      		andi r25,lo8(-5)
 151 0016 94BF      		out 84-32,r25
  50:../../../src/kernel/hal/atmega128/nrk_status.c **** 	// Only add brownout if it isn't the first bootup
  51:../../../src/kernel/hal/atmega128/nrk_status.c **** 	if( (MCUSR & (1<<PORF)) == 0 )
 153               	.LM6:
 154 0018 04B6      		in __tmp_reg__,84-32
 155 001a 00FE      		sbrs __tmp_reg__,0
  52:../../../src/kernel/hal/atmega128/nrk_status.c **** 		error|=0x04;
 157               	.LM7:
 158 001c 8460      		ori r24,lo8(4)
 159               	.L3:
  53:../../../src/kernel/hal/atmega128/nrk_status.c **** 	}
  54:../../../src/kernel/hal/atmega128/nrk_status.c **** 
  55:../../../src/kernel/hal/atmega128/nrk_status.c **** // Check External Reset 
  56:../../../src/kernel/hal/atmega128/nrk_status.c **** if( (MCUSR & (1<<EXTRF)) != 0 )
 161               	.LM8:
 162 001e 04B6      		in __tmp_reg__,84-32
 163 0020 01FE      		sbrs __tmp_reg__,1
 164 0022 00C0      		rjmp .L4
  57:../../../src/kernel/hal/atmega128/nrk_status.c **** 	{
  58:../../../src/kernel/hal/atmega128/nrk_status.c **** 	MCUSR &= ~(1<<EXTRF);	
 166               	.LM9:
 167 0024 94B7      		in r25,84-32
 168 0026 9D7F      		andi r25,lo8(-3)
 169 0028 94BF      		out 84-32,r25
  59:../../../src/kernel/hal/atmega128/nrk_status.c **** 	error|=0x02;
 171               	.LM10:
 172 002a 8260      		ori r24,lo8(2)
 173 002c 0895      		ret
 174               	.L4:
  60:../../../src/kernel/hal/atmega128/nrk_status.c **** 	}
  61:../../../src/kernel/hal/atmega128/nrk_status.c **** 
  62:../../../src/kernel/hal/atmega128/nrk_status.c **** // If any of the above errors went off, then the next errors will
  63:../../../src/kernel/hal/atmega128/nrk_status.c **** // incorrectly be set!  So make sure to bail early!
  64:../../../src/kernel/hal/atmega128/nrk_status.c **** if(error!=0) return error;
 176               	.LM11:
 177 002e 8823      		tst r24
 178 0030 01F4      		brne .L5
  65:../../../src/kernel/hal/atmega128/nrk_status.c **** 
  66:../../../src/kernel/hal/atmega128/nrk_status.c **** // Check if normal power up state is set and then clear it
  67:../../../src/kernel/hal/atmega128/nrk_status.c **** if( (MCUSR & (1<<PORF)) != 0 )
 180               	.LM12:
 181 0032 04B6      		in __tmp_reg__,84-32
 182 0034 00FE      		sbrs __tmp_reg__,0
 183 0036 00C0      		rjmp .L8
  68:../../../src/kernel/hal/atmega128/nrk_status.c **** 	{
  69:../../../src/kernel/hal/atmega128/nrk_status.c **** 	MCUSR &= ~(1<<PORF);
 185               	.LM13:
 186 0038 94B7      		in r25,84-32
 187 003a 9E7F      		andi r25,lo8(-2)
 188 003c 94BF      		out 84-32,r25
 189 003e 00C0      		rjmp .L6
 190               	.L8:
  70:../../../src/kernel/hal/atmega128/nrk_status.c **** 	}
  71:../../../src/kernel/hal/atmega128/nrk_status.c **** 	else {
  72:../../../src/kernel/hal/atmega128/nrk_status.c **** 	error|=0x01;
 192               	.LM14:
 193 0040 81E0      		ldi r24,lo8(1)
 194               	.L6:
  73:../../../src/kernel/hal/atmega128/nrk_status.c **** 	}
  74:../../../src/kernel/hal/atmega128/nrk_status.c **** 
  75:../../../src/kernel/hal/atmega128/nrk_status.c **** // check uart state 
  76:../../../src/kernel/hal/atmega128/nrk_status.c **** if((volatile uint8_t)TCCR0!=0) error|=0x01;
 196               	.LM15:
 197 0042 93B7      		in r25,83-32
 198 0044 9111      		cpse r25,__zero_reg__
 200               	.LM16:
 201 0046 8160      		ori r24,lo8(1)
 202               	.L5:
  77:../../../src/kernel/hal/atmega128/nrk_status.c **** 
  78:../../../src/kernel/hal/atmega128/nrk_status.c **** return error;
  79:../../../src/kernel/hal/atmega128/nrk_status.c **** }
 204               	.LM17:
 205 0048 0895      		ret
 210               	.Lscope1:
 212               		.stabd	78,0,0
 213               		.comm _nrk_signal_list,4,1
 216               	.Letext0:
 217               	.global __do_clear_bss
DEFINED SYMBOLS
                            *ABS*:00000000 nrk_status.c
     /tmp/cc6otWhH.s:2      *ABS*:0000003f __SREG__
     /tmp/cc6otWhH.s:3      *ABS*:0000003e __SP_H__
     /tmp/cc6otWhH.s:4      *ABS*:0000003d __SP_L__
     /tmp/cc6otWhH.s:5      *ABS*:00000034 __CCP__
     /tmp/cc6otWhH.s:6      *ABS*:00000000 __tmp_reg__
     /tmp/cc6otWhH.s:7      *ABS*:00000001 __zero_reg__
     /tmp/cc6otWhH.s:119    .text:00000000 _nrk_startup_error
                            *COM*:00000004 _nrk_signal_list

UNDEFINED SYMBOLS
__do_clear_bss
