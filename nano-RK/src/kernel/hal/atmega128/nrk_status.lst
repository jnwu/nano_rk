   1               		.file	"nrk_status.c"
   2               	__SREG__ = 0x3f
   3               	__SP_H__ = 0x3e
   4               	__SP_L__ = 0x3d
   5               	__CCP__  = 0x34
   6               	__tmp_reg__ = 0
   7               	__zero_reg__ = 1
   8               		.global __do_copy_data
   9               		.global __do_clear_bss
  12               		.text
  13               	.Ltext0:
 117               	.global	_nrk_startup_error
 119               	_nrk_startup_error:
 120               		.stabd	46,0,0
   0:../../../src/kernel/hal/atmega128/nrk_status.c **** /******************************************************************************
   1:../../../src/kernel/hal/atmega128/nrk_status.c **** *  Nano-RK, a real-time operating system for sensor networks.
   2:../../../src/kernel/hal/atmega128/nrk_status.c **** *  Copyright (C) 2007, Real-Time and Multimedia Lab, Carnegie Mellon University
   3:../../../src/kernel/hal/atmega128/nrk_status.c **** *  All rights reserved.
   4:../../../src/kernel/hal/atmega128/nrk_status.c **** *
   5:../../../src/kernel/hal/atmega128/nrk_status.c **** *  This is the Open Source Version of Nano-RK included as part of a Dual
   6:../../../src/kernel/hal/atmega128/nrk_status.c **** *  Licensing Model. If you are unsure which license to use please refer to:
   7:../../../src/kernel/hal/atmega128/nrk_status.c **** *  http://www.nanork.org/nano-RK/wiki/Licensing
   8:../../../src/kernel/hal/atmega128/nrk_status.c **** *
   9:../../../src/kernel/hal/atmega128/nrk_status.c **** *  This program is free software: you can redistribute it and/or modify
  10:../../../src/kernel/hal/atmega128/nrk_status.c **** *  it under the terms of the GNU General Public License as published by
  11:../../../src/kernel/hal/atmega128/nrk_status.c **** *  the Free Software Foundation, version 2.0 of the License.
  12:../../../src/kernel/hal/atmega128/nrk_status.c **** *
  13:../../../src/kernel/hal/atmega128/nrk_status.c **** *  This program is distributed in the hope that it will be useful,
  14:../../../src/kernel/hal/atmega128/nrk_status.c **** *  but WITHOUT ANY WARRANTY; without even the implied warranty of
  15:../../../src/kernel/hal/atmega128/nrk_status.c **** *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  16:../../../src/kernel/hal/atmega128/nrk_status.c **** *  GNU General Public License for more details.
  17:../../../src/kernel/hal/atmega128/nrk_status.c **** *
  18:../../../src/kernel/hal/atmega128/nrk_status.c **** *  You should have received a copy of the GNU General Public License
  19:../../../src/kernel/hal/atmega128/nrk_status.c **** *  along with this program.  If not, see <http://www.gnu.org/licenses/>.
  20:../../../src/kernel/hal/atmega128/nrk_status.c **** *
  21:../../../src/kernel/hal/atmega128/nrk_status.c **** *  Contributing Authors (specific to this file):
  22:../../../src/kernel/hal/atmega128/nrk_status.c **** *  Anthony Rowe
  23:../../../src/kernel/hal/atmega128/nrk_status.c **** *******************************************************************************/
  24:../../../src/kernel/hal/atmega128/nrk_status.c **** 
  25:../../../src/kernel/hal/atmega128/nrk_status.c **** 
  26:../../../src/kernel/hal/atmega128/nrk_status.c **** #include <include.h>
  27:../../../src/kernel/hal/atmega128/nrk_status.c **** #include <nrk_status.h>
  28:../../../src/kernel/hal/atmega128/nrk_status.c **** 
  29:../../../src/kernel/hal/atmega128/nrk_status.c **** uint8_t _nrk_startup_error()
  30:../../../src/kernel/hal/atmega128/nrk_status.c **** {
 122               	.LM0:
 123               	.LFBB1:
 124               	/* prologue: function */
 125               	/* frame size = 0 */
  31:../../../src/kernel/hal/atmega128/nrk_status.c **** uint8_t error;
  32:../../../src/kernel/hal/atmega128/nrk_status.c **** error=0;
  33:../../../src/kernel/hal/atmega128/nrk_status.c **** // Use the timer settings that are normally 0 on reset to detect
  34:../../../src/kernel/hal/atmega128/nrk_status.c **** // if the OS has reboot by accident
  35:../../../src/kernel/hal/atmega128/nrk_status.c **** 
  36:../../../src/kernel/hal/atmega128/nrk_status.c **** 
  37:../../../src/kernel/hal/atmega128/nrk_status.c **** // Check Watchdog timer
  38:../../../src/kernel/hal/atmega128/nrk_status.c **** if( (MCUSR & (1<<WDRF)) != 0 )
 127               	.LM1:
 128 0000 04B6      		in __tmp_reg__,84-32
 129 0002 03FE      		sbrs __tmp_reg__,3
 130 0004 00C0      		rjmp .L2
 131 0006 90E1      		ldi r25,lo8(16)
 132 0008 00C0      		rjmp .L3
 133               	.L2:
 134 000a 90E0      		ldi r25,lo8(0)
 135               	.L3:
  39:../../../src/kernel/hal/atmega128/nrk_status.c **** 	{
  40:../../../src/kernel/hal/atmega128/nrk_status.c **** 	// don't clear wdt
  41:../../../src/kernel/hal/atmega128/nrk_status.c **** 	error|=0x10;
  42:../../../src/kernel/hal/atmega128/nrk_status.c **** 	}
  43:../../../src/kernel/hal/atmega128/nrk_status.c **** 
  44:../../../src/kernel/hal/atmega128/nrk_status.c **** 
  45:../../../src/kernel/hal/atmega128/nrk_status.c **** // Check Brown Out 
  46:../../../src/kernel/hal/atmega128/nrk_status.c **** if( (MCUSR & (1<<BORF)) != 0 )
 137               	.LM2:
 138 000c 04B6      		in __tmp_reg__,84-32
 139 000e 02FE      		sbrs __tmp_reg__,2
 140 0010 00C0      		rjmp .L4
  47:../../../src/kernel/hal/atmega128/nrk_status.c **** 	{
  48:../../../src/kernel/hal/atmega128/nrk_status.c **** 	MCUSR &= ~(1<<BORF);	
 142               	.LM3:
 143 0012 84B7      		in r24,84-32
 144 0014 8B7F      		andi r24,lo8(-5)
 145 0016 84BF      		out 84-32,r24
  49:../../../src/kernel/hal/atmega128/nrk_status.c **** 	// Only add brownout if it isn't the first bootup
  50:../../../src/kernel/hal/atmega128/nrk_status.c **** 	if( (MCUSR & (1<<PORF)) == 0 )
 147               	.LM4:
 148 0018 04B6      		in __tmp_reg__,84-32
 149 001a 00FE      		sbrs __tmp_reg__,0
  51:../../../src/kernel/hal/atmega128/nrk_status.c **** 		error|=0x04;
 151               	.LM5:
 152 001c 9460      		ori r25,lo8(4)
 153               	.L4:
  52:../../../src/kernel/hal/atmega128/nrk_status.c **** 	}
  53:../../../src/kernel/hal/atmega128/nrk_status.c **** 
  54:../../../src/kernel/hal/atmega128/nrk_status.c **** // Check External Reset 
  55:../../../src/kernel/hal/atmega128/nrk_status.c **** if( (MCUSR & (1<<EXTRF)) != 0 )
 155               	.LM6:
 156 001e 04B6      		in __tmp_reg__,84-32
 157 0020 01FE      		sbrs __tmp_reg__,1
 158 0022 00C0      		rjmp .L5
  56:../../../src/kernel/hal/atmega128/nrk_status.c **** 	{
  57:../../../src/kernel/hal/atmega128/nrk_status.c **** 	MCUSR &= ~(1<<EXTRF);	
 160               	.LM7:
 161 0024 84B7      		in r24,84-32
 162 0026 8D7F      		andi r24,lo8(-3)
 163 0028 84BF      		out 84-32,r24
  58:../../../src/kernel/hal/atmega128/nrk_status.c **** 	error|=0x02;
 165               	.LM8:
 166 002a 9260      		ori r25,lo8(2)
 167               	.L5:
  59:../../../src/kernel/hal/atmega128/nrk_status.c **** 	}
  60:../../../src/kernel/hal/atmega128/nrk_status.c **** 
  61:../../../src/kernel/hal/atmega128/nrk_status.c **** // If any of the above errors went off, then the next errors will
  62:../../../src/kernel/hal/atmega128/nrk_status.c **** // incorrectly be set!  So make sure to bail early!
  63:../../../src/kernel/hal/atmega128/nrk_status.c **** if(error!=0) return error;
 169               	.LM9:
 170 002c 9923      		tst r25
 171 002e 01F4      		brne .L6
  64:../../../src/kernel/hal/atmega128/nrk_status.c **** 
  65:../../../src/kernel/hal/atmega128/nrk_status.c **** // Check if normal power up state is set and then clear it
  66:../../../src/kernel/hal/atmega128/nrk_status.c **** if( (MCUSR & (1<<PORF)) != 0 )
 173               	.LM10:
 174 0030 04B6      		in __tmp_reg__,84-32
 175 0032 00FC      		sbrc __tmp_reg__,0
 176 0034 00C0      		rjmp .L7
 177 0036 91E0      		ldi r25,lo8(1)
 178 0038 00C0      		rjmp .L8
 179               	.L7:
  67:../../../src/kernel/hal/atmega128/nrk_status.c **** 	{
  68:../../../src/kernel/hal/atmega128/nrk_status.c **** 	MCUSR &= ~(1<<PORF);
 181               	.LM11:
 182 003a 84B7      		in r24,84-32
 183 003c 8E7F      		andi r24,lo8(-2)
 184 003e 84BF      		out 84-32,r24
 185               	.L8:
  69:../../../src/kernel/hal/atmega128/nrk_status.c **** 	}
  70:../../../src/kernel/hal/atmega128/nrk_status.c **** 	else {
  71:../../../src/kernel/hal/atmega128/nrk_status.c **** 	error|=0x01;
  72:../../../src/kernel/hal/atmega128/nrk_status.c **** 	}
  73:../../../src/kernel/hal/atmega128/nrk_status.c **** 
  74:../../../src/kernel/hal/atmega128/nrk_status.c **** // check uart state 
  75:../../../src/kernel/hal/atmega128/nrk_status.c **** if((volatile uint8_t)TCCR0!=0) error|=0x01;
 187               	.LM12:
 188 0040 83B7      		in r24,83-32
 189 0042 8111      		cpse r24,__zero_reg__
 190 0044 9160      		ori r25,lo8(1)
 191               	.L6:
  76:../../../src/kernel/hal/atmega128/nrk_status.c **** 
  77:../../../src/kernel/hal/atmega128/nrk_status.c **** return error;
  78:../../../src/kernel/hal/atmega128/nrk_status.c **** }
 193               	.LM13:
 194 0046 892F      		mov r24,r25
 195               	/* epilogue start */
 196 0048 0895      		ret
 201               	.Lscope1:
 203               		.stabd	78,0,0
 204               		.comm _nrk_signal_list,4,1
 207               	.Letext0:
DEFINED SYMBOLS
                            *ABS*:00000000 nrk_status.c
     /tmp/ccUzvoYz.s:2      *ABS*:0000003f __SREG__
     /tmp/ccUzvoYz.s:3      *ABS*:0000003e __SP_H__
     /tmp/ccUzvoYz.s:4      *ABS*:0000003d __SP_L__
     /tmp/ccUzvoYz.s:5      *ABS*:00000034 __CCP__
     /tmp/ccUzvoYz.s:6      *ABS*:00000000 __tmp_reg__
     /tmp/ccUzvoYz.s:7      *ABS*:00000001 __zero_reg__
     /tmp/ccUzvoYz.s:119    .text:00000000 _nrk_startup_error
                            *COM*:00000004 _nrk_signal_list

UNDEFINED SYMBOLS
__do_copy_data
__do_clear_bss
