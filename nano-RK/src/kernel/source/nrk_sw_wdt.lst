   1               		.file	"nrk_sw_wdt.c"
   2               	__SREG__ = 0x3f
   3               	__SP_H__ = 0x3e
   4               	__SP_L__ = 0x3d
   5               	__CCP__ = 0x34
   6               	__tmp_reg__ = 0
   7               	__zero_reg__ = 1
  10               		.text
  11               	.Ltext0:
 139               	.global	_nrk_sw_wdt_check
 141               	_nrk_sw_wdt_check:
 142               		.stabd	46,0,0
   1:../../../src/kernel/source/nrk_sw_wdt.c **** /******************************************************************************
   2:../../../src/kernel/source/nrk_sw_wdt.c **** *  Nano-RK, a real-time operating system for sensor networks.
   3:../../../src/kernel/source/nrk_sw_wdt.c **** *  Copyright (C) 2007, Real-Time and Multimedia Lab, Carnegie Mellon University
   4:../../../src/kernel/source/nrk_sw_wdt.c **** *  All rights reserved.
   5:../../../src/kernel/source/nrk_sw_wdt.c **** *
   6:../../../src/kernel/source/nrk_sw_wdt.c **** *  This is the Open Source Version of Nano-RK included as part of a Dual
   7:../../../src/kernel/source/nrk_sw_wdt.c **** *  Licensing Model. If you are unsure which license to use please refer to:
   8:../../../src/kernel/source/nrk_sw_wdt.c **** *  http://www.nanork.org/nano-RK/wiki/Licensing
   9:../../../src/kernel/source/nrk_sw_wdt.c **** *
  10:../../../src/kernel/source/nrk_sw_wdt.c **** *  This program is free software: you can redistribute it and/or modify
  11:../../../src/kernel/source/nrk_sw_wdt.c **** *  it under the terms of the GNU General Public License as published by
  12:../../../src/kernel/source/nrk_sw_wdt.c **** *  the Free Software Foundation, version 2.0 of the License.
  13:../../../src/kernel/source/nrk_sw_wdt.c **** *
  14:../../../src/kernel/source/nrk_sw_wdt.c **** *  This program is distributed in the hope that it will be useful,
  15:../../../src/kernel/source/nrk_sw_wdt.c **** *  but WITHOUT ANY WARRANTY; without even the implied warranty of
  16:../../../src/kernel/source/nrk_sw_wdt.c **** *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  17:../../../src/kernel/source/nrk_sw_wdt.c **** *  GNU General Public License for more details.
  18:../../../src/kernel/source/nrk_sw_wdt.c **** *
  19:../../../src/kernel/source/nrk_sw_wdt.c **** *  You should have received a copy of the GNU General Public License
  20:../../../src/kernel/source/nrk_sw_wdt.c **** *  along with this program.  If not, see <http://www.gnu.org/licenses/>.
  21:../../../src/kernel/source/nrk_sw_wdt.c **** *
  22:../../../src/kernel/source/nrk_sw_wdt.c **** *  Contributing Authors (specific to this file):
  23:../../../src/kernel/source/nrk_sw_wdt.c **** *  Anthony Rowe
  24:../../../src/kernel/source/nrk_sw_wdt.c **** *******************************************************************************/
  25:../../../src/kernel/source/nrk_sw_wdt.c **** 
  26:../../../src/kernel/source/nrk_sw_wdt.c **** #include <nrk.h>
  27:../../../src/kernel/source/nrk_sw_wdt.c **** #include <include.h>
  28:../../../src/kernel/source/nrk_sw_wdt.c **** #include <nrk_error.h>
  29:../../../src/kernel/source/nrk_sw_wdt.c **** #include <nrk_time.h>
  30:../../../src/kernel/source/nrk_sw_wdt.c **** #include <nrk_sw_wdt.h>
  31:../../../src/kernel/source/nrk_sw_wdt.c **** #include <stdio.h>
  32:../../../src/kernel/source/nrk_sw_wdt.c **** 
  33:../../../src/kernel/source/nrk_sw_wdt.c **** #ifdef NRK_SW_WDT
  34:../../../src/kernel/source/nrk_sw_wdt.c **** 
  35:../../../src/kernel/source/nrk_sw_wdt.c **** void _nrk_sw_wdt_check()
  36:../../../src/kernel/source/nrk_sw_wdt.c **** {
 144               	.LM0:
 145               	.LFBB1:
 146 0000 2F92      		push r2
 147 0002 3F92      		push r3
 148 0004 4F92      		push r4
 149 0006 5F92      		push r5
 150 0008 6F92      		push r6
 151 000a 7F92      		push r7
 152 000c 8F92      		push r8
 153 000e 9F92      		push r9
 154 0010 AF92      		push r10
 155 0012 BF92      		push r11
 156 0014 CF92      		push r12
 157 0016 DF92      		push r13
 158 0018 EF92      		push r14
 159 001a FF92      		push r15
 160 001c 0F93      		push r16
 161 001e 1F93      		push r17
 162 0020 DF93      		push r29
 163 0022 CF93      		push r28
 164 0024 CDB7      		in r28,__SP_L__
 165 0026 DEB7      		in r29,__SP_H__
 166 0028 6097      		sbiw r28,16
 167 002a 0FB6      		in __tmp_reg__,__SREG__
 168 002c F894      		cli
 169 002e DEBF      		out __SP_H__,r29
 170 0030 0FBE      		out __SREG__,__tmp_reg__
 171 0032 CDBF      		out __SP_L__,r28
 172               	/* prologue: function */
 173               	/* frame size = 16 */
 174               	/* stack size = 34 */
 175               	.L__stack_usage = 34
  37:../../../src/kernel/source/nrk_sw_wdt.c ****     uint8_t i;
  38:../../../src/kernel/source/nrk_sw_wdt.c ****     nrk_time_t now;
  39:../../../src/kernel/source/nrk_sw_wdt.c ****     nrk_time_t sub;
  40:../../../src/kernel/source/nrk_sw_wdt.c ****     nrk_time_get(&now);
 177               	.LM1:
 178 0034 CE01      		movw r24,r28
 179 0036 0196      		adiw r24,1
 180 0038 0E94 0000 		call nrk_time_get
 181 003c 90E0      		ldi r25,lo8(sw_wdts)
 182 003e 492E      		mov r4,r25
 183 0040 90E0      		ldi r25,hi8(sw_wdts)
 184 0042 592E      		mov r5,r25
 185 0044 6624      		clr r6
 186 0046 7724      		clr r7
  41:../../../src/kernel/source/nrk_sw_wdt.c ****     for(i=0; i<NRK_MAX_SW_WDT; i++ )
  42:../../../src/kernel/source/nrk_sw_wdt.c ****     {
  43:../../../src/kernel/source/nrk_sw_wdt.c ****         if(sw_wdts[i].active==1 && (nrk_time_sub(&sub,sw_wdts[i].next_period,now)==NRK_ERROR))
 188               	.LM2:
 189 0048 89E0      		ldi r24,lo8(9)
 190 004a 282E      		mov r2,r24
 191 004c 312C      		mov r3,__zero_reg__
 192 004e 2C0E      		add r2,r28
 193 0050 3D1E      		adc r3,r29
 194               	.L4:
 195 0052 D201      		movw r26,r4
 196 0054 1296      		adiw r26,2
 197 0056 8C91      		ld r24,X
 198 0058 1297      		sbiw r26,2
 199 005a 8130      		cpi r24,lo8(1)
 200 005c 01F4      		brne .L2
 202               	.LM3:
 203 005e 83E1      		ldi r24,lo8(19)
 204 0060 90E0      		ldi r25,hi8(19)
 205 0062 689E      		mul r6,r24
 206 0064 F001      		movw r30,r0
 207 0066 699E      		mul r6,r25
 208 0068 F00D      		add r31,r0
 209 006a 789E      		mul r7,r24
 210 006c F00D      		add r31,r0
 211 006e 1124      		clr r1
 212 0070 E050      		subi r30,lo8(-(sw_wdts+11))
 213 0072 F040      		sbci r31,hi8(-(sw_wdts+11))
 214 0074 C101      		movw r24,r2
 215 0076 0081      		ld r16,Z
 216 0078 1181      		ldd r17,Z+1
 217 007a 2281      		ldd r18,Z+2
 218 007c 3381      		ldd r19,Z+3
 219 007e 4481      		ldd r20,Z+4
 220 0080 5581      		ldd r21,Z+5
 221 0082 6681      		ldd r22,Z+6
 222 0084 7781      		ldd r23,Z+7
 223 0086 8980      		ldd r8,Y+1
 224 0088 9A80      		ldd r9,Y+2
 225 008a AB80      		ldd r10,Y+3
 226 008c BC80      		ldd r11,Y+4
 227 008e CD80      		ldd r12,Y+5
 228 0090 DE80      		ldd r13,Y+6
 229 0092 EF80      		ldd r14,Y+7
 230 0094 F884      		ldd r15,Y+8
 231 0096 0E94 0000 		call nrk_time_sub
 232 009a 8F3F      		cpi r24,lo8(-1)
 233 009c 01F4      		brne .L2
  44:../../../src/kernel/source/nrk_sw_wdt.c ****         {
  45:../../../src/kernel/source/nrk_sw_wdt.c ****             nrk_kernel_error_add(NRK_SW_WATCHDOG_ERROR,i );
 235               	.LM4:
 236 009e 85E1      		ldi r24,lo8(21)
 237 00a0 662D      		mov r22,r6
 238 00a2 0E94 0000 		call nrk_kernel_error_add
  46:../../../src/kernel/source/nrk_sw_wdt.c ****             if(sw_wdts[i].error_func==NULL)
 240               	.LM5:
 241 00a6 D201      		movw r26,r4
 242 00a8 ED91      		ld r30,X+
 243 00aa FC91      		ld r31,X
 244 00ac 1197      		sbiw r26,1
 245 00ae 3097      		sbiw r30,0
 246 00b0 01F4      		brne .L3
  47:../../../src/kernel/source/nrk_sw_wdt.c ****                 // if hw wtd set, this will reboot node
  48:../../../src/kernel/source/nrk_sw_wdt.c ****                 nrk_halt();
 248               	.LM6:
 249 00b2 0E94 0000 		call nrk_halt
 250 00b6 00C0      		rjmp .L2
 251               	.L3:
  49:../../../src/kernel/source/nrk_sw_wdt.c ****             else
  50:../../../src/kernel/source/nrk_sw_wdt.c ****                 sw_wdts[i].error_func();
 253               	.LM7:
 254 00b8 0995      		icall
 255               	.L2:
 256 00ba 0894      		sec
 257 00bc 611C      		adc r6,__zero_reg__
 258 00be 711C      		adc r7,__zero_reg__
 259 00c0 E3E1      		ldi r30,lo8(19)
 260 00c2 F0E0      		ldi r31,hi8(19)
 261 00c4 4E0E      		add r4,r30
 262 00c6 5F1E      		adc r5,r31
  41:../../../src/kernel/source/nrk_sw_wdt.c ****     for(i=0; i<NRK_MAX_SW_WDT; i++ )
 264               	.LM8:
 265 00c8 F3E0      		ldi r31,lo8(3)
 266 00ca 6F16      		cp r6,r31
 267 00cc 7104      		cpc r7,__zero_reg__
 268 00ce 01F4      		brne .L4
 269               	/* epilogue start */
  51:../../../src/kernel/source/nrk_sw_wdt.c ****             // call func
  52:../../../src/kernel/source/nrk_sw_wdt.c ****         }
  53:../../../src/kernel/source/nrk_sw_wdt.c ****     }
  54:../../../src/kernel/source/nrk_sw_wdt.c **** 
  55:../../../src/kernel/source/nrk_sw_wdt.c **** }
 271               	.LM9:
 272 00d0 6096      		adiw r28,16
 273 00d2 0FB6      		in __tmp_reg__,__SREG__
 274 00d4 F894      		cli
 275 00d6 DEBF      		out __SP_H__,r29
 276 00d8 0FBE      		out __SREG__,__tmp_reg__
 277 00da CDBF      		out __SP_L__,r28
 278 00dc CF91      		pop r28
 279 00de DF91      		pop r29
 280 00e0 1F91      		pop r17
 281 00e2 0F91      		pop r16
 282 00e4 FF90      		pop r15
 283 00e6 EF90      		pop r14
 284 00e8 DF90      		pop r13
 285 00ea CF90      		pop r12
 286 00ec BF90      		pop r11
 287 00ee AF90      		pop r10
 288 00f0 9F90      		pop r9
 289 00f2 8F90      		pop r8
 290 00f4 7F90      		pop r7
 291 00f6 6F90      		pop r6
 292 00f8 5F90      		pop r5
 293 00fa 4F90      		pop r4
 294 00fc 3F90      		pop r3
 295 00fe 2F90      		pop r2
 296 0100 0895      		ret
 302               	.Lscope1:
 304               		.stabd	78,0,0
 306               	.global	_nrk_sw_wdt_init
 308               	_nrk_sw_wdt_init:
 309               		.stabd	46,0,0
  56:../../../src/kernel/source/nrk_sw_wdt.c **** 
  57:../../../src/kernel/source/nrk_sw_wdt.c **** void _nrk_sw_wdt_init()
  58:../../../src/kernel/source/nrk_sw_wdt.c **** {
 311               	.LM10:
 312               	.LFBB2:
 313               	/* prologue: function */
 314               	/* frame size = 0 */
 315               	/* stack size = 0 */
 316               	.L__stack_usage = 0
  59:../../../src/kernel/source/nrk_sw_wdt.c ****     uint8_t i;
  60:../../../src/kernel/source/nrk_sw_wdt.c ****     for(i=0; i<NRK_MAX_SW_WDT; i++ )
  61:../../../src/kernel/source/nrk_sw_wdt.c ****         sw_wdts[i].active=0;
 318               	.LM11:
 319 0102 1092 0000 		sts sw_wdts+2,__zero_reg__
 320 0106 1092 0000 		sts sw_wdts+21,__zero_reg__
 321 010a 1092 0000 		sts sw_wdts+40,__zero_reg__
 322               	/* epilogue start */
  62:../../../src/kernel/source/nrk_sw_wdt.c **** }
 324               	.LM12:
 325 010e 0895      		ret
 327               	.Lscope2:
 329               		.stabd	78,0,0
 334               	.global	nrk_sw_wdt_init
 336               	nrk_sw_wdt_init:
 337               		.stabd	46,0,0
  63:../../../src/kernel/source/nrk_sw_wdt.c **** 
  64:../../../src/kernel/source/nrk_sw_wdt.c **** int8_t nrk_sw_wdt_init(uint8_t id, nrk_time_t *period, void *func)
  65:../../../src/kernel/source/nrk_sw_wdt.c **** {
 339               	.LM13:
 340               	.LFBB3:
 341 0110 CF93      		push r28
 342 0112 DF93      		push r29
 343               	/* prologue: function */
 344               	/* frame size = 0 */
 345               	/* stack size = 2 */
 346               	.L__stack_usage = 2
 347 0114 FB01      		movw r30,r22
  66:../../../src/kernel/source/nrk_sw_wdt.c ****     if(id>=NRK_MAX_SW_WDT) return NRK_ERROR;
 349               	.LM14:
 350 0116 8330      		cpi r24,lo8(3)
 351 0118 00F4      		brsh .L9
  67:../../../src/kernel/source/nrk_sw_wdt.c ****     sw_wdts[id].error_func=func;
 353               	.LM15:
 354 011a 90E0      		ldi r25,lo8(0)
 355 011c 23E1      		ldi r18,lo8(19)
 356 011e 30E0      		ldi r19,hi8(19)
 357 0120 829F      		mul r24,r18
 358 0122 E001      		movw r28,r0
 359 0124 839F      		mul r24,r19
 360 0126 D00D      		add r29,r0
 361 0128 929F      		mul r25,r18
 362 012a D00D      		add r29,r0
 363 012c 1124      		clr r1
 364 012e C050      		subi r28,lo8(-(sw_wdts))
 365 0130 D040      		sbci r29,hi8(-(sw_wdts))
 366 0132 5983      		std Y+1,r21
 367 0134 4883      		st Y,r20
  68:../../../src/kernel/source/nrk_sw_wdt.c ****     sw_wdts[id].period.secs=period->secs;
 369               	.LM16:
 370 0136 8081      		ld r24,Z
 371 0138 9181      		ldd r25,Z+1
 372 013a A281      		ldd r26,Z+2
 373 013c B381      		ldd r27,Z+3
 374 013e 8B83      		std Y+3,r24
 375 0140 9C83      		std Y+4,r25
 376 0142 AD83      		std Y+5,r26
 377 0144 BE83      		std Y+6,r27
  69:../../../src/kernel/source/nrk_sw_wdt.c ****     sw_wdts[id].period.nano_secs=period->nano_secs;
 379               	.LM17:
 380 0146 8481      		ldd r24,Z+4
 381 0148 9581      		ldd r25,Z+5
 382 014a A681      		ldd r26,Z+6
 383 014c B781      		ldd r27,Z+7
 384 014e 8F83      		std Y+7,r24
 385 0150 9887      		std Y+8,r25
 386 0152 A987      		std Y+9,r26
 387 0154 BA87      		std Y+10,r27
  70:../../../src/kernel/source/nrk_sw_wdt.c ****     sw_wdts[id].active=0;
 389               	.LM18:
 390 0156 1A82      		std Y+2,__zero_reg__
  71:../../../src/kernel/source/nrk_sw_wdt.c ****     return NRK_OK;
 392               	.LM19:
 393 0158 81E0      		ldi r24,lo8(1)
 394 015a 00C0      		rjmp .L8
 395               	.L9:
  66:../../../src/kernel/source/nrk_sw_wdt.c ****     if(id>=NRK_MAX_SW_WDT) return NRK_ERROR;
 397               	.LM20:
 398 015c 8FEF      		ldi r24,lo8(-1)
 399               	.L8:
 400               	/* epilogue start */
  72:../../../src/kernel/source/nrk_sw_wdt.c **** }
 402               	.LM21:
 403 015e DF91      		pop r29
 404 0160 CF91      		pop r28
 405 0162 0895      		ret
 407               	.Lscope3:
 409               		.stabd	78,0,0
 412               	.global	nrk_sw_wdt_update
 414               	nrk_sw_wdt_update:
 415               		.stabd	46,0,0
  73:../../../src/kernel/source/nrk_sw_wdt.c **** 
  74:../../../src/kernel/source/nrk_sw_wdt.c **** int8_t nrk_sw_wdt_update(uint8_t id)
  75:../../../src/kernel/source/nrk_sw_wdt.c **** {
 417               	.LM22:
 418               	.LFBB4:
 419 0164 CF92      		push r12
 420 0166 DF92      		push r13
 421 0168 EF92      		push r14
 422 016a FF92      		push r15
 423 016c 0F93      		push r16
 424 016e 1F93      		push r17
 425 0170 DF93      		push r29
 426 0172 CF93      		push r28
 427 0174 CDB7      		in r28,__SP_L__
 428 0176 DEB7      		in r29,__SP_H__
 429 0178 2897      		sbiw r28,8
 430 017a 0FB6      		in __tmp_reg__,__SREG__
 431 017c F894      		cli
 432 017e DEBF      		out __SP_H__,r29
 433 0180 0FBE      		out __SREG__,__tmp_reg__
 434 0182 CDBF      		out __SP_L__,r28
 435               	/* prologue: function */
 436               	/* frame size = 8 */
 437               	/* stack size = 16 */
 438               	.L__stack_usage = 16
 439 0184 082F      		mov r16,r24
  76:../../../src/kernel/source/nrk_sw_wdt.c ****     nrk_time_t now;
  77:../../../src/kernel/source/nrk_sw_wdt.c ****     if(id>=NRK_MAX_SW_WDT) return NRK_ERROR;
 441               	.LM23:
 442 0186 8330      		cpi r24,lo8(3)
 443 0188 00F4      		brsh .L12
  78:../../../src/kernel/source/nrk_sw_wdt.c ****     nrk_time_get(&now);
 445               	.LM24:
 446 018a CE01      		movw r24,r28
 447 018c 0196      		adiw r24,1
 448 018e 0E94 0000 		call nrk_time_get
  79:../../../src/kernel/source/nrk_sw_wdt.c ****     sw_wdts[id].next_period.secs=now.secs+sw_wdts[id].period.secs;
 450               	.LM25:
 451 0192 402F      		mov r20,r16
 452 0194 50E0      		ldi r21,lo8(0)
 453 0196 23E1      		ldi r18,lo8(19)
 454 0198 30E0      		ldi r19,hi8(19)
 455 019a 429F      		mul r20,r18
 456 019c C001      		movw r24,r0
 457 019e 439F      		mul r20,r19
 458 01a0 900D      		add r25,r0
 459 01a2 529F      		mul r21,r18
 460 01a4 900D      		add r25,r0
 461 01a6 1124      		clr r1
 462 01a8 8C01      		movw r16,r24
 463 01aa 0050      		subi r16,lo8(-(sw_wdts))
 464 01ac 1040      		sbci r17,hi8(-(sw_wdts))
 465 01ae F801      		movw r30,r16
 466 01b0 2381      		ldd r18,Z+3
 467 01b2 3481      		ldd r19,Z+4
 468 01b4 4581      		ldd r20,Z+5
 469 01b6 5681      		ldd r21,Z+6
 470 01b8 C980      		ldd r12,Y+1
 471 01ba DA80      		ldd r13,Y+2
 472 01bc EB80      		ldd r14,Y+3
 473 01be FC80      		ldd r15,Y+4
 474 01c0 2C0D      		add r18,r12
 475 01c2 3D1D      		adc r19,r13
 476 01c4 4E1D      		adc r20,r14
 477 01c6 5F1D      		adc r21,r15
 478 01c8 2387      		std Z+11,r18
 479 01ca 3487      		std Z+12,r19
 480 01cc 4587      		std Z+13,r20
 481 01ce 5687      		std Z+14,r21
  80:../../../src/kernel/source/nrk_sw_wdt.c ****     sw_wdts[id].next_period.nano_secs=now.nano_secs+sw_wdts[id].period.nano_secs;
 483               	.LM26:
 484 01d0 2781      		ldd r18,Z+7
 485 01d2 3085      		ldd r19,Z+8
 486 01d4 4185      		ldd r20,Z+9
 487 01d6 5285      		ldd r21,Z+10
 488 01d8 CD80      		ldd r12,Y+5
 489 01da DE80      		ldd r13,Y+6
 490 01dc EF80      		ldd r14,Y+7
 491 01de F884      		ldd r15,Y+8
 492 01e0 2C0D      		add r18,r12
 493 01e2 3D1D      		adc r19,r13
 494 01e4 4E1D      		adc r20,r14
 495 01e6 5F1D      		adc r21,r15
 496 01e8 2787      		std Z+15,r18
 497 01ea 308B      		std Z+16,r19
 498 01ec 418B      		std Z+17,r20
 499 01ee 528B      		std Z+18,r21
  81:../../../src/kernel/source/nrk_sw_wdt.c ****     nrk_time_compact_nanos(&(sw_wdts[id].next_period));
 501               	.LM27:
 502 01f0 8050      		subi r24,lo8(-(sw_wdts+11))
 503 01f2 9040      		sbci r25,hi8(-(sw_wdts+11))
 504 01f4 0E94 0000 		call nrk_time_compact_nanos
  82:../../../src/kernel/source/nrk_sw_wdt.c ****     sw_wdts[id].active=1;
 506               	.LM28:
 507 01f8 81E0      		ldi r24,lo8(1)
 508 01fa F801      		movw r30,r16
 509 01fc 8283      		std Z+2,r24
  83:../../../src/kernel/source/nrk_sw_wdt.c ****     return NRK_OK;
 511               	.LM29:
 512 01fe 00C0      		rjmp .L11
 513               	.L12:
  77:../../../src/kernel/source/nrk_sw_wdt.c ****     if(id>=NRK_MAX_SW_WDT) return NRK_ERROR;
 515               	.LM30:
 516 0200 8FEF      		ldi r24,lo8(-1)
 517               	.L11:
 518               	/* epilogue start */
  84:../../../src/kernel/source/nrk_sw_wdt.c **** }
 520               	.LM31:
 521 0202 2896      		adiw r28,8
 522 0204 0FB6      		in __tmp_reg__,__SREG__
 523 0206 F894      		cli
 524 0208 DEBF      		out __SP_H__,r29
 525 020a 0FBE      		out __SREG__,__tmp_reg__
 526 020c CDBF      		out __SP_L__,r28
 527 020e CF91      		pop r28
 528 0210 DF91      		pop r29
 529 0212 1F91      		pop r17
 530 0214 0F91      		pop r16
 531 0216 FF90      		pop r15
 532 0218 EF90      		pop r14
 533 021a DF90      		pop r13
 534 021c CF90      		pop r12
 535 021e 0895      		ret
 540               	.Lscope4:
 542               		.stabd	78,0,0
 545               	.global	nrk_sw_wdt_start
 547               	nrk_sw_wdt_start:
 548               		.stabd	46,0,0
  85:../../../src/kernel/source/nrk_sw_wdt.c **** 
  86:../../../src/kernel/source/nrk_sw_wdt.c **** int8_t nrk_sw_wdt_start(uint8_t id)
  87:../../../src/kernel/source/nrk_sw_wdt.c **** {
 550               	.LM32:
 551               	.LFBB5:
 552 0220 1F93      		push r17
 553 0222 DF93      		push r29
 554 0224 CF93      		push r28
 555 0226 CDB7      		in r28,__SP_L__
 556 0228 DEB7      		in r29,__SP_H__
 557 022a 2897      		sbiw r28,8
 558 022c 0FB6      		in __tmp_reg__,__SREG__
 559 022e F894      		cli
 560 0230 DEBF      		out __SP_H__,r29
 561 0232 0FBE      		out __SREG__,__tmp_reg__
 562 0234 CDBF      		out __SP_L__,r28
 563               	/* prologue: function */
 564               	/* frame size = 8 */
 565               	/* stack size = 11 */
 566               	.L__stack_usage = 11
 567 0236 182F      		mov r17,r24
  88:../../../src/kernel/source/nrk_sw_wdt.c ****     nrk_time_t now;
  89:../../../src/kernel/source/nrk_sw_wdt.c ****     if(id>=NRK_MAX_SW_WDT) return NRK_ERROR;
 569               	.LM33:
 570 0238 8330      		cpi r24,lo8(3)
 571 023a 00F4      		brsh .L15
  90:../../../src/kernel/source/nrk_sw_wdt.c ****     nrk_time_get(&now);
 573               	.LM34:
 574 023c CE01      		movw r24,r28
 575 023e 0196      		adiw r24,1
 576 0240 0E94 0000 		call nrk_time_get
  91:../../../src/kernel/source/nrk_sw_wdt.c ****     sw_wdts[id].next_period.secs=now.secs+sw_wdts[id].period.secs;
 578               	.LM35:
 579 0244 812F      		mov r24,r17
 580 0246 90E0      		ldi r25,lo8(0)
 581 0248 23E1      		ldi r18,lo8(19)
 582 024a 30E0      		ldi r19,hi8(19)
 583 024c 829F      		mul r24,r18
 584 024e F001      		movw r30,r0
 585 0250 839F      		mul r24,r19
 586 0252 F00D      		add r31,r0
 587 0254 929F      		mul r25,r18
 588 0256 F00D      		add r31,r0
 589 0258 1124      		clr r1
 590 025a E050      		subi r30,lo8(-(sw_wdts))
 591 025c F040      		sbci r31,hi8(-(sw_wdts))
 592 025e 8381      		ldd r24,Z+3
 593 0260 9481      		ldd r25,Z+4
 594 0262 A581      		ldd r26,Z+5
 595 0264 B681      		ldd r27,Z+6
 596 0266 2981      		ldd r18,Y+1
 597 0268 3A81      		ldd r19,Y+2
 598 026a 4B81      		ldd r20,Y+3
 599 026c 5C81      		ldd r21,Y+4
 600 026e 820F      		add r24,r18
 601 0270 931F      		adc r25,r19
 602 0272 A41F      		adc r26,r20
 603 0274 B51F      		adc r27,r21
 604 0276 8387      		std Z+11,r24
 605 0278 9487      		std Z+12,r25
 606 027a A587      		std Z+13,r26
 607 027c B687      		std Z+14,r27
  92:../../../src/kernel/source/nrk_sw_wdt.c ****     sw_wdts[id].next_period.nano_secs=now.nano_secs+sw_wdts[id].period.nano_secs;
 609               	.LM36:
 610 027e 8781      		ldd r24,Z+7
 611 0280 9085      		ldd r25,Z+8
 612 0282 A185      		ldd r26,Z+9
 613 0284 B285      		ldd r27,Z+10
 614 0286 2D81      		ldd r18,Y+5
 615 0288 3E81      		ldd r19,Y+6
 616 028a 4F81      		ldd r20,Y+7
 617 028c 5885      		ldd r21,Y+8
 618 028e 820F      		add r24,r18
 619 0290 931F      		adc r25,r19
 620 0292 A41F      		adc r26,r20
 621 0294 B51F      		adc r27,r21
 622 0296 8787      		std Z+15,r24
 623 0298 908B      		std Z+16,r25
 624 029a A18B      		std Z+17,r26
 625 029c B28B      		std Z+18,r27
  93:../../../src/kernel/source/nrk_sw_wdt.c ****     sw_wdts[id].active=1;
 627               	.LM37:
 628 029e 81E0      		ldi r24,lo8(1)
 629 02a0 8283      		std Z+2,r24
  94:../../../src/kernel/source/nrk_sw_wdt.c **** 
  95:../../../src/kernel/source/nrk_sw_wdt.c ****     return NRK_OK;
 631               	.LM38:
 632 02a2 00C0      		rjmp .L14
 633               	.L15:
  89:../../../src/kernel/source/nrk_sw_wdt.c ****     if(id>=NRK_MAX_SW_WDT) return NRK_ERROR;
 635               	.LM39:
 636 02a4 8FEF      		ldi r24,lo8(-1)
 637               	.L14:
 638               	/* epilogue start */
  96:../../../src/kernel/source/nrk_sw_wdt.c **** }
 640               	.LM40:
 641 02a6 2896      		adiw r28,8
 642 02a8 0FB6      		in __tmp_reg__,__SREG__
 643 02aa F894      		cli
 644 02ac DEBF      		out __SP_H__,r29
 645 02ae 0FBE      		out __SREG__,__tmp_reg__
 646 02b0 CDBF      		out __SP_L__,r28
 647 02b2 CF91      		pop r28
 648 02b4 DF91      		pop r29
 649 02b6 1F91      		pop r17
 650 02b8 0895      		ret
 655               	.Lscope5:
 657               		.stabd	78,0,0
 660               	.global	nrk_sw_wdt_stop
 662               	nrk_sw_wdt_stop:
 663               		.stabd	46,0,0
  97:../../../src/kernel/source/nrk_sw_wdt.c **** 
  98:../../../src/kernel/source/nrk_sw_wdt.c **** int8_t nrk_sw_wdt_stop(uint8_t id)
  99:../../../src/kernel/source/nrk_sw_wdt.c **** {
 665               	.LM41:
 666               	.LFBB6:
 667               	/* prologue: function */
 668               	/* frame size = 0 */
 669               	/* stack size = 0 */
 670               	.L__stack_usage = 0
 100:../../../src/kernel/source/nrk_sw_wdt.c ****     if(id>=NRK_MAX_SW_WDT) return NRK_ERROR;
 672               	.LM42:
 673 02ba 8330      		cpi r24,lo8(3)
 674 02bc 00F4      		brsh .L18
 101:../../../src/kernel/source/nrk_sw_wdt.c ****     sw_wdts[id].active=0;
 676               	.LM43:
 677 02be 90E0      		ldi r25,lo8(0)
 678 02c0 23E1      		ldi r18,lo8(19)
 679 02c2 30E0      		ldi r19,hi8(19)
 680 02c4 829F      		mul r24,r18
 681 02c6 F001      		movw r30,r0
 682 02c8 839F      		mul r24,r19
 683 02ca F00D      		add r31,r0
 684 02cc 929F      		mul r25,r18
 685 02ce F00D      		add r31,r0
 686 02d0 1124      		clr r1
 687 02d2 E050      		subi r30,lo8(-(sw_wdts))
 688 02d4 F040      		sbci r31,hi8(-(sw_wdts))
 689 02d6 1282      		std Z+2,__zero_reg__
 102:../../../src/kernel/source/nrk_sw_wdt.c ****     return NRK_OK;
 691               	.LM44:
 692 02d8 81E0      		ldi r24,lo8(1)
 693 02da 0895      		ret
 694               	.L18:
 100:../../../src/kernel/source/nrk_sw_wdt.c ****     if(id>=NRK_MAX_SW_WDT) return NRK_ERROR;
 696               	.LM45:
 697 02dc 8FEF      		ldi r24,lo8(-1)
 103:../../../src/kernel/source/nrk_sw_wdt.c **** }
 699               	.LM46:
 700 02de 0895      		ret
 702               	.Lscope6:
 704               		.stabd	78,0,0
 705               		.comm _nrk_signal_list,4,1
 706               		.comm nrk_system_ceiling,2,1
 707               		.comm nrk_idle_task_stk,128,1
 708               		.comm nrk_kernel_stk_ptr,2,1
 709               		.comm error_task,1,1
 710               		.comm error_num,1,1
 711               		.comm sw_wdts,57,1
 720               	.Letext0:
 721               	.global __do_clear_bss
DEFINED SYMBOLS
                            *ABS*:00000000 nrk_sw_wdt.c
     /tmp/ccUMmY6z.s:2      *ABS*:0000003f __SREG__
     /tmp/ccUMmY6z.s:3      *ABS*:0000003e __SP_H__
     /tmp/ccUMmY6z.s:4      *ABS*:0000003d __SP_L__
     /tmp/ccUMmY6z.s:5      *ABS*:00000034 __CCP__
     /tmp/ccUMmY6z.s:6      *ABS*:00000000 __tmp_reg__
     /tmp/ccUMmY6z.s:7      *ABS*:00000001 __zero_reg__
     /tmp/ccUMmY6z.s:141    .text:00000000 _nrk_sw_wdt_check
                            *COM*:00000039 sw_wdts
     /tmp/ccUMmY6z.s:308    .text:00000102 _nrk_sw_wdt_init
     /tmp/ccUMmY6z.s:336    .text:00000110 nrk_sw_wdt_init
     /tmp/ccUMmY6z.s:414    .text:00000164 nrk_sw_wdt_update
     /tmp/ccUMmY6z.s:547    .text:00000220 nrk_sw_wdt_start
     /tmp/ccUMmY6z.s:662    .text:000002ba nrk_sw_wdt_stop
                            *COM*:00000004 _nrk_signal_list
                            *COM*:00000002 nrk_system_ceiling
                            *COM*:00000080 nrk_idle_task_stk
                            *COM*:00000002 nrk_kernel_stk_ptr
                            *COM*:00000001 error_task
                            *COM*:00000001 error_num

UNDEFINED SYMBOLS
nrk_time_get
nrk_time_sub
nrk_kernel_error_add
nrk_halt
nrk_time_compact_nanos
__do_clear_bss
