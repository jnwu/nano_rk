   1               		.file	"nrk.c"
   2               	__SREG__ = 0x3f
   3               	__SP_H__ = 0x3e
   4               	__SP_L__ = 0x3d
   5               	__CCP__ = 0x34
   6               	__tmp_reg__ = 0
   7               	__zero_reg__ = 1
  10               		.text
  11               	.Ltext0:
 139               	.global	nrk_int_disable
 141               	nrk_int_disable:
 142               		.stabd	46,0,0
   1:../../../src/kernel/source/nrk.c **** /******************************************************************************
   2:../../../src/kernel/source/nrk.c **** *  Nano-RK, a real-time operating system for sensor networks.
   3:../../../src/kernel/source/nrk.c **** *  Copyright (C) 2007, Real-Time and Multimedia Lab, Carnegie Mellon University
   4:../../../src/kernel/source/nrk.c **** *  All rights reserved.
   5:../../../src/kernel/source/nrk.c **** *
   6:../../../src/kernel/source/nrk.c **** *  This is the Open Source Version of Nano-RK included as part of a Dual
   7:../../../src/kernel/source/nrk.c **** *  Licensing Model. If you are unsure which license to use please refer to:
   8:../../../src/kernel/source/nrk.c **** *  http://www.nanork.org/nano-RK/wiki/Licensing
   9:../../../src/kernel/source/nrk.c **** *
  10:../../../src/kernel/source/nrk.c **** *  This program is free software: you can redistribute it and/or modify
  11:../../../src/kernel/source/nrk.c **** *  it under the terms of the GNU General Public License as published by
  12:../../../src/kernel/source/nrk.c **** *  the Free Software Foundation, version 2.0 of the License.
  13:../../../src/kernel/source/nrk.c **** *
  14:../../../src/kernel/source/nrk.c **** *  This program is distributed in the hope that it will be useful,
  15:../../../src/kernel/source/nrk.c **** *  but WITHOUT ANY WARRANTY; without even the implied warranty of
  16:../../../src/kernel/source/nrk.c **** *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  17:../../../src/kernel/source/nrk.c **** *  GNU General Public License for more details.
  18:../../../src/kernel/source/nrk.c **** *
  19:../../../src/kernel/source/nrk.c **** *  You should have received a copy of the GNU General Public License
  20:../../../src/kernel/source/nrk.c **** *  along with this program.  If not, see <http://www.gnu.org/licenses/>.
  21:../../../src/kernel/source/nrk.c **** *
  22:../../../src/kernel/source/nrk.c **** *  Contributing Authors (specific to this file):
  23:../../../src/kernel/source/nrk.c **** *  Anthony Rowe
  24:../../../src/kernel/source/nrk.c **** *  Zane Starr
  25:../../../src/kernel/source/nrk.c **** *  Anand Eswaren
  26:../../../src/kernel/source/nrk.c **** *******************************************************************************/
  27:../../../src/kernel/source/nrk.c **** 
  28:../../../src/kernel/source/nrk.c **** #include <stdio.h>
  29:../../../src/kernel/source/nrk.c **** #include <nrk_includes.h> 
  30:../../../src/kernel/source/nrk.c **** #include <ulib.h>
  31:../../../src/kernel/source/nrk.c **** #include <nrk.h>
  32:../../../src/kernel/source/nrk.c **** #include <nrk_task.h>
  33:../../../src/kernel/source/nrk.c **** #include <nrk_idle_task.h>
  34:../../../src/kernel/source/nrk.c **** #include <nrk_defs.h>
  35:../../../src/kernel/source/nrk.c **** #include <nrk_cpu.h>
  36:../../../src/kernel/source/nrk.c **** #include <nrk_scheduler.h>
  37:../../../src/kernel/source/nrk.c **** #include <nrk_error.h>
  38:../../../src/kernel/source/nrk.c **** #include <nrk_events.h>
  39:../../../src/kernel/source/nrk.c **** #include <nrk_stack_check.h>
  40:../../../src/kernel/source/nrk.c **** #include <nrk_status.h>
  41:../../../src/kernel/source/nrk.c **** #include <nrk_watchdog.h>
  42:../../../src/kernel/source/nrk.c **** #include <nrk_sw_wdt.h>
  43:../../../src/kernel/source/nrk.c **** #include <nrk_reserve.h>
  44:../../../src/kernel/source/nrk.c **** #include <nrk_cfg.h>
  45:../../../src/kernel/source/nrk.c **** #include <nrk_stats.h>
  46:../../../src/kernel/source/nrk.c **** 
  47:../../../src/kernel/source/nrk.c **** inline void nrk_int_disable(void) {
 144               	.LM0:
 145               	.LFBB1:
 146               	/* prologue: function */
 147               	/* frame size = 0 */
 148               	/* stack size = 0 */
 149               	.L__stack_usage = 0
  48:../../../src/kernel/source/nrk.c ****   DISABLE_GLOBAL_INT();
 151               	.LM1:
 152               	/* #APP */
 153               	 ;  48 "../../../src/kernel/source/nrk.c" 1
 154 0000 F894      		cli
 155               		
 156               	 ;  0 "" 2
 157               	/* epilogue start */
  49:../../../src/kernel/source/nrk.c **** };
 159               	.LM2:
 160               	/* #NOAPP */
 161 0002 0895      		ret
 163               	.Lscope1:
 165               		.stabd	78,0,0
 167               	.global	nrk_int_enable
 169               	nrk_int_enable:
 170               		.stabd	46,0,0
  50:../../../src/kernel/source/nrk.c **** 
  51:../../../src/kernel/source/nrk.c **** inline void nrk_int_enable(void) {
 172               	.LM3:
 173               	.LFBB2:
 174               	/* prologue: function */
 175               	/* frame size = 0 */
 176               	/* stack size = 0 */
 177               	.L__stack_usage = 0
  52:../../../src/kernel/source/nrk.c ****   ENABLE_GLOBAL_INT();
 179               	.LM4:
 180               	/* #APP */
 181               	 ;  52 "../../../src/kernel/source/nrk.c" 1
 182 0004 7894      		sei
 183               		
 184               	 ;  0 "" 2
 185               	/* epilogue start */
  53:../../../src/kernel/source/nrk.c **** };
 187               	.LM5:
 188               	/* #NOAPP */
 189 0006 0895      		ret
 191               	.Lscope2:
 193               		.stabd	78,0,0
 195               	.global	nrk_halt
 197               	nrk_halt:
 198               		.stabd	46,0,0
  54:../../../src/kernel/source/nrk.c **** 
  55:../../../src/kernel/source/nrk.c **** uint8_t nrk_task_init_cnt;
  56:../../../src/kernel/source/nrk.c **** 
  57:../../../src/kernel/source/nrk.c **** 
  58:../../../src/kernel/source/nrk.c **** void nrk_halt()
  59:../../../src/kernel/source/nrk.c **** {
 200               	.LM6:
 201               	.LFBB3:
 202               	/* prologue: function */
 203               	/* frame size = 0 */
 204               	/* stack size = 0 */
 205               	.L__stack_usage = 0
  60:../../../src/kernel/source/nrk.c **** nrk_int_disable();
 207               	.LM7:
 208 0008 0E94 0000 		call nrk_int_disable
 209               	.L4:
 210 000c 00C0      		rjmp .L4
 212               	.Lscope3:
 214               		.stabd	78,0,0
 216               	.global	nrk_init
 218               	nrk_init:
 219               		.stabd	46,0,0
  61:../../../src/kernel/source/nrk.c **** while(1);
  62:../../../src/kernel/source/nrk.c **** }
  63:../../../src/kernel/source/nrk.c **** 
  64:../../../src/kernel/source/nrk.c **** /**
  65:../../../src/kernel/source/nrk.c ****  *  nrk_init();
  66:../../../src/kernel/source/nrk.c ****  * *  - Init TCBlist - linked list of empty TCBs
  67:../../../src/kernel/source/nrk.c ****  *  - Init global variables
  68:../../../src/kernel/source/nrk.c ****  *  - Init event list
  69:../../../src/kernel/source/nrk.c ****  *  - Create idle task
  70:../../../src/kernel/source/nrk.c ****  */
  71:../../../src/kernel/source/nrk.c **** void nrk_init()
  72:../../../src/kernel/source/nrk.c **** {
 221               	.LM8:
 222               	.LFBB4:
 223 000e 0F93      		push r16
 224 0010 1F93      		push r17
 225 0012 DF93      		push r29
 226 0014 CF93      		push r28
 227 0016 CDB7      		in r28,__SP_L__
 228 0018 DEB7      		in r29,__SP_H__
 229 001a A397      		sbiw r28,35
 230 001c 0FB6      		in __tmp_reg__,__SREG__
 231 001e F894      		cli
 232 0020 DEBF      		out __SP_H__,r29
 233 0022 0FBE      		out __SREG__,__tmp_reg__
 234 0024 CDBF      		out __SP_L__,r28
 235               	/* prologue: function */
 236               	/* frame size = 35 */
 237               	/* stack size = 39 */
 238               	.L__stack_usage = 39
  73:../../../src/kernel/source/nrk.c **** 	
  74:../../../src/kernel/source/nrk.c ****     uint8_t i;	
  75:../../../src/kernel/source/nrk.c **** //    unsigned char *stkc;
  76:../../../src/kernel/source/nrk.c **** 	
  77:../../../src/kernel/source/nrk.c ****    nrk_task_type IdleTask;
  78:../../../src/kernel/source/nrk.c ****    nrk_wakeup_signal = nrk_signal_create();
 240               	.LM9:
 241 0026 0E94 0000 		call nrk_signal_create
 242 002a 8093 0000 		sts nrk_wakeup_signal,r24
  79:../../../src/kernel/source/nrk.c ****    if(nrk_wakeup_signal==NRK_ERROR) nrk_kernel_error_add(NRK_SIGNAL_CREATE_ERROR,0);
 244               	.LM10:
 245 002e 8F3F      		cpi r24,lo8(-1)
 246 0030 01F4      		brne .L6
 248               	.LM11:
 249 0032 8EE0      		ldi r24,lo8(14)
 250 0034 60E0      		ldi r22,lo8(0)
 251 0036 0E94 0000 		call nrk_kernel_error_add
 252               	.L6:
  80:../../../src/kernel/source/nrk.c ****    //if((volatile)TCCR1B!=0) nrk_kernel_error_add(NRK_STACK_OVERFLOW,0); 
  81:../../../src/kernel/source/nrk.c **** #ifndef NRK_SOFT_REBOOT_ON_ERROR
  82:../../../src/kernel/source/nrk.c ****    i=_nrk_startup_error();
 254               	.LM12:
 255 003a 0E94 0000 		call _nrk_startup_error
  83:../../../src/kernel/source/nrk.c **** //   if((i&0x1)!=0) nrk_kernel_error_add(NRK_BAD_STARTUP,0);
  84:../../../src/kernel/source/nrk.c **** #ifndef IGNORE_EXT_RST_ERROR
  85:../../../src/kernel/source/nrk.c ****    if((i&0x2)!=0) nrk_kernel_error_add(NRK_EXT_RST_ERROR,0);
  86:../../../src/kernel/source/nrk.c **** #endif
  87:../../../src/kernel/source/nrk.c **** #ifndef IGNORE_BROWN_OUT_ERROR
  88:../../../src/kernel/source/nrk.c ****    if((i&0x4)!=0) nrk_kernel_error_add(NRK_BOD_ERROR,0);
  89:../../../src/kernel/source/nrk.c **** #endif
  90:../../../src/kernel/source/nrk.c ****    //if((i&0x8)!=0) nrk_kernel_error_add(NRK_BAD_STARTUP,0);
  91:../../../src/kernel/source/nrk.c **** 
  92:../../../src/kernel/source/nrk.c ****    //if(_nrk_startup_ok()==0) nrk_kernel_error_add(NRK_BAD_STARTUP,0); 
  93:../../../src/kernel/source/nrk.c **** #endif
  94:../../../src/kernel/source/nrk.c **** 
  95:../../../src/kernel/source/nrk.c ****    #ifdef NRK_STARTUP_VOLTAGE_CHECK
  96:../../../src/kernel/source/nrk.c ****    	if(nrk_voltage_status()==0) nrk_kernel_error_add(NRK_LOW_VOLTAGE,0);
  97:../../../src/kernel/source/nrk.c ****    #endif
  98:../../../src/kernel/source/nrk.c **** 
  99:../../../src/kernel/source/nrk.c **** 
 100:../../../src/kernel/source/nrk.c **** 
 101:../../../src/kernel/source/nrk.c **** 
 102:../../../src/kernel/source/nrk.c ****    #ifdef NRK_REBOOT_ON_ERROR
 103:../../../src/kernel/source/nrk.c ****    #ifndef NRK_WATCHDOG
 104:../../../src/kernel/source/nrk.c ****    while(1)
 105:../../../src/kernel/source/nrk.c **** 	   {
 106:../../../src/kernel/source/nrk.c **** 		nrk_kprintf( PSTR("KERNEL CONFIG CONFLICT:  NRK_REBOOT_ON_ERROR needs watchdog!\r\n") );
 107:../../../src/kernel/source/nrk.c ****     		for (i = 0; i < 100; i++)
 108:../../../src/kernel/source/nrk.c ****       			nrk_spin_wait_us (1000);
 109:../../../src/kernel/source/nrk.c **** 	   }
 110:../../../src/kernel/source/nrk.c ****    #endif
 111:../../../src/kernel/source/nrk.c ****    #endif
 112:../../../src/kernel/source/nrk.c **** 
 113:../../../src/kernel/source/nrk.c ****    #ifdef NRK_WATCHDOG
 114:../../../src/kernel/source/nrk.c ****     if(nrk_watchdog_check()==NRK_ERROR) 
 257               	.LM13:
 258 003e 0E94 0000 		call nrk_watchdog_check
 259 0042 8F3F      		cpi r24,lo8(-1)
 260 0044 01F4      		brne .L7
 115:../../../src/kernel/source/nrk.c **** 	{
 116:../../../src/kernel/source/nrk.c ****     	nrk_watchdog_disable();
 262               	.LM14:
 263 0046 0E94 0000 		call nrk_watchdog_disable
 117:../../../src/kernel/source/nrk.c **** 	nrk_kernel_error_add(NRK_WATCHDOG_ERROR,0);
 265               	.LM15:
 266 004a 80E1      		ldi r24,lo8(16)
 267 004c 60E0      		ldi r22,lo8(0)
 268 004e 0E94 0000 		call nrk_kernel_error_add
 269               	.L7:
 118:../../../src/kernel/source/nrk.c **** 	}
 119:../../../src/kernel/source/nrk.c ****     nrk_watchdog_enable();
 271               	.LM16:
 272 0052 0E94 0000 		call nrk_watchdog_enable
 120:../../../src/kernel/source/nrk.c ****     #endif
 121:../../../src/kernel/source/nrk.c ****   
 122:../../../src/kernel/source/nrk.c ****   // nrk_stack_pointer_init(); 
 123:../../../src/kernel/source/nrk.c **** /* 
 124:../../../src/kernel/source/nrk.c ****     #ifdef KERNEL_STK_ARRAY
 125:../../../src/kernel/source/nrk.c **** 	stkc = (uint16_t*)&nrk_kernel_stk[NRK_KERNEL_STACKSIZE-1];
 126:../../../src/kernel/source/nrk.c **** 	nrk_kernel_stk[0]=STK_CANARY_VAL;
 127:../../../src/kernel/source/nrk.c ****     	nrk_kernel_stk_ptr = &nrk_kernel_stk[NRK_KERNEL_STACKSIZE-1];
 128:../../../src/kernel/source/nrk.c ****     #else
 129:../../../src/kernel/source/nrk.c ****     	stkc = NRK_KERNEL_STK_TOP-NRK_KERNEL_STACKSIZE;
 130:../../../src/kernel/source/nrk.c ****     	*stkc = STK_CANARY_VAL;
 131:../../../src/kernel/source/nrk.c ****     	stkc = NRK_KERNEL_STK_TOP;
 132:../../../src/kernel/source/nrk.c **** 	nrk_kernel_stk_ptr = NRK_KERNEL_STK_TOP;
 133:../../../src/kernel/source/nrk.c ****     #endif
 134:../../../src/kernel/source/nrk.c ****     *stkc++ = (uint16_t)((uint16_t)_nrk_timer_tick>>8);
 135:../../../src/kernel/source/nrk.c ****     *stkc = (uint16_t)((uint16_t)_nrk_timer_tick&0xFF); 
 136:../../../src/kernel/source/nrk.c **** */	
 137:../../../src/kernel/source/nrk.c ****  
 138:../../../src/kernel/source/nrk.c ****    // printf( "Init kernel_entry= %d %d\n",kernel_entry[1], kernel_entry[0] );
 139:../../../src/kernel/source/nrk.c **** 
 140:../../../src/kernel/source/nrk.c ****     
 141:../../../src/kernel/source/nrk.c ****     nrk_cur_task_prio = 0;
 274               	.LM17:
 275 0056 1092 0000 		sts nrk_cur_task_prio,__zero_reg__
 142:../../../src/kernel/source/nrk.c ****     nrk_cur_task_TCB = NULL;
 277               	.LM18:
 278 005a 1092 0000 		sts nrk_cur_task_TCB+1,__zero_reg__
 279 005e 1092 0000 		sts nrk_cur_task_TCB,__zero_reg__
 143:../../../src/kernel/source/nrk.c ****     
 144:../../../src/kernel/source/nrk.c ****     nrk_high_ready_TCB = NULL;
 281               	.LM19:
 282 0062 1092 0000 		sts nrk_high_ready_TCB+1,__zero_reg__
 283 0066 1092 0000 		sts nrk_high_ready_TCB,__zero_reg__
 145:../../../src/kernel/source/nrk.c ****     nrk_high_ready_prio = 0; 
 285               	.LM20:
 286 006a 1092 0000 		sts nrk_high_ready_prio,__zero_reg__
 146:../../../src/kernel/source/nrk.c **** 
 147:../../../src/kernel/source/nrk.c ****    #ifdef NRK_STATS_TRACKER
 148:../../../src/kernel/source/nrk.c **** 	nrk_stats_reset();
 288               	.LM21:
 289 006e 0E94 0000 		call nrk_stats_reset
 149:../../../src/kernel/source/nrk.c ****    #endif
 150:../../../src/kernel/source/nrk.c **** 
 151:../../../src/kernel/source/nrk.c ****     #ifdef NRK_MAX_RESERVES 
 152:../../../src/kernel/source/nrk.c ****     // Setup the reserve structures
 153:../../../src/kernel/source/nrk.c ****     _nrk_reserve_init();
 154:../../../src/kernel/source/nrk.c ****     #endif
 155:../../../src/kernel/source/nrk.c **** 
 156:../../../src/kernel/source/nrk.c ****     _nrk_resource_cnt=0; //NRK_MAX_RESOURCE_CNT;
 291               	.LM22:
 292 0072 1092 0000 		sts _nrk_resource_cnt,__zero_reg__
 157:../../../src/kernel/source/nrk.c **** 
 158:../../../src/kernel/source/nrk.c **** for(i=0;i<NRK_MAX_RESOURCE_CNT;i++)
 159:../../../src/kernel/source/nrk.c **** {
 160:../../../src/kernel/source/nrk.c ****     nrk_sem_list[i].count=-1;
 294               	.LM23:
 295 0076 8FEF      		ldi r24,lo8(-1)
 296 0078 8093 0000 		sts nrk_sem_list,r24
 161:../../../src/kernel/source/nrk.c ****     nrk_sem_list[i].value=-1;
 298               	.LM24:
 299 007c 8093 0000 		sts nrk_sem_list+2,r24
 162:../../../src/kernel/source/nrk.c ****     nrk_sem_list[i].resource_ceiling=-1;
 301               	.LM25:
 302 0080 8093 0000 		sts nrk_sem_list+1,r24
 163:../../../src/kernel/source/nrk.c ****     //nrk_resource_count[i]=-1;
 164:../../../src/kernel/source/nrk.c ****     //nrk_resource_value[i]=-1;
 165:../../../src/kernel/source/nrk.c ****     //nrk_resource_ceiling[i]=-1;
 166:../../../src/kernel/source/nrk.c ****     
 167:../../../src/kernel/source/nrk.c **** }        
 168:../../../src/kernel/source/nrk.c ****     for (i= 0; i<NRK_MAX_TASKS; i++)
 169:../../../src/kernel/source/nrk.c **** 	{
 170:../../../src/kernel/source/nrk.c ****         nrk_task_TCB[i].task_prio = TCB_EMPTY_PRIO;
 304               	.LM26:
 305 0084 93E6      		ldi r25,lo8(99)
 306 0086 9093 0000 		sts nrk_task_TCB+10,r25
 171:../../../src/kernel/source/nrk.c ****         nrk_task_TCB[i].task_ID = -1; 
 308               	.LM27:
 309 008a 8093 0000 		sts nrk_task_TCB+8,r24
 170:../../../src/kernel/source/nrk.c ****         nrk_task_TCB[i].task_prio = TCB_EMPTY_PRIO;
 311               	.LM28:
 312 008e 9093 0000 		sts nrk_task_TCB+43,r25
 314               	.LM29:
 315 0092 8093 0000 		sts nrk_task_TCB+41,r24
 170:../../../src/kernel/source/nrk.c ****         nrk_task_TCB[i].task_prio = TCB_EMPTY_PRIO;
 317               	.LM30:
 318 0096 9093 0000 		sts nrk_task_TCB+76,r25
 320               	.LM31:
 321 009a 8093 0000 		sts nrk_task_TCB+74,r24
 170:../../../src/kernel/source/nrk.c ****         nrk_task_TCB[i].task_prio = TCB_EMPTY_PRIO;
 323               	.LM32:
 324 009e 9093 0000 		sts nrk_task_TCB+109,r25
 326               	.LM33:
 327 00a2 8093 0000 		sts nrk_task_TCB+107,r24
 170:../../../src/kernel/source/nrk.c ****         nrk_task_TCB[i].task_prio = TCB_EMPTY_PRIO;
 329               	.LM34:
 330 00a6 9093 0000 		sts nrk_task_TCB+142,r25
 332               	.LM35:
 333 00aa 8093 0000 		sts nrk_task_TCB+140,r24
 334 00ae E0E0      		ldi r30,lo8(_nrk_readyQ+3)
 335 00b0 F0E0      		ldi r31,hi8(_nrk_readyQ+3)
 336 00b2 20E0      		ldi r18,lo8(0)
 337 00b4 30E0      		ldi r19,hi8(0)
 338 00b6 00C0      		rjmp .L8
 339               	.L9:
 172:../../../src/kernel/source/nrk.c ****         }
 173:../../../src/kernel/source/nrk.c ****   
 174:../../../src/kernel/source/nrk.c ****        
 175:../../../src/kernel/source/nrk.c ****     // Setup a double linked list of Ready Tasks 
 176:../../../src/kernel/source/nrk.c ****     for (i=0;i<NRK_MAX_TASKS;i++)
 341               	.LM36:
 342 00b8 9A01      		movw r18,r20
 343               	.L8:
 171:../../../src/kernel/source/nrk.c ****         nrk_task_TCB[i].task_ID = -1; 
 345               	.LM37:
 346 00ba A901      		movw r20,r18
 347 00bc 4F5F      		subi r20,lo8(-(1))
 348 00be 5F4F      		sbci r21,hi8(-(1))
 177:../../../src/kernel/source/nrk.c **** 	{
 178:../../../src/kernel/source/nrk.c **** 		_nrk_readyQ[i].Next	=	&_nrk_readyQ[i+1];
 350               	.LM38:
 351 00c0 CA01      		movw r24,r20
 352 00c2 880F      		lsl r24
 353 00c4 991F      		rol r25
 354 00c6 880F      		lsl r24
 355 00c8 991F      		rol r25
 356 00ca 840F      		add r24,r20
 357 00cc 951F      		adc r25,r21
 358 00ce 8050      		subi r24,lo8(-(_nrk_readyQ))
 359 00d0 9040      		sbci r25,hi8(-(_nrk_readyQ))
 360 00d2 9183      		std Z+1,r25
 361 00d4 8083      		st Z,r24
 179:../../../src/kernel/source/nrk.c **** 		_nrk_readyQ[i+1].Prev	=	&_nrk_readyQ[i];
 363               	.LM39:
 364 00d6 C901      		movw r24,r18
 365 00d8 880F      		lsl r24
 366 00da 991F      		rol r25
 367 00dc 880F      		lsl r24
 368 00de 991F      		rol r25
 369 00e0 820F      		add r24,r18
 370 00e2 931F      		adc r25,r19
 371 00e4 8050      		subi r24,lo8(-(_nrk_readyQ))
 372 00e6 9040      		sbci r25,hi8(-(_nrk_readyQ))
 373 00e8 9483      		std Z+4,r25
 374 00ea 8383      		std Z+3,r24
 375 00ec 3596      		adiw r30,5
 176:../../../src/kernel/source/nrk.c ****     for (i=0;i<NRK_MAX_TASKS;i++)
 377               	.LM40:
 378 00ee 4530      		cpi r20,5
 379 00f0 5105      		cpc r21,__zero_reg__
 380 00f2 01F4      		brne .L9
 180:../../../src/kernel/source/nrk.c **** 	}
 181:../../../src/kernel/source/nrk.c **** 	
 182:../../../src/kernel/source/nrk.c **** 	_nrk_readyQ[0].Prev	=	NULL;
 382               	.LM41:
 383 00f4 1092 0000 		sts _nrk_readyQ+1+1,__zero_reg__
 384 00f8 1092 0000 		sts _nrk_readyQ+1,__zero_reg__
 183:../../../src/kernel/source/nrk.c **** 	_nrk_readyQ[NRK_MAX_TASKS].Next	=	NULL;
 386               	.LM42:
 387 00fc 1092 0000 		sts _nrk_readyQ+28+1,__zero_reg__
 388 0100 1092 0000 		sts _nrk_readyQ+28,__zero_reg__
 184:../../../src/kernel/source/nrk.c **** 	_head_node = NULL;
 390               	.LM43:
 391 0104 1092 0000 		sts _head_node+1,__zero_reg__
 392 0108 1092 0000 		sts _head_node,__zero_reg__
 185:../../../src/kernel/source/nrk.c **** 	_free_node = &_nrk_readyQ[0];
 394               	.LM44:
 395 010c 80E0      		ldi r24,lo8(_nrk_readyQ)
 396 010e 90E0      		ldi r25,hi8(_nrk_readyQ)
 397 0110 9093 0000 		sts _free_node+1,r25
 398 0114 8093 0000 		sts _free_node,r24
 186:../../../src/kernel/source/nrk.c **** 	
 187:../../../src/kernel/source/nrk.c **** 	
 188:../../../src/kernel/source/nrk.c **** 	
 189:../../../src/kernel/source/nrk.c **** 
 190:../../../src/kernel/source/nrk.c **** 	nrk_task_set_entry_function( &IdleTask, nrk_idle_task);
 400               	.LM45:
 401 0118 8E01      		movw r16,r28
 402 011a 0F5F      		subi r16,lo8(-(1))
 403 011c 1F4F      		sbci r17,hi8(-(1))
 404 011e C801      		movw r24,r16
 405 0120 60E0      		ldi r22,lo8(gs(nrk_idle_task))
 406 0122 70E0      		ldi r23,hi8(gs(nrk_idle_task))
 407 0124 0E94 0000 		call nrk_task_set_entry_function
 191:../../../src/kernel/source/nrk.c **** 	nrk_task_set_stk( &IdleTask, nrk_idle_task_stk, NRK_TASK_IDLE_STK_SIZE);
 409               	.LM46:
 410 0128 C801      		movw r24,r16
 411 012a 60E0      		ldi r22,lo8(nrk_idle_task_stk)
 412 012c 70E0      		ldi r23,hi8(nrk_idle_task_stk)
 413 012e 40E8      		ldi r20,lo8(128)
 414 0130 50E0      		ldi r21,hi8(128)
 415 0132 0E94 0000 		call nrk_task_set_stk
 192:../../../src/kernel/source/nrk.c **** 	nrk_idle_task_stk[0]=STK_CANARY_VAL;	
 417               	.LM47:
 418 0136 85E5      		ldi r24,lo8(85)
 419 0138 8093 0000 		sts nrk_idle_task_stk,r24
 193:../../../src/kernel/source/nrk.c **** 	//IdleTask.task_ID = NRK_IDLE_TASK_ID;
 194:../../../src/kernel/source/nrk.c **** 	IdleTask.prio = 0;
 421               	.LM48:
 422 013c 1986      		std Y+9,__zero_reg__
 195:../../../src/kernel/source/nrk.c **** 	IdleTask.period.secs = 0;
 424               	.LM49:
 425 013e 1C86      		std Y+12,__zero_reg__
 426 0140 1D86      		std Y+13,__zero_reg__
 427 0142 1E86      		std Y+14,__zero_reg__
 428 0144 1F86      		std Y+15,__zero_reg__
 196:../../../src/kernel/source/nrk.c **** 	IdleTask.period.nano_secs = 0;
 430               	.LM50:
 431 0146 188A      		std Y+16,__zero_reg__
 432 0148 198A      		std Y+17,__zero_reg__
 433 014a 1A8A      		std Y+18,__zero_reg__
 434 014c 1B8A      		std Y+19,__zero_reg__
 197:../../../src/kernel/source/nrk.c **** 	IdleTask.cpu_reserve.secs = 0;
 436               	.LM51:
 437 014e 1C8A      		std Y+20,__zero_reg__
 438 0150 1D8A      		std Y+21,__zero_reg__
 439 0152 1E8A      		std Y+22,__zero_reg__
 440 0154 1F8A      		std Y+23,__zero_reg__
 198:../../../src/kernel/source/nrk.c **** 	IdleTask.cpu_reserve.nano_secs = 0;
 442               	.LM52:
 443 0156 188E      		std Y+24,__zero_reg__
 444 0158 198E      		std Y+25,__zero_reg__
 445 015a 1A8E      		std Y+26,__zero_reg__
 446 015c 1B8E      		std Y+27,__zero_reg__
 199:../../../src/kernel/source/nrk.c **** 	IdleTask.offset.secs = 0;
 448               	.LM53:
 449 015e 1C8E      		std Y+28,__zero_reg__
 450 0160 1D8E      		std Y+29,__zero_reg__
 451 0162 1E8E      		std Y+30,__zero_reg__
 452 0164 1F8E      		std Y+31,__zero_reg__
 200:../../../src/kernel/source/nrk.c **** 	IdleTask.offset.nano_secs = 0;
 454               	.LM54:
 455 0166 18A2      		std Y+32,__zero_reg__
 456 0168 19A2      		std Y+33,__zero_reg__
 457 016a 1AA2      		std Y+34,__zero_reg__
 458 016c 1BA2      		std Y+35,__zero_reg__
 201:../../../src/kernel/source/nrk.c **** 	IdleTask.FirstActivation = TRUE;
 460               	.LM55:
 461 016e 81E0      		ldi r24,lo8(1)
 462 0170 8887      		std Y+8,r24
 202:../../../src/kernel/source/nrk.c **** 	IdleTask.Type = IDLE_TASK;
 464               	.LM56:
 465 0172 92E0      		ldi r25,lo8(2)
 466 0174 9A87      		std Y+10,r25
 203:../../../src/kernel/source/nrk.c **** 	IdleTask.SchType = PREEMPTIVE;
 468               	.LM57:
 469 0176 8B87      		std Y+11,r24
 204:../../../src/kernel/source/nrk.c **** 	nrk_activate_task(&IdleTask);
 471               	.LM58:
 472 0178 C801      		movw r24,r16
 473 017a 0E94 0000 		call nrk_activate_task
 474               	/* epilogue start */
 205:../../../src/kernel/source/nrk.c **** 	
 206:../../../src/kernel/source/nrk.c **** }
 476               	.LM59:
 477 017e A396      		adiw r28,35
 478 0180 0FB6      		in __tmp_reg__,__SREG__
 479 0182 F894      		cli
 480 0184 DEBF      		out __SP_H__,r29
 481 0186 0FBE      		out __SREG__,__tmp_reg__
 482 0188 CDBF      		out __SP_L__,r28
 483 018a CF91      		pop r28
 484 018c DF91      		pop r29
 485 018e 1F91      		pop r17
 486 0190 0F91      		pop r16
 487 0192 0895      		ret
 492               	.Lscope4:
 494               		.stabd	78,0,0
 496               	.global	nrk_start
 498               	nrk_start:
 499               		.stabd	46,0,0
 207:../../../src/kernel/source/nrk.c **** 
 208:../../../src/kernel/source/nrk.c **** 
 209:../../../src/kernel/source/nrk.c **** 
 210:../../../src/kernel/source/nrk.c **** 
 211:../../../src/kernel/source/nrk.c **** 
 212:../../../src/kernel/source/nrk.c **** 
 213:../../../src/kernel/source/nrk.c **** 
 214:../../../src/kernel/source/nrk.c **** 
 215:../../../src/kernel/source/nrk.c **** void nrk_start (void)
 216:../../../src/kernel/source/nrk.c **** {
 501               	.LM60:
 502               	.LFBB5:
 503 0194 CF92      		push r12
 504 0196 DF92      		push r13
 505 0198 FF92      		push r15
 506 019a 0F93      		push r16
 507 019c 1F93      		push r17
 508 019e DF93      		push r29
 509 01a0 CF93      		push r28
 510 01a2 00D0      		rcall .
 511 01a4 CDB7      		in r28,__SP_L__
 512 01a6 DEB7      		in r29,__SP_H__
 513               	/* prologue: function */
 514               	/* frame size = 2 */
 515               	/* stack size = 9 */
 516               	.L__stack_usage = 9
 217:../../../src/kernel/source/nrk.c **** 	int8_t task_ID;
 218:../../../src/kernel/source/nrk.c **** 	uint8_t i,j;
 219:../../../src/kernel/source/nrk.c **** //	NRK_STK *x;
 220:../../../src/kernel/source/nrk.c **** //	unsigned char *stkc;
 221:../../../src/kernel/source/nrk.c **** 
 222:../../../src/kernel/source/nrk.c **** 	/*
 223:../../../src/kernel/source/nrk.c **** 		- Get highest priority task from rdy list
 224:../../../src/kernel/source/nrk.c **** 		- set cur prio and start the task 
 225:../../../src/kernel/source/nrk.c **** 	*/
 226:../../../src/kernel/source/nrk.c ****     // Check to make sure all tasks unique
 227:../../../src/kernel/source/nrk.c ****     for(i=0; i<NRK_MAX_TASKS; i++ )
 228:../../../src/kernel/source/nrk.c ****     {
 229:../../../src/kernel/source/nrk.c **** 	task_ID = nrk_task_TCB[i].task_ID;
 230:../../../src/kernel/source/nrk.c **** 	// only check activated tasks
 231:../../../src/kernel/source/nrk.c **** 	if(task_ID!=-1)
 518               	.LM61:
 519 01a8 B0E0      		ldi r27,lo8(nrk_task_TCB+8)
 520 01aa CB2E      		mov r12,r27
 521 01ac B0E0      		ldi r27,hi8(nrk_task_TCB+8)
 522 01ae DB2E      		mov r13,r27
 227:../../../src/kernel/source/nrk.c ****     for(i=0; i<NRK_MAX_TASKS; i++ )
 524               	.LM62:
 525 01b0 90E0      		ldi r25,lo8(0)
 526               	.L14:
 229:../../../src/kernel/source/nrk.c **** 	task_ID = nrk_task_TCB[i].task_ID;
 528               	.LM63:
 529 01b2 F601      		movw r30,r12
 530 01b4 F080      		ld r15,Z
 532               	.LM64:
 533 01b6 FF2D      		mov r31,r15
 534 01b8 FF3F      		cpi r31,lo8(-1)
 535 01ba 01F0      		breq .L11
 536 01bc 00E0      		ldi r16,lo8(nrk_task_TCB+8)
 537 01be 10E0      		ldi r17,hi8(nrk_task_TCB+8)
 538 01c0 20E0      		ldi r18,lo8(0)
 539               	.L13:
 232:../../../src/kernel/source/nrk.c **** 	{
 233:../../../src/kernel/source/nrk.c ****     		for(j=0; j<NRK_MAX_TASKS; j++ )
 234:../../../src/kernel/source/nrk.c **** 		{
 235:../../../src/kernel/source/nrk.c **** 			if(i!=j && task_ID==nrk_task_TCB[j].task_ID)
 541               	.LM65:
 542 01c2 9217      		cp r25,r18
 543 01c4 01F0      		breq .L12
 545               	.LM66:
 546 01c6 F801      		movw r30,r16
 547 01c8 8081      		ld r24,Z
 548 01ca F816      		cp r15,r24
 549 01cc 01F4      		brne .L12
 236:../../../src/kernel/source/nrk.c **** 			{
 237:../../../src/kernel/source/nrk.c **** 			nrk_kernel_error_add(NRK_DUP_TASK_ID,task_ID);
 551               	.LM67:
 552 01ce 85E0      		ldi r24,lo8(5)
 553 01d0 6F2D      		mov r22,r15
 554 01d2 2983      		std Y+1,r18
 555 01d4 9A83      		std Y+2,r25
 556 01d6 0E94 0000 		call nrk_kernel_error_add
 557 01da 9A81      		ldd r25,Y+2
 558 01dc 2981      		ldd r18,Y+1
 559               	.L12:
 233:../../../src/kernel/source/nrk.c ****     		for(j=0; j<NRK_MAX_TASKS; j++ )
 561               	.LM68:
 562 01de 2F5F      		subi r18,lo8(-(1))
 563 01e0 0F5D      		subi r16,lo8(-(33))
 564 01e2 1F4F      		sbci r17,hi8(-(33))
 565 01e4 2530      		cpi r18,lo8(5)
 566 01e6 01F4      		brne .L13
 567               	.L11:
 227:../../../src/kernel/source/nrk.c ****     for(i=0; i<NRK_MAX_TASKS; i++ )
 569               	.LM69:
 570 01e8 9F5F      		subi r25,lo8(-(1))
 571 01ea 21E2      		ldi r18,lo8(33)
 572 01ec 30E0      		ldi r19,hi8(33)
 573 01ee C20E      		add r12,r18
 574 01f0 D31E      		adc r13,r19
 575 01f2 9530      		cpi r25,lo8(5)
 576 01f4 01F4      		brne .L14
 238:../../../src/kernel/source/nrk.c **** 
 239:../../../src/kernel/source/nrk.c **** 			}
 240:../../../src/kernel/source/nrk.c **** 		}
 241:../../../src/kernel/source/nrk.c **** 	}
 242:../../../src/kernel/source/nrk.c **** 
 243:../../../src/kernel/source/nrk.c ****     }
 244:../../../src/kernel/source/nrk.c **** 
 245:../../../src/kernel/source/nrk.c ****     task_ID = nrk_get_high_ready_task_ID();	
 578               	.LM70:
 579 01f6 0E94 0000 		call nrk_get_high_ready_task_ID
 246:../../../src/kernel/source/nrk.c ****     nrk_high_ready_prio = nrk_task_TCB[task_ID].task_prio;
 581               	.LM71:
 582 01fa 9927      		clr r25
 583 01fc 87FD      		sbrc r24,7
 584 01fe 9095      		com r25
 585 0200 FC01      		movw r30,r24
 586 0202 A5E0      		ldi r26,5
 587 0204 EE0F      	1:	lsl r30
 588 0206 FF1F      		rol r31
 589 0208 AA95      		dec r26
 590 020a 01F4      		brne 1b
 591 020c E80F      		add r30,r24
 592 020e F91F      		adc r31,r25
 593 0210 E050      		subi r30,lo8(-(nrk_task_TCB))
 594 0212 F040      		sbci r31,hi8(-(nrk_task_TCB))
 595 0214 8285      		ldd r24,Z+10
 596 0216 8093 0000 		sts nrk_high_ready_prio,r24
 247:../../../src/kernel/source/nrk.c ****     nrk_high_ready_TCB = nrk_cur_task_TCB = &nrk_task_TCB[task_ID];           
 598               	.LM72:
 599 021a F093 0000 		sts nrk_cur_task_TCB+1,r31
 600 021e E093 0000 		sts nrk_cur_task_TCB,r30
 601 0222 F093 0000 		sts nrk_high_ready_TCB+1,r31
 602 0226 E093 0000 		sts nrk_high_ready_TCB,r30
 248:../../../src/kernel/source/nrk.c ****     nrk_cur_task_prio = nrk_high_ready_prio;
 604               	.LM73:
 605 022a 8093 0000 		sts nrk_cur_task_prio,r24
 249:../../../src/kernel/source/nrk.c **** 		
 250:../../../src/kernel/source/nrk.c **** //    nrk_stack_pointer_restore();
 251:../../../src/kernel/source/nrk.c **** 
 252:../../../src/kernel/source/nrk.c ****     /*
 253:../../../src/kernel/source/nrk.c ****     #ifdef KERNEL_STK_ARRAY
 254:../../../src/kernel/source/nrk.c ****      	stkc = (uint16_t*)&nrk_kernel_stk[NRK_KERNEL_STACKSIZE-1];
 255:../../../src/kernel/source/nrk.c ****     #else
 256:../../../src/kernel/source/nrk.c ****     	stkc = NRK_KERNEL_STK_TOP;
 257:../../../src/kernel/source/nrk.c ****     #endif
 258:../../../src/kernel/source/nrk.c ****     *stkc++ = (uint16_t)((uint16_t)_nrk_timer_tick>>8);
 259:../../../src/kernel/source/nrk.c ****     *stkc = (uint16_t)((uint16_t)_nrk_timer_tick&0xFF); 
 260:../../../src/kernel/source/nrk.c ****     
 261:../../../src/kernel/source/nrk.c ****     //TODO: this way on msp
 262:../../../src/kernel/source/nrk.c ****     // *stkc++ = (uint16_t)((uint16_t)_nrk_timer_tick&0xFF);
 263:../../../src/kernel/source/nrk.c ****     // *stkc = (uint16_t)((uint16_t)_nrk_timer_tick>>8); 
 264:../../../src/kernel/source/nrk.c **** */
 265:../../../src/kernel/source/nrk.c ****     nrk_target_start();
 607               	.LM74:
 608 022e 0E94 0000 		call nrk_target_start
 266:../../../src/kernel/source/nrk.c ****     nrk_stack_pointer_init(); 
 610               	.LM75:
 611 0232 0E94 0000 		call nrk_stack_pointer_init
 267:../../../src/kernel/source/nrk.c ****     nrk_start_high_ready_task();	
 613               	.LM76:
 614 0236 0E94 0000 		call nrk_start_high_ready_task
 615               	.L15:
 616 023a 00C0      		rjmp .L15
 622               	.Lscope5:
 624               		.stabd	78,0,0
 632               	.global	nrk_TCB_init
 634               	nrk_TCB_init:
 635               		.stabd	46,0,0
 268:../../../src/kernel/source/nrk.c **** 
 269:../../../src/kernel/source/nrk.c ****     // you should never get here    
 270:../../../src/kernel/source/nrk.c ****     while(1);
 271:../../../src/kernel/source/nrk.c **** }
 272:../../../src/kernel/source/nrk.c **** 
 273:../../../src/kernel/source/nrk.c **** 
 274:../../../src/kernel/source/nrk.c **** int8_t nrk_TCB_init (nrk_task_type *Task, NRK_STK *ptos, NRK_STK *pbos, uint16_t stk_size, void *pe
 275:../../../src/kernel/source/nrk.c **** {
 637               	.LM77:
 638               	.LFBB6:
 639 023c EF92      		push r14
 640 023e FF92      		push r15
 641 0240 0F93      		push r16
 642 0242 1F93      		push r17
 643 0244 CF93      		push r28
 644 0246 DF93      		push r29
 645               	/* prologue: function */
 646               	/* frame size = 0 */
 647               	/* stack size = 6 */
 648               	.L__stack_usage = 6
 649 0248 EC01      		movw r28,r24
 650 024a 7B01      		movw r14,r22
 651 024c 8A01      		movw r16,r20
 276:../../../src/kernel/source/nrk.c **** 	
 277:../../../src/kernel/source/nrk.c ****     //  Already in critical section so no needenter critical section
 278:../../../src/kernel/source/nrk.c ****     if(Task->Type!=IDLE_TASK)
 653               	.LM78:
 654 024e 8985      		ldd r24,Y+9
 655 0250 8230      		cpi r24,lo8(2)
 656 0252 01F0      		breq .L19
 279:../../../src/kernel/source/nrk.c ****     	Task->task_ID=nrk_task_init_cnt;
 658               	.LM79:
 659 0254 8091 0000 		lds r24,nrk_task_init_cnt
 660 0258 8883      		st Y,r24
 661 025a 00C0      		rjmp .L20
 662               	.L19:
 280:../../../src/kernel/source/nrk.c ****     else Task->task_ID=NRK_IDLE_TASK_ID;
 664               	.LM80:
 665 025c 1882      		st Y,__zero_reg__
 666               	.L20:
 281:../../../src/kernel/source/nrk.c **** 
 282:../../../src/kernel/source/nrk.c ****     if(nrk_task_init_cnt>=NRK_MAX_TASKS) nrk_kernel_error_add(NRK_EXTRA_TASK,0);
 668               	.LM81:
 669 025e 8091 0000 		lds r24,nrk_task_init_cnt
 670 0262 8530      		cpi r24,lo8(5)
 671 0264 00F0      		brlo .L21
 673               	.LM82:
 674 0266 87E0      		ldi r24,lo8(7)
 675 0268 60E0      		ldi r22,lo8(0)
 676 026a 0E94 0000 		call nrk_kernel_error_add
 677               	.L21:
 283:../../../src/kernel/source/nrk.c ****     if(Task->Type!=IDLE_TASK) nrk_task_init_cnt++; 
 679               	.LM83:
 680 026e 8985      		ldd r24,Y+9
 681 0270 8230      		cpi r24,lo8(2)
 682 0272 01F0      		breq .L22
 684               	.LM84:
 685 0274 8091 0000 		lds r24,nrk_task_init_cnt
 686 0278 8F5F      		subi r24,lo8(-(1))
 687 027a 8093 0000 		sts nrk_task_init_cnt,r24
 688               	.L22:
 284:../../../src/kernel/source/nrk.c ****     if(nrk_task_init_cnt==NRK_IDLE_TASK_ID) nrk_task_init_cnt++;
 690               	.LM85:
 691 027e 8091 0000 		lds r24,nrk_task_init_cnt
 692 0282 8823      		tst r24
 693 0284 01F4      		brne .L23
 695               	.LM86:
 696 0286 81E0      		ldi r24,lo8(1)
 697 0288 8093 0000 		sts nrk_task_init_cnt,r24
 698               	.L23:
 285:../../../src/kernel/source/nrk.c ****     //initialize member of TCB structure
 286:../../../src/kernel/source/nrk.c ****     nrk_task_TCB[Task->task_ID].OSTaskStkPtr = ptos;
 700               	.LM87:
 701 028c 8881      		ld r24,Y
 702 028e 9927      		clr r25
 703 0290 87FD      		sbrc r24,7
 704 0292 9095      		com r25
 705 0294 FC01      		movw r30,r24
 706 0296 A5E0      		ldi r26,5
 707 0298 EE0F      	1:	lsl r30
 708 029a FF1F      		rol r31
 709 029c AA95      		dec r26
 710 029e 01F4      		brne 1b
 711 02a0 E80F      		add r30,r24
 712 02a2 F91F      		adc r31,r25
 713 02a4 E050      		subi r30,lo8(-(nrk_task_TCB))
 714 02a6 F040      		sbci r31,hi8(-(nrk_task_TCB))
 715 02a8 F182      		std Z+1,r15
 716 02aa E082      		st Z,r14
 287:../../../src/kernel/source/nrk.c ****     nrk_task_TCB[Task->task_ID].task_prio = Task->prio;
 718               	.LM88:
 719 02ac 8885      		ldd r24,Y+8
 720 02ae 8287      		std Z+10,r24
 288:../../../src/kernel/source/nrk.c ****     nrk_task_TCB[Task->task_ID].task_state = SUSPENDED;
 722               	.LM89:
 723 02b0 8881      		ld r24,Y
 724 02b2 9927      		clr r25
 725 02b4 87FD      		sbrc r24,7
 726 02b6 9095      		com r25
 727 02b8 FC01      		movw r30,r24
 728 02ba 75E0      		ldi r23,5
 729 02bc EE0F      	1:	lsl r30
 730 02be FF1F      		rol r31
 731 02c0 7A95      		dec r23
 732 02c2 01F4      		brne 1b
 733 02c4 E80F      		add r30,r24
 734 02c6 F91F      		adc r31,r25
 735 02c8 E050      		subi r30,lo8(-(nrk_task_TCB))
 736 02ca F040      		sbci r31,hi8(-(nrk_task_TCB))
 737 02cc 83E0      		ldi r24,lo8(3)
 738 02ce 8187      		std Z+9,r24
 289:../../../src/kernel/source/nrk.c ****     
 290:../../../src/kernel/source/nrk.c ****     nrk_task_TCB[Task->task_ID].task_ID = Task->task_ID;
 740               	.LM90:
 741 02d0 2881      		ld r18,Y
 742 02d2 822F      		mov r24,r18
 743 02d4 9927      		clr r25
 744 02d6 87FD      		sbrc r24,7
 745 02d8 9095      		com r25
 746 02da FC01      		movw r30,r24
 747 02dc 65E0      		ldi r22,5
 748 02de EE0F      	1:	lsl r30
 749 02e0 FF1F      		rol r31
 750 02e2 6A95      		dec r22
 751 02e4 01F4      		brne 1b
 752 02e6 E80F      		add r30,r24
 753 02e8 F91F      		adc r31,r25
 754 02ea E050      		subi r30,lo8(-(nrk_task_TCB))
 755 02ec F040      		sbci r31,hi8(-(nrk_task_TCB))
 756 02ee 2087      		std Z+8,r18
 291:../../../src/kernel/source/nrk.c ****     nrk_task_TCB[Task->task_ID].suspend_flag = 0;
 758               	.LM91:
 759 02f0 8881      		ld r24,Y
 760 02f2 9927      		clr r25
 761 02f4 87FD      		sbrc r24,7
 762 02f6 9095      		com r25
 763 02f8 7C01      		movw r14,r24
 764 02fa 55E0      		ldi r21,5
 765 02fc EE0C      	1:	lsl r14
 766 02fe FF1C      		rol r15
 767 0300 5A95      		dec r21
 768 0302 01F4      		brne 1b
 769 0304 E80E      		add r14,r24
 770 0306 F91E      		adc r15,r25
 771 0308 80E0      		ldi r24,lo8(nrk_task_TCB)
 772 030a 90E0      		ldi r25,hi8(nrk_task_TCB)
 773 030c E80E      		add r14,r24
 774 030e F91E      		adc r15,r25
 775 0310 F701      		movw r30,r14
 776 0312 1582      		std Z+5,__zero_reg__
 292:../../../src/kernel/source/nrk.c ****     nrk_task_TCB[Task->task_ID].period= _nrk_time_to_ticks( &(Task->period) );
 778               	.LM92:
 779 0314 CE01      		movw r24,r28
 780 0316 0B96      		adiw r24,11
 781 0318 0E94 0000 		call _nrk_time_to_ticks
 782 031c F701      		movw r30,r14
 783 031e 948F      		std Z+28,r25
 784 0320 838F      		std Z+27,r24
 293:../../../src/kernel/source/nrk.c ****     if(Task->period.secs > 61) nrk_kernel_error_add(NRK_PERIOD_OVERFLOW,Task->task_ID);
 786               	.LM93:
 787 0322 8B85      		ldd r24,Y+11
 788 0324 9C85      		ldd r25,Y+12
 789 0326 AD85      		ldd r26,Y+13
 790 0328 BE85      		ldd r27,Y+14
 791 032a 8E33      		cpi r24,lo8(62)
 792 032c 9105      		cpc r25,__zero_reg__
 793 032e A105      		cpc r26,__zero_reg__
 794 0330 B105      		cpc r27,__zero_reg__
 795 0332 00F0      		brlo .L24
 797               	.LM94:
 798 0334 86E1      		ldi r24,lo8(22)
 799 0336 6881      		ld r22,Y
 800 0338 0E94 0000 		call nrk_kernel_error_add
 801               	.L24:
 294:../../../src/kernel/source/nrk.c ****     nrk_task_TCB[Task->task_ID].next_wakeup= _nrk_time_to_ticks( &(Task->offset));
 803               	.LM95:
 804 033c E880      		ld r14,Y
 805 033e FF24      		clr r15
 806 0340 E7FC      		sbrc r14,7
 807 0342 F094      		com r15
 808 0344 CE01      		movw r24,r28
 809 0346 4B96      		adiw r24,27
 810 0348 0E94 0000 		call _nrk_time_to_ticks
 811 034c F701      		movw r30,r14
 812 034e 45E0      		ldi r20,5
 813 0350 EE0F      	1:	lsl r30
 814 0352 FF1F      		rol r31
 815 0354 4A95      		dec r20
 816 0356 01F4      		brne 1b
 817 0358 EE0D      		add r30,r14
 818 035a FF1D      		adc r31,r15
 819 035c E050      		subi r30,lo8(-(nrk_task_TCB))
 820 035e F040      		sbci r31,hi8(-(nrk_task_TCB))
 821 0360 968B      		std Z+22,r25
 822 0362 858B      		std Z+21,r24
 295:../../../src/kernel/source/nrk.c ****     nrk_task_TCB[Task->task_ID].next_period= nrk_task_TCB[Task->task_ID].period+nrk_task_TCB[Task->
 824               	.LM96:
 825 0364 8881      		ld r24,Y
 826 0366 9927      		clr r25
 827 0368 87FD      		sbrc r24,7
 828 036a 9095      		com r25
 829 036c 7C01      		movw r14,r24
 830 036e 35E0      		ldi r19,5
 831 0370 EE0C      	1:	lsl r14
 832 0372 FF1C      		rol r15
 833 0374 3A95      		dec r19
 834 0376 01F4      		brne 1b
 835 0378 E80E      		add r14,r24
 836 037a F91E      		adc r15,r25
 837 037c 80E0      		ldi r24,lo8(nrk_task_TCB)
 838 037e 90E0      		ldi r25,hi8(nrk_task_TCB)
 839 0380 E80E      		add r14,r24
 840 0382 F91E      		adc r15,r25
 841 0384 F701      		movw r30,r14
 842 0386 8589      		ldd r24,Z+21
 843 0388 9689      		ldd r25,Z+22
 844 038a 238D      		ldd r18,Z+27
 845 038c 348D      		ldd r19,Z+28
 846 038e 820F      		add r24,r18
 847 0390 931F      		adc r25,r19
 848 0392 908F      		std Z+24,r25
 849 0394 878B      		std Z+23,r24
 296:../../../src/kernel/source/nrk.c ****     nrk_task_TCB[Task->task_ID].cpu_reserve= _nrk_time_to_ticks(&(Task->cpu_reserve));
 851               	.LM97:
 852 0396 CE01      		movw r24,r28
 853 0398 4396      		adiw r24,19
 854 039a 0E94 0000 		call _nrk_time_to_ticks
 855 039e F701      		movw r30,r14
 856 03a0 968F      		std Z+30,r25
 857 03a2 858F      		std Z+29,r24
 297:../../../src/kernel/source/nrk.c ****     nrk_task_TCB[Task->task_ID].cpu_remaining = nrk_task_TCB[Task->task_ID].cpu_reserve;
 859               	.LM98:
 860 03a4 8881      		ld r24,Y
 861 03a6 9927      		clr r25
 862 03a8 87FD      		sbrc r24,7
 863 03aa 9095      		com r25
 864 03ac FC01      		movw r30,r24
 865 03ae 25E0      		ldi r18,5
 866 03b0 EE0F      	1:	lsl r30
 867 03b2 FF1F      		rol r31
 868 03b4 2A95      		dec r18
 869 03b6 01F4      		brne 1b
 870 03b8 E80F      		add r30,r24
 871 03ba F91F      		adc r31,r25
 872 03bc E050      		subi r30,lo8(-(nrk_task_TCB))
 873 03be F040      		sbci r31,hi8(-(nrk_task_TCB))
 874 03c0 858D      		ldd r24,Z+29
 875 03c2 968D      		ldd r25,Z+30
 876 03c4 928F      		std Z+26,r25
 877 03c6 818F      		std Z+25,r24
 298:../../../src/kernel/source/nrk.c ****     nrk_task_TCB[Task->task_ID].num_periods = 1;
 879               	.LM99:
 880 03c8 81E0      		ldi r24,lo8(1)
 881 03ca 90E0      		ldi r25,hi8(1)
 882 03cc 90A3      		std Z+32,r25
 883 03ce 878F      		std Z+31,r24
 299:../../../src/kernel/source/nrk.c ****     nrk_task_TCB[Task->task_ID].OSTCBStkBottom = pbos;
 885               	.LM100:
 886 03d0 1383      		std Z+3,r17
 887 03d2 0283      		std Z+2,r16
 300:../../../src/kernel/source/nrk.c ****     nrk_task_TCB[Task->task_ID].errno= NRK_OK;
 889               	.LM101:
 890 03d4 81E0      		ldi r24,lo8(1)
 891 03d6 8487      		std Z+12,r24
 892               	/* epilogue start */
 301:../../../src/kernel/source/nrk.c ****  
 302:../../../src/kernel/source/nrk.c **** 	
 303:../../../src/kernel/source/nrk.c **** 	         
 304:../../../src/kernel/source/nrk.c **** 
 305:../../../src/kernel/source/nrk.c **** 			
 306:../../../src/kernel/source/nrk.c ****     return NRK_OK;
 307:../../../src/kernel/source/nrk.c **** 
 308:../../../src/kernel/source/nrk.c **** }
 894               	.LM102:
 895 03d8 DF91      		pop r29
 896 03da CF91      		pop r28
 897 03dc 1F91      		pop r17
 898 03de 0F91      		pop r16
 899 03e0 FF90      		pop r15
 900 03e2 EF90      		pop r14
 901 03e4 0895      		ret
 903               	.Lscope6:
 905               		.stabd	78,0,0
 907               	.global	_nrk_timer_tick
 909               	_nrk_timer_tick:
 910               		.stabd	46,0,0
 309:../../../src/kernel/source/nrk.c **** 
 310:../../../src/kernel/source/nrk.c **** 
 311:../../../src/kernel/source/nrk.c **** /*
 312:../../../src/kernel/source/nrk.c ****  * _nrk_timer_tick() 
 313:../../../src/kernel/source/nrk.c ****  *
 314:../../../src/kernel/source/nrk.c ****  * This function is called by the interrupt timer0.
 315:../../../src/kernel/source/nrk.c ****  * It calls the scheduler.
 316:../../../src/kernel/source/nrk.c ****  */
 317:../../../src/kernel/source/nrk.c **** void _nrk_timer_tick(void)
 318:../../../src/kernel/source/nrk.c **** {
 912               	.LM103:
 913               	.LFBB7:
 914               	/* prologue: function */
 915               	/* frame size = 0 */
 916               	/* stack size = 0 */
 917               	.L__stack_usage = 0
 319:../../../src/kernel/source/nrk.c **** 	// want to do something before the scheduler gets called? 
 320:../../../src/kernel/source/nrk.c **** 	// Go ahead and put it here...
 321:../../../src/kernel/source/nrk.c **** 
 322:../../../src/kernel/source/nrk.c **** 	_nrk_scheduler();
 919               	.LM104:
 920 03e6 0E94 0000 		call _nrk_scheduler
 921               	/* epilogue start */
 323:../../../src/kernel/source/nrk.c **** 
 324:../../../src/kernel/source/nrk.c ****   	return;
 325:../../../src/kernel/source/nrk.c **** }
 923               	.LM105:
 924 03ea 0895      		ret
 926               	.Lscope7:
 928               		.stabd	78,0,0
 930               	.global	nrk_version
 932               	nrk_version:
 933               		.stabd	46,0,0
 326:../../../src/kernel/source/nrk.c **** 
 327:../../../src/kernel/source/nrk.c **** 
 328:../../../src/kernel/source/nrk.c **** uint16_t nrk_version (void)
 329:../../../src/kernel/source/nrk.c **** {
 935               	.LM106:
 936               	.LFBB8:
 937               	/* prologue: function */
 938               	/* frame size = 0 */
 939               	/* stack size = 0 */
 940               	.L__stack_usage = 0
 330:../../../src/kernel/source/nrk.c ****     return (NRK_VERSION);
 331:../../../src/kernel/source/nrk.c **** }
 942               	.LM107:
 943 03ec 85E6      		ldi r24,lo8(101)
 944 03ee 90E0      		ldi r25,hi8(101)
 945               	/* epilogue start */
 946 03f0 0895      		ret
 948               	.Lscope8:
 950               		.stabd	78,0,0
 951               		.comm _nrk_signal_list,4,1
 952               		.comm nrk_idle_task_stk,128,1
 953               		.comm nrk_kernel_stk_ptr,2,1
 954               		.comm nrk_task_TCB,165,1
 955               		.comm nrk_wakeup_signal,1,1
 956               		.comm _nrk_readyQ,30,1
 957               		.comm _free_node,2,1
 958               		.comm _head_node,2,1
 959               		.comm nrk_cur_task_prio,1,1
 960               		.comm nrk_cur_task_TCB,2,1
 961               		.comm nrk_high_ready_prio,1,1
 962               		.comm nrk_high_ready_TCB,2,1
 963               		.comm _nrk_resource_cnt,1,1
 964               		.comm nrk_system_time,8,1
 965               		.comm nrk_sem_list,3,1
 966               		.comm _nrk_cpu_state,1,1
 967               		.comm next_next_wakeup,2,1
 968               		.comm error_task,1,1
 969               		.comm error_num,1,1
 970               		.comm sw_wdts,57,1
 971               		.comm cur_task_stats,150,1
 972               		.comm _nrk_stats_sleep_time,8,1
 973               		.comm nrk_task_init_cnt,1,1
 998               	.Letext0:
 999               	.global __do_clear_bss
DEFINED SYMBOLS
                            *ABS*:00000000 nrk.c
     /tmp/ccogtkOA.s:2      *ABS*:0000003f __SREG__
     /tmp/ccogtkOA.s:3      *ABS*:0000003e __SP_H__
     /tmp/ccogtkOA.s:4      *ABS*:0000003d __SP_L__
     /tmp/ccogtkOA.s:5      *ABS*:00000034 __CCP__
     /tmp/ccogtkOA.s:6      *ABS*:00000000 __tmp_reg__
     /tmp/ccogtkOA.s:7      *ABS*:00000001 __zero_reg__
     /tmp/ccogtkOA.s:141    .text:00000000 nrk_int_disable
     /tmp/ccogtkOA.s:169    .text:00000004 nrk_int_enable
     /tmp/ccogtkOA.s:197    .text:00000008 nrk_halt
     /tmp/ccogtkOA.s:218    .text:0000000e nrk_init
                            *COM*:00000001 nrk_wakeup_signal
                            *COM*:00000001 nrk_cur_task_prio
                            *COM*:00000002 nrk_cur_task_TCB
                            *COM*:00000002 nrk_high_ready_TCB
                            *COM*:00000001 nrk_high_ready_prio
                            *COM*:00000001 _nrk_resource_cnt
                            *COM*:00000003 nrk_sem_list
                            *COM*:000000a5 nrk_task_TCB
                            *COM*:0000001e _nrk_readyQ
                            *COM*:00000002 _head_node
                            *COM*:00000002 _free_node
                            *COM*:00000080 nrk_idle_task_stk
     /tmp/ccogtkOA.s:498    .text:00000194 nrk_start
     /tmp/ccogtkOA.s:634    .text:0000023c nrk_TCB_init
                            *COM*:00000001 nrk_task_init_cnt
     /tmp/ccogtkOA.s:909    .text:000003e6 _nrk_timer_tick
     /tmp/ccogtkOA.s:932    .text:000003ec nrk_version
                            *COM*:00000004 _nrk_signal_list
                            *COM*:00000002 nrk_kernel_stk_ptr
                            *COM*:00000008 nrk_system_time
                            *COM*:00000001 _nrk_cpu_state
                            *COM*:00000002 next_next_wakeup
                            *COM*:00000001 error_task
                            *COM*:00000001 error_num
                            *COM*:00000039 sw_wdts
                            *COM*:00000096 cur_task_stats
                            *COM*:00000008 _nrk_stats_sleep_time

UNDEFINED SYMBOLS
nrk_signal_create
nrk_kernel_error_add
_nrk_startup_error
nrk_watchdog_check
nrk_watchdog_disable
nrk_watchdog_enable
nrk_stats_reset
nrk_idle_task
nrk_task_set_entry_function
nrk_task_set_stk
nrk_activate_task
nrk_get_high_ready_task_ID
nrk_target_start
nrk_stack_pointer_init
nrk_start_high_ready_task
_nrk_time_to_ticks
_nrk_scheduler
__do_clear_bss
