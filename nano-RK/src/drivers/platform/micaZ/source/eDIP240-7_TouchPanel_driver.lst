   1               		.file	"eDIP240-7_TouchPanel_driver.c"
   2               	__SREG__ = 0x3f
   3               	__SP_H__ = 0x3e
   4               	__SP_L__ = 0x3d
   5               	__CCP__  = 0x34
   6               	__tmp_reg__ = 0
   7               	__zero_reg__ = 1
   8               		.global __do_copy_data
   9               		.global __do_clear_bss
  12               		.text
  13               	.Ltext0:
 140               	.global	USART0_getchar
 142               	USART0_getchar:
 143               		.stabd	46,0,0
   0:../../../src/drivers/platform/micaZ/source/eDIP240-7_TouchPanel_driver.c **** /******************************************************************************
   1:../../../src/drivers/platform/micaZ/source/eDIP240-7_TouchPanel_driver.c **** *  Nano-RK, a real-time operating system for sensor networks.
   2:../../../src/drivers/platform/micaZ/source/eDIP240-7_TouchPanel_driver.c **** *  Copyright (C) 2011 Technische Universität München (www.vmi.ei.tum.de)
   3:../../../src/drivers/platform/micaZ/source/eDIP240-7_TouchPanel_driver.c **** *  All rights reserved.
   4:../../../src/drivers/platform/micaZ/source/eDIP240-7_TouchPanel_driver.c **** *
   5:../../../src/drivers/platform/micaZ/source/eDIP240-7_TouchPanel_driver.c **** *  This is the Open Source Version of Nano-RK included as part of a Dual
   6:../../../src/drivers/platform/micaZ/source/eDIP240-7_TouchPanel_driver.c **** *  Licensing Model. If you are unsure which license to use please refer to:
   7:../../../src/drivers/platform/micaZ/source/eDIP240-7_TouchPanel_driver.c **** *  http://www.nanork.org/nano-RK/wiki/Licensing
   8:../../../src/drivers/platform/micaZ/source/eDIP240-7_TouchPanel_driver.c **** *
   9:../../../src/drivers/platform/micaZ/source/eDIP240-7_TouchPanel_driver.c **** *  This program is free software: you can redistribute it and/or modify
  10:../../../src/drivers/platform/micaZ/source/eDIP240-7_TouchPanel_driver.c **** *  it under the terms of the GNU General Public License as published by
  11:../../../src/drivers/platform/micaZ/source/eDIP240-7_TouchPanel_driver.c **** *  the Free Software Foundation, version 2.0 of the License.
  12:../../../src/drivers/platform/micaZ/source/eDIP240-7_TouchPanel_driver.c **** *
  13:../../../src/drivers/platform/micaZ/source/eDIP240-7_TouchPanel_driver.c **** *  This program is distributed in the hope that it will be useful,
  14:../../../src/drivers/platform/micaZ/source/eDIP240-7_TouchPanel_driver.c **** *  but WITHOUT ANY WARRANTY; without even the implied warranty of
  15:../../../src/drivers/platform/micaZ/source/eDIP240-7_TouchPanel_driver.c **** *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  16:../../../src/drivers/platform/micaZ/source/eDIP240-7_TouchPanel_driver.c **** *  GNU General Public License for more details.
  17:../../../src/drivers/platform/micaZ/source/eDIP240-7_TouchPanel_driver.c **** *
  18:../../../src/drivers/platform/micaZ/source/eDIP240-7_TouchPanel_driver.c **** *  You should have received a copy of the GNU General Public License
  19:../../../src/drivers/platform/micaZ/source/eDIP240-7_TouchPanel_driver.c **** *  along with this program.  If not, see <http://www.gnu.org/licenses/>.
  20:../../../src/drivers/platform/micaZ/source/eDIP240-7_TouchPanel_driver.c **** *
  21:../../../src/drivers/platform/micaZ/source/eDIP240-7_TouchPanel_driver.c **** *
  22:../../../src/drivers/platform/micaZ/source/eDIP240-7_TouchPanel_driver.c **** *  eDIP240-7 TouchPanel 
  23:../../../src/drivers/platform/micaZ/source/eDIP240-7_TouchPanel_driver.c **** *
  24:../../../src/drivers/platform/micaZ/source/eDIP240-7_TouchPanel_driver.c **** *  Contributing Authors (specific to this file):
  25:../../../src/drivers/platform/micaZ/source/eDIP240-7_TouchPanel_driver.c **** *  Author: Peter Diener
  26:../../../src/drivers/platform/micaZ/source/eDIP240-7_TouchPanel_driver.c **** *
  27:../../../src/drivers/platform/micaZ/source/eDIP240-7_TouchPanel_driver.c **** ***************************************************************************************/
  28:../../../src/drivers/platform/micaZ/source/eDIP240-7_TouchPanel_driver.c **** #include <nrk.h>
  29:../../../src/drivers/platform/micaZ/source/eDIP240-7_TouchPanel_driver.c **** #include <include.h>
  30:../../../src/drivers/platform/micaZ/source/eDIP240-7_TouchPanel_driver.c **** #include <ulib.h>
  31:../../../src/drivers/platform/micaZ/source/eDIP240-7_TouchPanel_driver.c **** #include <stdio.h>
  32:../../../src/drivers/platform/micaZ/source/eDIP240-7_TouchPanel_driver.c **** #include <stdlib.h>
  33:../../../src/drivers/platform/micaZ/source/eDIP240-7_TouchPanel_driver.c **** #include <hal.h>
  34:../../../src/drivers/platform/micaZ/source/eDIP240-7_TouchPanel_driver.c **** 
  35:../../../src/drivers/platform/micaZ/source/eDIP240-7_TouchPanel_driver.c **** // Interface functions
  36:../../../src/drivers/platform/micaZ/source/eDIP240-7_TouchPanel_driver.c **** void USART0_putchar(char data)
  37:../../../src/drivers/platform/micaZ/source/eDIP240-7_TouchPanel_driver.c **** {
  38:../../../src/drivers/platform/micaZ/source/eDIP240-7_TouchPanel_driver.c **** 	putchar(data);
  39:../../../src/drivers/platform/micaZ/source/eDIP240-7_TouchPanel_driver.c **** }
  40:../../../src/drivers/platform/micaZ/source/eDIP240-7_TouchPanel_driver.c **** 
  41:../../../src/drivers/platform/micaZ/source/eDIP240-7_TouchPanel_driver.c **** 
  42:../../../src/drivers/platform/micaZ/source/eDIP240-7_TouchPanel_driver.c **** 
  43:../../../src/drivers/platform/micaZ/source/eDIP240-7_TouchPanel_driver.c **** signed int USART0_getchar()
  44:../../../src/drivers/platform/micaZ/source/eDIP240-7_TouchPanel_driver.c **** {
 145               	.LM0:
 146               	.LFBB1:
 147               	/* prologue: function */
 148               	/* frame size = 0 */
  45:../../../src/drivers/platform/micaZ/source/eDIP240-7_TouchPanel_driver.c **** 	if (nrk_uart_data_ready(NRK_DEFAULT_UART)!=0)
 150               	.LM1:
 151 0000 80E0      		ldi r24,lo8(0)
 152 0002 0E94 0000 		call nrk_uart_data_ready
 153 0006 8823      		tst r24
 154 0008 01F4      		brne .L2
 155 000a 2FEF      		ldi r18,lo8(-1)
 156 000c 3FEF      		ldi r19,hi8(-1)
 157 000e 00C0      		rjmp .L3
 158               	.L2:
  46:../../../src/drivers/platform/micaZ/source/eDIP240-7_TouchPanel_driver.c **** 		return (signed int)(unsigned char)getchar();
 160               	.LM2:
 161 0010 8091 0000 		lds r24,__iob
 162 0014 9091 0000 		lds r25,(__iob)+1
 163 0018 0E94 0000 		call fgetc
 164 001c 282F      		mov r18,r24
 165 001e 30E0      		ldi r19,lo8(0)
 166               	.L3:
  47:../../../src/drivers/platform/micaZ/source/eDIP240-7_TouchPanel_driver.c **** 	else return -1;
  48:../../../src/drivers/platform/micaZ/source/eDIP240-7_TouchPanel_driver.c **** }
 168               	.LM3:
 169 0020 C901      		movw r24,r18
 170               	/* epilogue start */
 171 0022 0895      		ret
 173               	.Lscope1:
 175               		.stabd	78,0,0
 178               	.global	USART0_putchar
 180               	USART0_putchar:
 181               		.stabd	46,0,0
  38:../../../src/drivers/platform/micaZ/source/eDIP240-7_TouchPanel_driver.c **** {
 183               	.LM4:
 184               	.LFBB2:
 185               	/* prologue: function */
 186               	/* frame size = 0 */
  39:../../../src/drivers/platform/micaZ/source/eDIP240-7_TouchPanel_driver.c **** 	putchar(data);
 188               	.LM5:
 189 0024 6091 0000 		lds r22,__iob+2
 190 0028 7091 0000 		lds r23,(__iob+2)+1
 191 002c 90E0      		ldi r25,lo8(0)
 192 002e 0E94 0000 		call fputc
 193               	/* epilogue start */
  40:../../../src/drivers/platform/micaZ/source/eDIP240-7_TouchPanel_driver.c **** }
 195               	.LM6:
 196 0032 0895      		ret
 198               	.Lscope2:
 200               		.stabd	78,0,0
 203               	.global	eDIP240_7_Display_deselect
 205               	eDIP240_7_Display_deselect:
 206               		.stabd	46,0,0
  49:../../../src/drivers/platform/micaZ/source/eDIP240-7_TouchPanel_driver.c **** 
  50:../../../src/drivers/platform/micaZ/source/eDIP240-7_TouchPanel_driver.c **** 
  51:../../../src/drivers/platform/micaZ/source/eDIP240-7_TouchPanel_driver.c **** 
  52:../../../src/drivers/platform/micaZ/source/eDIP240-7_TouchPanel_driver.c **** 
  53:../../../src/drivers/platform/micaZ/source/eDIP240-7_TouchPanel_driver.c **** // Electronic Assembly SMALLPROTOKOLL driver by P. Diener
  54:../../../src/drivers/platform/micaZ/source/eDIP240-7_TouchPanel_driver.c **** // Befehle/Daten zum Display senden
  55:../../../src/drivers/platform/micaZ/source/eDIP240-7_TouchPanel_driver.c **** // Display_send_packet sends a packet to the display.
  56:../../../src/drivers/platform/micaZ/source/eDIP240-7_TouchPanel_driver.c **** // The user has to provide a block of memory with the payload and the length of the payload
  57:../../../src/drivers/platform/micaZ/source/eDIP240-7_TouchPanel_driver.c **** // In case of success 0 is returned, in case of an error -1 is returned
  58:../../../src/drivers/platform/micaZ/source/eDIP240-7_TouchPanel_driver.c **** signed char eDIP240_7_Display_send_packet(char * data, unsigned char length)
  59:../../../src/drivers/platform/micaZ/source/eDIP240-7_TouchPanel_driver.c **** {
  60:../../../src/drivers/platform/micaZ/source/eDIP240-7_TouchPanel_driver.c ****  unsigned char i=0, checksum=0, ack=0;
  61:../../../src/drivers/platform/micaZ/source/eDIP240-7_TouchPanel_driver.c ****  volatile unsigned long ack_timeout=100000;
  62:../../../src/drivers/platform/micaZ/source/eDIP240-7_TouchPanel_driver.c **** 
  63:../../../src/drivers/platform/micaZ/source/eDIP240-7_TouchPanel_driver.c ****  USART0_putchar(0x11);       // Send command (sending packet) to the display
  64:../../../src/drivers/platform/micaZ/source/eDIP240-7_TouchPanel_driver.c ****  USART0_putchar(length);     // Send payload size to the display
  65:../../../src/drivers/platform/micaZ/source/eDIP240-7_TouchPanel_driver.c ****  checksum = 0x11 + length;
  66:../../../src/drivers/platform/micaZ/source/eDIP240-7_TouchPanel_driver.c ****  while(i < length)
  67:../../../src/drivers/platform/micaZ/source/eDIP240-7_TouchPanel_driver.c ****  {
  68:../../../src/drivers/platform/micaZ/source/eDIP240-7_TouchPanel_driver.c **** 	USART0_putchar(data[i]);  // Send payload to the display
  69:../../../src/drivers/platform/micaZ/source/eDIP240-7_TouchPanel_driver.c **** 	checksum += data[i];
  70:../../../src/drivers/platform/micaZ/source/eDIP240-7_TouchPanel_driver.c **** 	i++;
  71:../../../src/drivers/platform/micaZ/source/eDIP240-7_TouchPanel_driver.c ****  }
  72:../../../src/drivers/platform/micaZ/source/eDIP240-7_TouchPanel_driver.c ****  USART0_putchar(checksum);   // Send checksum to the display
  73:../../../src/drivers/platform/micaZ/source/eDIP240-7_TouchPanel_driver.c **** // while (Tx0Empty == 0) {}    // Wait for complete transmission of the packet
  74:../../../src/drivers/platform/micaZ/source/eDIP240-7_TouchPanel_driver.c ****  do                          // Wait for receiving ack from the display
  75:../../../src/drivers/platform/micaZ/source/eDIP240-7_TouchPanel_driver.c ****  {
  76:../../../src/drivers/platform/micaZ/source/eDIP240-7_TouchPanel_driver.c **** 	ack = USART0_getchar();
  77:../../../src/drivers/platform/micaZ/source/eDIP240-7_TouchPanel_driver.c **** 	ack_timeout--;
  78:../../../src/drivers/platform/micaZ/source/eDIP240-7_TouchPanel_driver.c ****  }while((ack != 0x06) && (ack_timeout > 0));
  79:../../../src/drivers/platform/micaZ/source/eDIP240-7_TouchPanel_driver.c **** 
  80:../../../src/drivers/platform/micaZ/source/eDIP240-7_TouchPanel_driver.c ****  if (ack == 0x06) return 0;  // Success!
  81:../../../src/drivers/platform/micaZ/source/eDIP240-7_TouchPanel_driver.c ****  else return -1;             // No success! User has to repeat the packet
  82:../../../src/drivers/platform/micaZ/source/eDIP240-7_TouchPanel_driver.c **** }
  83:../../../src/drivers/platform/micaZ/source/eDIP240-7_TouchPanel_driver.c **** 
  84:../../../src/drivers/platform/micaZ/source/eDIP240-7_TouchPanel_driver.c **** 
  85:../../../src/drivers/platform/micaZ/source/eDIP240-7_TouchPanel_driver.c **** 
  86:../../../src/drivers/platform/micaZ/source/eDIP240-7_TouchPanel_driver.c **** // Inhalt des Sendepuffers anfordern
  87:../../../src/drivers/platform/micaZ/source/eDIP240-7_TouchPanel_driver.c **** // Display_get_buffer reads a payload packet from the display to a memory block provided by the use
  88:../../../src/drivers/platform/micaZ/source/eDIP240-7_TouchPanel_driver.c **** // In case of success the length of data is returned, in case of an error -1 is returned
  89:../../../src/drivers/platform/micaZ/source/eDIP240-7_TouchPanel_driver.c **** signed char eDIP240_7_Display_get_buffer(unsigned char * data)
  90:../../../src/drivers/platform/micaZ/source/eDIP240-7_TouchPanel_driver.c **** {
  91:../../../src/drivers/platform/micaZ/source/eDIP240-7_TouchPanel_driver.c ****  unsigned char i=0, checksum=0, ack=0, error=0, length = 0;
  92:../../../src/drivers/platform/micaZ/source/eDIP240-7_TouchPanel_driver.c ****  signed int ch;
  93:../../../src/drivers/platform/micaZ/source/eDIP240-7_TouchPanel_driver.c ****  volatile unsigned long ack_timeout=100000;
  94:../../../src/drivers/platform/micaZ/source/eDIP240-7_TouchPanel_driver.c **** 
  95:../../../src/drivers/platform/micaZ/source/eDIP240-7_TouchPanel_driver.c ****  USART0_putchar(0x12);                 // Send command (sending packet) to the display
  96:../../../src/drivers/platform/micaZ/source/eDIP240-7_TouchPanel_driver.c ****  USART0_putchar(0x01);                 // Send payload size to the display
  97:../../../src/drivers/platform/micaZ/source/eDIP240-7_TouchPanel_driver.c ****  USART0_putchar(0x53);                 // Payload
  98:../../../src/drivers/platform/micaZ/source/eDIP240-7_TouchPanel_driver.c ****  USART0_putchar(0x12 + 0x01 + 0x53);   // Send checksum to the display
  99:../../../src/drivers/platform/micaZ/source/eDIP240-7_TouchPanel_driver.c **** // while (Tx0Empty == 0) {}              // Wait for complete transmission of the packet
 100:../../../src/drivers/platform/micaZ/source/eDIP240-7_TouchPanel_driver.c ****  do                                    // Wait for receiving ack from the display
 101:../../../src/drivers/platform/micaZ/source/eDIP240-7_TouchPanel_driver.c ****  {
 102:../../../src/drivers/platform/micaZ/source/eDIP240-7_TouchPanel_driver.c **** 	ack = USART0_getchar();
 103:../../../src/drivers/platform/micaZ/source/eDIP240-7_TouchPanel_driver.c **** 	ack_timeout--;
 104:../../../src/drivers/platform/micaZ/source/eDIP240-7_TouchPanel_driver.c ****  }while((ack != 0x06) && (ack_timeout > 0));
 105:../../../src/drivers/platform/micaZ/source/eDIP240-7_TouchPanel_driver.c ****  if (ack != 0x06) error = 1;
 106:../../../src/drivers/platform/micaZ/source/eDIP240-7_TouchPanel_driver.c **** 
 107:../../../src/drivers/platform/micaZ/source/eDIP240-7_TouchPanel_driver.c ****  // Now we have to receive and parse the answer from the display
 108:../../../src/drivers/platform/micaZ/source/eDIP240-7_TouchPanel_driver.c ****  do{ ch = USART0_getchar(); }while (ch == -1);       // Get the command byte
 109:../../../src/drivers/platform/micaZ/source/eDIP240-7_TouchPanel_driver.c ****  if (ch == 0x11)                                     // Abort if command byte is incorrect
 110:../../../src/drivers/platform/micaZ/source/eDIP240-7_TouchPanel_driver.c ****  {
 111:../../../src/drivers/platform/micaZ/source/eDIP240-7_TouchPanel_driver.c **** 	do{ ch = USART0_getchar(); }while (ch == -1);     // Get payload length
 112:../../../src/drivers/platform/micaZ/source/eDIP240-7_TouchPanel_driver.c **** 	length = ch;
 113:../../../src/drivers/platform/micaZ/source/eDIP240-7_TouchPanel_driver.c **** 	checksum = 0x11 + length;                         // Start checksum calculation
 114:../../../src/drivers/platform/micaZ/source/eDIP240-7_TouchPanel_driver.c **** 	while (i < length)
 115:../../../src/drivers/platform/micaZ/source/eDIP240-7_TouchPanel_driver.c **** 	{
 116:../../../src/drivers/platform/micaZ/source/eDIP240-7_TouchPanel_driver.c **** 	  do{ ch = USART0_getchar(); }while (ch == -1);   // Get payload data
 117:../../../src/drivers/platform/micaZ/source/eDIP240-7_TouchPanel_driver.c **** 	  data[i] = ch;
 118:../../../src/drivers/platform/micaZ/source/eDIP240-7_TouchPanel_driver.c **** 	  checksum += ch;                                 // Calculate checksum
 119:../../../src/drivers/platform/micaZ/source/eDIP240-7_TouchPanel_driver.c **** 	  i++;
 120:../../../src/drivers/platform/micaZ/source/eDIP240-7_TouchPanel_driver.c **** 	}
 121:../../../src/drivers/platform/micaZ/source/eDIP240-7_TouchPanel_driver.c **** 	// Now we have received all the payload bytes.
 122:../../../src/drivers/platform/micaZ/source/eDIP240-7_TouchPanel_driver.c **** 	do{ ch = USART0_getchar(); }while (ch == -1);   // Get checksum
 123:../../../src/drivers/platform/micaZ/source/eDIP240-7_TouchPanel_driver.c **** 	// If received checksum and calculated checksum do not match, we have an error!
 124:../../../src/drivers/platform/micaZ/source/eDIP240-7_TouchPanel_driver.c **** 	if (ch != checksum) error = 1;
 125:../../../src/drivers/platform/micaZ/source/eDIP240-7_TouchPanel_driver.c ****  }
 126:../../../src/drivers/platform/micaZ/source/eDIP240-7_TouchPanel_driver.c ****  else error = 1;
 127:../../../src/drivers/platform/micaZ/source/eDIP240-7_TouchPanel_driver.c **** 
 128:../../../src/drivers/platform/micaZ/source/eDIP240-7_TouchPanel_driver.c ****  if (error == 0) return length;   // Success!
 129:../../../src/drivers/platform/micaZ/source/eDIP240-7_TouchPanel_driver.c ****  else return -1;                   // No success! User has to repeat the packet
 130:../../../src/drivers/platform/micaZ/source/eDIP240-7_TouchPanel_driver.c **** }
 131:../../../src/drivers/platform/micaZ/source/eDIP240-7_TouchPanel_driver.c **** 
 132:../../../src/drivers/platform/micaZ/source/eDIP240-7_TouchPanel_driver.c **** 
 133:../../../src/drivers/platform/micaZ/source/eDIP240-7_TouchPanel_driver.c **** 
 134:../../../src/drivers/platform/micaZ/source/eDIP240-7_TouchPanel_driver.c **** // Pufferinformationen anfordern
 135:../../../src/drivers/platform/micaZ/source/eDIP240-7_TouchPanel_driver.c **** // Display_request_buffer_info checks if there is any payload stored in the display that can be tra
 136:../../../src/drivers/platform/micaZ/source/eDIP240-7_TouchPanel_driver.c **** // The data is provided by a call by reference method.
 137:../../../src/drivers/platform/micaZ/source/eDIP240-7_TouchPanel_driver.c **** // Return value: 0 -> ok;  -1 -> error
 138:../../../src/drivers/platform/micaZ/source/eDIP240-7_TouchPanel_driver.c **** signed char eDIP240_7_Display_request_buffer_info(char * bytes_ready, char * bytes_free)   //TBD
 139:../../../src/drivers/platform/micaZ/source/eDIP240-7_TouchPanel_driver.c **** {
 140:../../../src/drivers/platform/micaZ/source/eDIP240-7_TouchPanel_driver.c ****  unsigned char checksum=0, ack=0, error=0, length;
 141:../../../src/drivers/platform/micaZ/source/eDIP240-7_TouchPanel_driver.c ****  signed int ch;
 142:../../../src/drivers/platform/micaZ/source/eDIP240-7_TouchPanel_driver.c ****  volatile unsigned long ack_timeout=1000000;
 143:../../../src/drivers/platform/micaZ/source/eDIP240-7_TouchPanel_driver.c **** 
 144:../../../src/drivers/platform/micaZ/source/eDIP240-7_TouchPanel_driver.c ****  USART0_putchar(0x12);                 // Send command (sending packet) to the display
 145:../../../src/drivers/platform/micaZ/source/eDIP240-7_TouchPanel_driver.c ****  USART0_putchar(0x01);                 // Send payload size to the display
 146:../../../src/drivers/platform/micaZ/source/eDIP240-7_TouchPanel_driver.c ****  USART0_putchar(0x49);                 // Payload
 147:../../../src/drivers/platform/micaZ/source/eDIP240-7_TouchPanel_driver.c ****  USART0_putchar(0x12 + 0x01 + 0x49);   // Send checksum to the display
 148:../../../src/drivers/platform/micaZ/source/eDIP240-7_TouchPanel_driver.c ****  do                                    // Wait for receiving ack from the display
 149:../../../src/drivers/platform/micaZ/source/eDIP240-7_TouchPanel_driver.c ****  {
 150:../../../src/drivers/platform/micaZ/source/eDIP240-7_TouchPanel_driver.c **** 	ack = USART0_getchar();
 151:../../../src/drivers/platform/micaZ/source/eDIP240-7_TouchPanel_driver.c **** 	ack_timeout--;
 152:../../../src/drivers/platform/micaZ/source/eDIP240-7_TouchPanel_driver.c ****  }while((ack != 0x06) && (ack_timeout > 0));
 153:../../../src/drivers/platform/micaZ/source/eDIP240-7_TouchPanel_driver.c ****  if (ack != 0x06) error = 1;
 154:../../../src/drivers/platform/micaZ/source/eDIP240-7_TouchPanel_driver.c **** 
 155:../../../src/drivers/platform/micaZ/source/eDIP240-7_TouchPanel_driver.c ****  // Now we have to receive and parse the answer from the display
 156:../../../src/drivers/platform/micaZ/source/eDIP240-7_TouchPanel_driver.c ****  do{ ch = USART0_getchar(); }while (ch == -1);       // Get the command byte
 157:../../../src/drivers/platform/micaZ/source/eDIP240-7_TouchPanel_driver.c ****  if (ch == 0x12)                                     // Abort if command byte is incorrect
 158:../../../src/drivers/platform/micaZ/source/eDIP240-7_TouchPanel_driver.c ****  {
 159:../../../src/drivers/platform/micaZ/source/eDIP240-7_TouchPanel_driver.c **** 	do{ ch = USART0_getchar(); }while (ch == -1);     // Get payload length
 160:../../../src/drivers/platform/micaZ/source/eDIP240-7_TouchPanel_driver.c **** 	length = ch;
 161:../../../src/drivers/platform/micaZ/source/eDIP240-7_TouchPanel_driver.c **** 	if (length == 2)                                  // Abort if length is incorrect
 162:../../../src/drivers/platform/micaZ/source/eDIP240-7_TouchPanel_driver.c **** 	{
 163:../../../src/drivers/platform/micaZ/source/eDIP240-7_TouchPanel_driver.c **** 	  checksum = 0x12 + length;                         // Start checksum calculation
 164:../../../src/drivers/platform/micaZ/source/eDIP240-7_TouchPanel_driver.c **** 
 165:../../../src/drivers/platform/micaZ/source/eDIP240-7_TouchPanel_driver.c **** 	  do{ ch = USART0_getchar(); }while (ch == -1);   // Get payload data
 166:../../../src/drivers/platform/micaZ/source/eDIP240-7_TouchPanel_driver.c **** 	  checksum += ch;                                 // Calculate checksum
 167:../../../src/drivers/platform/micaZ/source/eDIP240-7_TouchPanel_driver.c **** 	  *bytes_ready = ch;
 168:../../../src/drivers/platform/micaZ/source/eDIP240-7_TouchPanel_driver.c **** 
 169:../../../src/drivers/platform/micaZ/source/eDIP240-7_TouchPanel_driver.c **** 	  do{ ch = USART0_getchar(); }while (ch == -1);   // Get payload data
 170:../../../src/drivers/platform/micaZ/source/eDIP240-7_TouchPanel_driver.c **** 	  checksum += ch;                                 // Calculate checksum
 171:../../../src/drivers/platform/micaZ/source/eDIP240-7_TouchPanel_driver.c **** 	  *bytes_free = ch;
 172:../../../src/drivers/platform/micaZ/source/eDIP240-7_TouchPanel_driver.c **** 
 173:../../../src/drivers/platform/micaZ/source/eDIP240-7_TouchPanel_driver.c **** 	  // Now we have received all the payload bytes.
 174:../../../src/drivers/platform/micaZ/source/eDIP240-7_TouchPanel_driver.c **** 	  do{ ch = USART0_getchar(); }while (ch == -1);   // Get checksum
 175:../../../src/drivers/platform/micaZ/source/eDIP240-7_TouchPanel_driver.c **** 	  // If received checksum and calculated checksum do not match, we have an error!
 176:../../../src/drivers/platform/micaZ/source/eDIP240-7_TouchPanel_driver.c **** 	  if (ch != checksum) error = 1;
 177:../../../src/drivers/platform/micaZ/source/eDIP240-7_TouchPanel_driver.c **** 	}
 178:../../../src/drivers/platform/micaZ/source/eDIP240-7_TouchPanel_driver.c **** 	else error = 1;
 179:../../../src/drivers/platform/micaZ/source/eDIP240-7_TouchPanel_driver.c ****  }
 180:../../../src/drivers/platform/micaZ/source/eDIP240-7_TouchPanel_driver.c ****  else error = 1;
 181:../../../src/drivers/platform/micaZ/source/eDIP240-7_TouchPanel_driver.c **** 
 182:../../../src/drivers/platform/micaZ/source/eDIP240-7_TouchPanel_driver.c ****  if (error == 0) return 0;  // Success!
 183:../../../src/drivers/platform/micaZ/source/eDIP240-7_TouchPanel_driver.c ****  else return -1;             // No success! User has to repeat the packet
 184:../../../src/drivers/platform/micaZ/source/eDIP240-7_TouchPanel_driver.c **** }
 185:../../../src/drivers/platform/micaZ/source/eDIP240-7_TouchPanel_driver.c **** 
 186:../../../src/drivers/platform/micaZ/source/eDIP240-7_TouchPanel_driver.c **** 
 187:../../../src/drivers/platform/micaZ/source/eDIP240-7_TouchPanel_driver.c **** // Protokolleinstellungen
 188:../../../src/drivers/platform/micaZ/source/eDIP240-7_TouchPanel_driver.c **** // Display_set_protocol can set the maximum transmission block size and the serial interface data b
 189:../../../src/drivers/platform/micaZ/source/eDIP240-7_TouchPanel_driver.c **** // sendbuffer_size is set in bytes (1 .. 64)
 190:../../../src/drivers/platform/micaZ/source/eDIP240-7_TouchPanel_driver.c **** // timeout is set in 1/100 seconds (0 .. 255)
 191:../../../src/drivers/platform/micaZ/source/eDIP240-7_TouchPanel_driver.c **** // Return value: 0 -> ok;  -1 -> error
 192:../../../src/drivers/platform/micaZ/source/eDIP240-7_TouchPanel_driver.c **** signed char eDIP240_7_Display_set_protocol(unsigned char sendbuffer_size, unsigned char timeout)
 193:../../../src/drivers/platform/micaZ/source/eDIP240-7_TouchPanel_driver.c **** {
 194:../../../src/drivers/platform/micaZ/source/eDIP240-7_TouchPanel_driver.c ****  unsigned char ack=0;
 195:../../../src/drivers/platform/micaZ/source/eDIP240-7_TouchPanel_driver.c ****  volatile unsigned long ack_timeout=1000000;
 196:../../../src/drivers/platform/micaZ/source/eDIP240-7_TouchPanel_driver.c **** 
 197:../../../src/drivers/platform/micaZ/source/eDIP240-7_TouchPanel_driver.c ****  USART0_putchar(0x12);                 // Send command DC2 (sending packet) to the display
 198:../../../src/drivers/platform/micaZ/source/eDIP240-7_TouchPanel_driver.c ****  USART0_putchar(3);
 199:../../../src/drivers/platform/micaZ/source/eDIP240-7_TouchPanel_driver.c ****  USART0_putchar('D');
 200:../../../src/drivers/platform/micaZ/source/eDIP240-7_TouchPanel_driver.c ****  USART0_putchar(sendbuffer_size);
 201:../../../src/drivers/platform/micaZ/source/eDIP240-7_TouchPanel_driver.c ****  USART0_putchar(timeout);
 202:../../../src/drivers/platform/micaZ/source/eDIP240-7_TouchPanel_driver.c ****  USART0_putchar( (unsigned char) (0x12 + 3 + 'D' + sendbuffer_size + timeout) );                   
 203:../../../src/drivers/platform/micaZ/source/eDIP240-7_TouchPanel_driver.c ****  do                                    // Wait for receiving ack from the display
 204:../../../src/drivers/platform/micaZ/source/eDIP240-7_TouchPanel_driver.c ****  {
 205:../../../src/drivers/platform/micaZ/source/eDIP240-7_TouchPanel_driver.c **** 	ack = USART0_getchar();
 206:../../../src/drivers/platform/micaZ/source/eDIP240-7_TouchPanel_driver.c **** 	ack_timeout--;
 207:../../../src/drivers/platform/micaZ/source/eDIP240-7_TouchPanel_driver.c ****  }while((ack != 0x06) && (ack_timeout > 0));
 208:../../../src/drivers/platform/micaZ/source/eDIP240-7_TouchPanel_driver.c ****  if (ack != 0x06) return (-1);
 209:../../../src/drivers/platform/micaZ/source/eDIP240-7_TouchPanel_driver.c ****  return 0;
 210:../../../src/drivers/platform/micaZ/source/eDIP240-7_TouchPanel_driver.c **** }
 211:../../../src/drivers/platform/micaZ/source/eDIP240-7_TouchPanel_driver.c **** 
 212:../../../src/drivers/platform/micaZ/source/eDIP240-7_TouchPanel_driver.c **** 
 213:../../../src/drivers/platform/micaZ/source/eDIP240-7_TouchPanel_driver.c **** 
 214:../../../src/drivers/platform/micaZ/source/eDIP240-7_TouchPanel_driver.c **** // Protokollinformationen anfordern
 215:../../../src/drivers/platform/micaZ/source/eDIP240-7_TouchPanel_driver.c **** // Display_get_protocoll_info requests the current sendbuffer_size and timeout settings and the sen
 216:../../../src/drivers/platform/micaZ/source/eDIP240-7_TouchPanel_driver.c **** // sendbuffer_size: current setting of the maimum number of bytes that can be stored in the display
 217:../../../src/drivers/platform/micaZ/source/eDIP240-7_TouchPanel_driver.c **** // sendbuffer_level: current number of bytes that are stored in the display-sendbuffer.
 218:../../../src/drivers/platform/micaZ/source/eDIP240-7_TouchPanel_driver.c **** // Return value: 0 -> ok;  -1 -> error
 219:../../../src/drivers/platform/micaZ/source/eDIP240-7_TouchPanel_driver.c **** signed char eDIP240_7_Display_get_protocoll_info(unsigned char * sendbuffer_size, unsigned char * s
 220:../../../src/drivers/platform/micaZ/source/eDIP240-7_TouchPanel_driver.c **** {
 221:../../../src/drivers/platform/micaZ/source/eDIP240-7_TouchPanel_driver.c ****  unsigned char checksum=0, ack=0, error=0, length;
 222:../../../src/drivers/platform/micaZ/source/eDIP240-7_TouchPanel_driver.c ****  signed int ch;
 223:../../../src/drivers/platform/micaZ/source/eDIP240-7_TouchPanel_driver.c ****  volatile unsigned long ack_timeout=1000000;
 224:../../../src/drivers/platform/micaZ/source/eDIP240-7_TouchPanel_driver.c **** 
 225:../../../src/drivers/platform/micaZ/source/eDIP240-7_TouchPanel_driver.c ****  USART0_putchar(0x12);                 // Send command DC2 (sending packet) to the display
 226:../../../src/drivers/platform/micaZ/source/eDIP240-7_TouchPanel_driver.c ****  USART0_putchar(1);
 227:../../../src/drivers/platform/micaZ/source/eDIP240-7_TouchPanel_driver.c ****  USART0_putchar('P');
 228:../../../src/drivers/platform/micaZ/source/eDIP240-7_TouchPanel_driver.c ****  USART0_putchar( (unsigned char) (0x12 + 1 + 'P') );
 229:../../../src/drivers/platform/micaZ/source/eDIP240-7_TouchPanel_driver.c ****  do                                    // Wait for receiving ack from the display
 230:../../../src/drivers/platform/micaZ/source/eDIP240-7_TouchPanel_driver.c ****  {
 231:../../../src/drivers/platform/micaZ/source/eDIP240-7_TouchPanel_driver.c **** 	ack = USART0_getchar();
 232:../../../src/drivers/platform/micaZ/source/eDIP240-7_TouchPanel_driver.c **** 	ack_timeout--;
 233:../../../src/drivers/platform/micaZ/source/eDIP240-7_TouchPanel_driver.c ****  }while((ack != 0x06) && (ack_timeout > 0));
 234:../../../src/drivers/platform/micaZ/source/eDIP240-7_TouchPanel_driver.c ****  if (ack != 0x06) return (-1);
 235:../../../src/drivers/platform/micaZ/source/eDIP240-7_TouchPanel_driver.c **** 
 236:../../../src/drivers/platform/micaZ/source/eDIP240-7_TouchPanel_driver.c ****  // Now we have to receive and parse the answer from the display
 237:../../../src/drivers/platform/micaZ/source/eDIP240-7_TouchPanel_driver.c ****  do{ ch = USART0_getchar(); }while (ch == -1);       // Get the command byte
 238:../../../src/drivers/platform/micaZ/source/eDIP240-7_TouchPanel_driver.c ****  if (ch == 0x12)                                     // Abort if command byte is incorrect
 239:../../../src/drivers/platform/micaZ/source/eDIP240-7_TouchPanel_driver.c ****  {
 240:../../../src/drivers/platform/micaZ/source/eDIP240-7_TouchPanel_driver.c **** 	do{ ch = USART0_getchar(); }while (ch == -1);     // Get payload length
 241:../../../src/drivers/platform/micaZ/source/eDIP240-7_TouchPanel_driver.c **** 	length = ch;
 242:../../../src/drivers/platform/micaZ/source/eDIP240-7_TouchPanel_driver.c **** 	if (length == 3)                                  // Abort if length is incorrect
 243:../../../src/drivers/platform/micaZ/source/eDIP240-7_TouchPanel_driver.c **** 	{
 244:../../../src/drivers/platform/micaZ/source/eDIP240-7_TouchPanel_driver.c **** 	  checksum = 0x12 + length;                         // Start checksum calculation
 245:../../../src/drivers/platform/micaZ/source/eDIP240-7_TouchPanel_driver.c **** 
 246:../../../src/drivers/platform/micaZ/source/eDIP240-7_TouchPanel_driver.c **** 	  do{ ch = USART0_getchar(); }while (ch == -1);   // Get payload data
 247:../../../src/drivers/platform/micaZ/source/eDIP240-7_TouchPanel_driver.c **** 	  checksum += ch;                                 // Calculate checksum
 248:../../../src/drivers/platform/micaZ/source/eDIP240-7_TouchPanel_driver.c **** 	  *sendbuffer_size = ch;
 249:../../../src/drivers/platform/micaZ/source/eDIP240-7_TouchPanel_driver.c **** 
 250:../../../src/drivers/platform/micaZ/source/eDIP240-7_TouchPanel_driver.c **** 	  do{ ch = USART0_getchar(); }while (ch == -1);   // Get payload data
 251:../../../src/drivers/platform/micaZ/source/eDIP240-7_TouchPanel_driver.c **** 	  checksum += ch;                                 // Calculate checksum
 252:../../../src/drivers/platform/micaZ/source/eDIP240-7_TouchPanel_driver.c **** 	  *sendbuffer_level = ch;
 253:../../../src/drivers/platform/micaZ/source/eDIP240-7_TouchPanel_driver.c **** 
 254:../../../src/drivers/platform/micaZ/source/eDIP240-7_TouchPanel_driver.c **** 	  do{ ch = USART0_getchar(); }while (ch == -1);   // Get payload data
 255:../../../src/drivers/platform/micaZ/source/eDIP240-7_TouchPanel_driver.c **** 	  checksum += ch;                                 // Calculate checksum
 256:../../../src/drivers/platform/micaZ/source/eDIP240-7_TouchPanel_driver.c **** 	  *timeout = ch;
 257:../../../src/drivers/platform/micaZ/source/eDIP240-7_TouchPanel_driver.c **** 
 258:../../../src/drivers/platform/micaZ/source/eDIP240-7_TouchPanel_driver.c **** 	  // Now we have received all the payload bytes.
 259:../../../src/drivers/platform/micaZ/source/eDIP240-7_TouchPanel_driver.c **** 	  do{ ch = USART0_getchar(); }while (ch == -1);   // Get checksum
 260:../../../src/drivers/platform/micaZ/source/eDIP240-7_TouchPanel_driver.c **** 	  // If received checksum and calculated checksum do not match, we have an error!
 261:../../../src/drivers/platform/micaZ/source/eDIP240-7_TouchPanel_driver.c **** 	  if (ch != checksum) error = 1;
 262:../../../src/drivers/platform/micaZ/source/eDIP240-7_TouchPanel_driver.c **** 	}
 263:../../../src/drivers/platform/micaZ/source/eDIP240-7_TouchPanel_driver.c **** 	else error = 1;
 264:../../../src/drivers/platform/micaZ/source/eDIP240-7_TouchPanel_driver.c ****  }
 265:../../../src/drivers/platform/micaZ/source/eDIP240-7_TouchPanel_driver.c ****  else error = 1;
 266:../../../src/drivers/platform/micaZ/source/eDIP240-7_TouchPanel_driver.c **** 
 267:../../../src/drivers/platform/micaZ/source/eDIP240-7_TouchPanel_driver.c ****  if (error == 0) return 0;  // Success!
 268:../../../src/drivers/platform/micaZ/source/eDIP240-7_TouchPanel_driver.c ****  else return -1;             // No success! User has to repeat the packet
 269:../../../src/drivers/platform/micaZ/source/eDIP240-7_TouchPanel_driver.c **** 
 270:../../../src/drivers/platform/micaZ/source/eDIP240-7_TouchPanel_driver.c ****  return 0;
 271:../../../src/drivers/platform/micaZ/source/eDIP240-7_TouchPanel_driver.c **** 
 272:../../../src/drivers/platform/micaZ/source/eDIP240-7_TouchPanel_driver.c **** }
 273:../../../src/drivers/platform/micaZ/source/eDIP240-7_TouchPanel_driver.c **** 
 274:../../../src/drivers/platform/micaZ/source/eDIP240-7_TouchPanel_driver.c **** 
 275:../../../src/drivers/platform/micaZ/source/eDIP240-7_TouchPanel_driver.c **** 
 276:../../../src/drivers/platform/micaZ/source/eDIP240-7_TouchPanel_driver.c **** // Letztes Datenpaket wiederholen
 277:../../../src/drivers/platform/micaZ/source/eDIP240-7_TouchPanel_driver.c **** // Display_repeat_last_packet will cause the display to repeat the last packet.
 278:../../../src/drivers/platform/micaZ/source/eDIP240-7_TouchPanel_driver.c **** // The user has to provide a block of memory (data) where the received packet payload will be store
 279:../../../src/drivers/platform/micaZ/source/eDIP240-7_TouchPanel_driver.c **** // Return value: 0 -> ok;  -1 -> error
 280:../../../src/drivers/platform/micaZ/source/eDIP240-7_TouchPanel_driver.c **** signed char eDIP240_7_Display_repeat_last_packet(unsigned char * data)
 281:../../../src/drivers/platform/micaZ/source/eDIP240-7_TouchPanel_driver.c **** {
 282:../../../src/drivers/platform/micaZ/source/eDIP240-7_TouchPanel_driver.c ****  unsigned char i=0, checksum=0, ack=0, error=0, length;
 283:../../../src/drivers/platform/micaZ/source/eDIP240-7_TouchPanel_driver.c ****  signed int ch;
 284:../../../src/drivers/platform/micaZ/source/eDIP240-7_TouchPanel_driver.c ****  volatile unsigned long ack_timeout=1000000;
 285:../../../src/drivers/platform/micaZ/source/eDIP240-7_TouchPanel_driver.c **** 
 286:../../../src/drivers/platform/micaZ/source/eDIP240-7_TouchPanel_driver.c ****  USART0_putchar(0x12);                 // Send command DC2 (sending packet) to the display
 287:../../../src/drivers/platform/micaZ/source/eDIP240-7_TouchPanel_driver.c ****  USART0_putchar(1);
 288:../../../src/drivers/platform/micaZ/source/eDIP240-7_TouchPanel_driver.c ****  USART0_putchar('R');
 289:../../../src/drivers/platform/micaZ/source/eDIP240-7_TouchPanel_driver.c ****  USART0_putchar( (unsigned char) (0x12 + 1 + 'R') );                     // Checksum
 290:../../../src/drivers/platform/micaZ/source/eDIP240-7_TouchPanel_driver.c ****  do                                    // Wait for receiving ack from the display
 291:../../../src/drivers/platform/micaZ/source/eDIP240-7_TouchPanel_driver.c ****  {
 292:../../../src/drivers/platform/micaZ/source/eDIP240-7_TouchPanel_driver.c **** 	ack = USART0_getchar();
 293:../../../src/drivers/platform/micaZ/source/eDIP240-7_TouchPanel_driver.c **** 	ack_timeout--;
 294:../../../src/drivers/platform/micaZ/source/eDIP240-7_TouchPanel_driver.c ****  }while((ack != 0x06) && (ack_timeout > 0));
 295:../../../src/drivers/platform/micaZ/source/eDIP240-7_TouchPanel_driver.c ****  if (ack != 0x06) return (-1);
 296:../../../src/drivers/platform/micaZ/source/eDIP240-7_TouchPanel_driver.c **** 
 297:../../../src/drivers/platform/micaZ/source/eDIP240-7_TouchPanel_driver.c ****  // Now we have to receive and parse the answer from the display
 298:../../../src/drivers/platform/micaZ/source/eDIP240-7_TouchPanel_driver.c ****  do{ ch = USART0_getchar(); }while (ch == -1);       // Get the command byte
 299:../../../src/drivers/platform/micaZ/source/eDIP240-7_TouchPanel_driver.c ****  if (ch == 0x11)                                     // Abort if command byte is incorrect
 300:../../../src/drivers/platform/micaZ/source/eDIP240-7_TouchPanel_driver.c ****  {
 301:../../../src/drivers/platform/micaZ/source/eDIP240-7_TouchPanel_driver.c **** 	do{ ch = USART0_getchar(); }while (ch == -1);     // Get payload length
 302:../../../src/drivers/platform/micaZ/source/eDIP240-7_TouchPanel_driver.c **** 	length = ch;
 303:../../../src/drivers/platform/micaZ/source/eDIP240-7_TouchPanel_driver.c **** 	checksum = 0x11 + length;                         // Start checksum calculation
 304:../../../src/drivers/platform/micaZ/source/eDIP240-7_TouchPanel_driver.c **** 	while (i < length)
 305:../../../src/drivers/platform/micaZ/source/eDIP240-7_TouchPanel_driver.c **** 	{
 306:../../../src/drivers/platform/micaZ/source/eDIP240-7_TouchPanel_driver.c **** 	  do{ ch = USART0_getchar(); }while (ch == -1);   // Get payload data
 307:../../../src/drivers/platform/micaZ/source/eDIP240-7_TouchPanel_driver.c **** 	  data[i] = ch;
 308:../../../src/drivers/platform/micaZ/source/eDIP240-7_TouchPanel_driver.c **** 	  checksum += ch;                                 // Calculate checksum
 309:../../../src/drivers/platform/micaZ/source/eDIP240-7_TouchPanel_driver.c **** 	  i++;
 310:../../../src/drivers/platform/micaZ/source/eDIP240-7_TouchPanel_driver.c **** 	}
 311:../../../src/drivers/platform/micaZ/source/eDIP240-7_TouchPanel_driver.c **** 	// Now we have received all the payload bytes.
 312:../../../src/drivers/platform/micaZ/source/eDIP240-7_TouchPanel_driver.c **** 	do{ ch = USART0_getchar(); }while (ch == -1);   // Get checksum
 313:../../../src/drivers/platform/micaZ/source/eDIP240-7_TouchPanel_driver.c **** 	// If received checksum and calculated checksum do not match, we have an error!
 314:../../../src/drivers/platform/micaZ/source/eDIP240-7_TouchPanel_driver.c **** 	if (ch != checksum) error = 1;
 315:../../../src/drivers/platform/micaZ/source/eDIP240-7_TouchPanel_driver.c ****  }
 316:../../../src/drivers/platform/micaZ/source/eDIP240-7_TouchPanel_driver.c ****  else error = 1;
 317:../../../src/drivers/platform/micaZ/source/eDIP240-7_TouchPanel_driver.c **** 
 318:../../../src/drivers/platform/micaZ/source/eDIP240-7_TouchPanel_driver.c ****  if (ack == 0x06) return 0;  // Success!
 319:../../../src/drivers/platform/micaZ/source/eDIP240-7_TouchPanel_driver.c ****  else return -1;             // No success! User has to repeat the packet
 320:../../../src/drivers/platform/micaZ/source/eDIP240-7_TouchPanel_driver.c **** }
 321:../../../src/drivers/platform/micaZ/source/eDIP240-7_TouchPanel_driver.c **** 
 322:../../../src/drivers/platform/micaZ/source/eDIP240-7_TouchPanel_driver.c **** 
 323:../../../src/drivers/platform/micaZ/source/eDIP240-7_TouchPanel_driver.c **** 
 324:../../../src/drivers/platform/micaZ/source/eDIP240-7_TouchPanel_driver.c **** // Adressierung nur bei RS232/RS485 Betrieb
 325:../../../src/drivers/platform/micaZ/source/eDIP240-7_TouchPanel_driver.c **** // Display_select will select the display with the provided address as bus receiver.
 326:../../../src/drivers/platform/micaZ/source/eDIP240-7_TouchPanel_driver.c **** // Return value: 0 -> ok;  -1 -> error
 327:../../../src/drivers/platform/micaZ/source/eDIP240-7_TouchPanel_driver.c **** signed char eDIP240_7_Display_select(unsigned char address)
 328:../../../src/drivers/platform/micaZ/source/eDIP240-7_TouchPanel_driver.c **** {
 329:../../../src/drivers/platform/micaZ/source/eDIP240-7_TouchPanel_driver.c ****  unsigned char ack=0;
 330:../../../src/drivers/platform/micaZ/source/eDIP240-7_TouchPanel_driver.c ****  volatile unsigned long ack_timeout=1000000;
 331:../../../src/drivers/platform/micaZ/source/eDIP240-7_TouchPanel_driver.c **** 
 332:../../../src/drivers/platform/micaZ/source/eDIP240-7_TouchPanel_driver.c ****  USART0_putchar(0x12);                 // Send command DC2 (sending packet) to the display
 333:../../../src/drivers/platform/micaZ/source/eDIP240-7_TouchPanel_driver.c ****  USART0_putchar(3);
 334:../../../src/drivers/platform/micaZ/source/eDIP240-7_TouchPanel_driver.c ****  USART0_putchar('A');
 335:../../../src/drivers/platform/micaZ/source/eDIP240-7_TouchPanel_driver.c ****  USART0_putchar('S');
 336:../../../src/drivers/platform/micaZ/source/eDIP240-7_TouchPanel_driver.c ****  USART0_putchar(address);
 337:../../../src/drivers/platform/micaZ/source/eDIP240-7_TouchPanel_driver.c ****  USART0_putchar( (unsigned char) (0x12 + 3 + 'A' + 'S' + address) );                     // Checksu
 338:../../../src/drivers/platform/micaZ/source/eDIP240-7_TouchPanel_driver.c ****  do                                    // Wait for receiving ack from the display
 339:../../../src/drivers/platform/micaZ/source/eDIP240-7_TouchPanel_driver.c ****  {
 340:../../../src/drivers/platform/micaZ/source/eDIP240-7_TouchPanel_driver.c **** 	ack = USART0_getchar();
 341:../../../src/drivers/platform/micaZ/source/eDIP240-7_TouchPanel_driver.c **** 	ack_timeout--;
 342:../../../src/drivers/platform/micaZ/source/eDIP240-7_TouchPanel_driver.c ****  }while((ack != 0x06) && (ack_timeout > 0));
 343:../../../src/drivers/platform/micaZ/source/eDIP240-7_TouchPanel_driver.c ****  if (ack != 0x06) return (-1);
 344:../../../src/drivers/platform/micaZ/source/eDIP240-7_TouchPanel_driver.c ****  return 0;
 345:../../../src/drivers/platform/micaZ/source/eDIP240-7_TouchPanel_driver.c **** }
 346:../../../src/drivers/platform/micaZ/source/eDIP240-7_TouchPanel_driver.c **** 
 347:../../../src/drivers/platform/micaZ/source/eDIP240-7_TouchPanel_driver.c **** 
 348:../../../src/drivers/platform/micaZ/source/eDIP240-7_TouchPanel_driver.c **** // Adressierung nur bei RS232/RS485 Betrieb
 349:../../../src/drivers/platform/micaZ/source/eDIP240-7_TouchPanel_driver.c **** // Display_deselect will deselect the display with the provided address.
 350:../../../src/drivers/platform/micaZ/source/eDIP240-7_TouchPanel_driver.c **** // A deselected display will not listen to data sent over the serial line and will not transmit to 
 351:../../../src/drivers/platform/micaZ/source/eDIP240-7_TouchPanel_driver.c **** // Return value: 0 -> ok;  -1 -> error
 352:../../../src/drivers/platform/micaZ/source/eDIP240-7_TouchPanel_driver.c **** signed char eDIP240_7_Display_deselect(unsigned char address)
 353:../../../src/drivers/platform/micaZ/source/eDIP240-7_TouchPanel_driver.c **** {
 208               	.LM7:
 209               	.LFBB3:
 210 0034 1F93      		push r17
 211 0036 DF93      		push r29
 212 0038 CF93      		push r28
 213 003a 00D0      		rcall .
 214 003c 00D0      		rcall .
 215 003e CDB7      		in r28,__SP_L__
 216 0040 DEB7      		in r29,__SP_H__
 217               	/* prologue: function */
 218               	/* frame size = 4 */
 219 0042 182F      		mov r17,r24
 354:../../../src/drivers/platform/micaZ/source/eDIP240-7_TouchPanel_driver.c ****  unsigned char ack=0;
 355:../../../src/drivers/platform/micaZ/source/eDIP240-7_TouchPanel_driver.c ****  volatile unsigned long ack_timeout=1000000;
 221               	.LM8:
 222 0044 80E4      		ldi r24,lo8(1000000)
 223 0046 92E4      		ldi r25,hi8(1000000)
 224 0048 AFE0      		ldi r26,hlo8(1000000)
 225 004a B0E0      		ldi r27,hhi8(1000000)
 226 004c 8983      		std Y+1,r24
 227 004e 9A83      		std Y+2,r25
 228 0050 AB83      		std Y+3,r26
 229 0052 BC83      		std Y+4,r27
 230               	.LBB78:
 231               	.LBB79:
  39:../../../src/drivers/platform/micaZ/source/eDIP240-7_TouchPanel_driver.c **** 	putchar(data);
 233               	.LM9:
 234 0054 6091 0000 		lds r22,__iob+2
 235 0058 7091 0000 		lds r23,(__iob+2)+1
 236 005c 82E1      		ldi r24,lo8(18)
 237 005e 90E0      		ldi r25,hi8(18)
 238 0060 0E94 0000 		call fputc
 239               	.LBE79:
 240               	.LBE78:
 241               	.LBB80:
 242               	.LBB81:
 243 0064 6091 0000 		lds r22,__iob+2
 244 0068 7091 0000 		lds r23,(__iob+2)+1
 245 006c 83E0      		ldi r24,lo8(3)
 246 006e 90E0      		ldi r25,hi8(3)
 247 0070 0E94 0000 		call fputc
 248               	.LBE81:
 249               	.LBE80:
 250               	.LBB82:
 251               	.LBB83:
 252 0074 6091 0000 		lds r22,__iob+2
 253 0078 7091 0000 		lds r23,(__iob+2)+1
 254 007c 81E4      		ldi r24,lo8(65)
 255 007e 90E0      		ldi r25,hi8(65)
 256 0080 0E94 0000 		call fputc
 257               	.LBE83:
 258               	.LBE82:
 259               	.LBB84:
 260               	.LBB85:
 261 0084 6091 0000 		lds r22,__iob+2
 262 0088 7091 0000 		lds r23,(__iob+2)+1
 263 008c 84E4      		ldi r24,lo8(68)
 264 008e 90E0      		ldi r25,hi8(68)
 265 0090 0E94 0000 		call fputc
 266               	.LBE85:
 267               	.LBE84:
 268               	.LBB86:
 269               	.LBB87:
 270 0094 6091 0000 		lds r22,__iob+2
 271 0098 7091 0000 		lds r23,(__iob+2)+1
 272 009c 812F      		mov r24,r17
 273 009e 90E0      		ldi r25,lo8(0)
 274 00a0 0E94 0000 		call fputc
 275               	.LBE87:
 276               	.LBE86:
 277               	.LBB88:
 278               	.LBB89:
 279 00a4 6091 0000 		lds r22,__iob+2
 280 00a8 7091 0000 		lds r23,(__iob+2)+1
 281 00ac 812F      		mov r24,r17
 282 00ae 8656      		subi r24,lo8(-(-102))
 283 00b0 90E0      		ldi r25,lo8(0)
 284 00b2 0E94 0000 		call fputc
 285               	.L9:
 286               	.LBE89:
 287               	.LBE88:
 356:../../../src/drivers/platform/micaZ/source/eDIP240-7_TouchPanel_driver.c **** 
 357:../../../src/drivers/platform/micaZ/source/eDIP240-7_TouchPanel_driver.c ****  USART0_putchar(0x12);                 // Send command DC2 (sending packet) to the display
 358:../../../src/drivers/platform/micaZ/source/eDIP240-7_TouchPanel_driver.c ****  USART0_putchar(3);
 359:../../../src/drivers/platform/micaZ/source/eDIP240-7_TouchPanel_driver.c ****  USART0_putchar('A');
 360:../../../src/drivers/platform/micaZ/source/eDIP240-7_TouchPanel_driver.c ****  USART0_putchar('D');
 361:../../../src/drivers/platform/micaZ/source/eDIP240-7_TouchPanel_driver.c ****  USART0_putchar(address);
 362:../../../src/drivers/platform/micaZ/source/eDIP240-7_TouchPanel_driver.c ****  USART0_putchar( (unsigned char) (0x12 + 3 + 'A' + 'D' + address) );                     // Checksu
 363:../../../src/drivers/platform/micaZ/source/eDIP240-7_TouchPanel_driver.c ****  do                                    // Wait for receiving ack from the display
 364:../../../src/drivers/platform/micaZ/source/eDIP240-7_TouchPanel_driver.c ****  {
 365:../../../src/drivers/platform/micaZ/source/eDIP240-7_TouchPanel_driver.c **** 	ack = USART0_getchar();
 289               	.LM10:
 290 00b6 0E94 0000 		call USART0_getchar
 366:../../../src/drivers/platform/micaZ/source/eDIP240-7_TouchPanel_driver.c **** 	ack_timeout--;
 292               	.LM11:
 293 00ba 2981      		ldd r18,Y+1
 294 00bc 3A81      		ldd r19,Y+2
 295 00be 4B81      		ldd r20,Y+3
 296 00c0 5C81      		ldd r21,Y+4
 297 00c2 2150      		subi r18,lo8(-(-1))
 298 00c4 3040      		sbci r19,hi8(-(-1))
 299 00c6 4040      		sbci r20,hlo8(-(-1))
 300 00c8 5040      		sbci r21,hhi8(-(-1))
 301 00ca 2983      		std Y+1,r18
 302 00cc 3A83      		std Y+2,r19
 303 00ce 4B83      		std Y+3,r20
 304 00d0 5C83      		std Y+4,r21
 367:../../../src/drivers/platform/micaZ/source/eDIP240-7_TouchPanel_driver.c ****  }while((ack != 0x06) && (ack_timeout > 0));
 306               	.LM12:
 307 00d2 8630      		cpi r24,lo8(6)
 308 00d4 01F0      		breq .L8
 309 00d6 8981      		ldd r24,Y+1
 310 00d8 9A81      		ldd r25,Y+2
 311 00da AB81      		ldd r26,Y+3
 312 00dc BC81      		ldd r27,Y+4
 313 00de 0097      		sbiw r24,0
 314 00e0 A105      		cpc r26,__zero_reg__
 315 00e2 B105      		cpc r27,__zero_reg__
 316 00e4 01F4      		brne .L9
 368:../../../src/drivers/platform/micaZ/source/eDIP240-7_TouchPanel_driver.c ****  if (ack != 0x06) return (-1);
 318               	.LM13:
 319 00e6 8FEF      		ldi r24,lo8(-1)
 320 00e8 00C0      		rjmp .L10
 321               	.L8:
 322 00ea 80E0      		ldi r24,lo8(0)
 323               	.L10:
 324               	/* epilogue start */
 369:../../../src/drivers/platform/micaZ/source/eDIP240-7_TouchPanel_driver.c ****  return 0;
 370:../../../src/drivers/platform/micaZ/source/eDIP240-7_TouchPanel_driver.c **** }
 326               	.LM14:
 327 00ec 0F90      		pop __tmp_reg__
 328 00ee 0F90      		pop __tmp_reg__
 329 00f0 0F90      		pop __tmp_reg__
 330 00f2 0F90      		pop __tmp_reg__
 331 00f4 CF91      		pop r28
 332 00f6 DF91      		pop r29
 333 00f8 1F91      		pop r17
 334 00fa 0895      		ret
 339               	.Lscope3:
 341               		.stabd	78,0,0
 344               	.global	eDIP240_7_Display_select
 346               	eDIP240_7_Display_select:
 347               		.stabd	46,0,0
 329:../../../src/drivers/platform/micaZ/source/eDIP240-7_TouchPanel_driver.c **** {
 349               	.LM15:
 350               	.LFBB4:
 351 00fc 1F93      		push r17
 352 00fe DF93      		push r29
 353 0100 CF93      		push r28
 354 0102 00D0      		rcall .
 355 0104 00D0      		rcall .
 356 0106 CDB7      		in r28,__SP_L__
 357 0108 DEB7      		in r29,__SP_H__
 358               	/* prologue: function */
 359               	/* frame size = 4 */
 360 010a 182F      		mov r17,r24
 331:../../../src/drivers/platform/micaZ/source/eDIP240-7_TouchPanel_driver.c ****  volatile unsigned long ack_timeout=1000000;
 362               	.LM16:
 363 010c 80E4      		ldi r24,lo8(1000000)
 364 010e 92E4      		ldi r25,hi8(1000000)
 365 0110 AFE0      		ldi r26,hlo8(1000000)
 366 0112 B0E0      		ldi r27,hhi8(1000000)
 367 0114 8983      		std Y+1,r24
 368 0116 9A83      		std Y+2,r25
 369 0118 AB83      		std Y+3,r26
 370 011a BC83      		std Y+4,r27
 371               	.LBB90:
 372               	.LBB91:
  39:../../../src/drivers/platform/micaZ/source/eDIP240-7_TouchPanel_driver.c **** 	putchar(data);
 374               	.LM17:
 375 011c 6091 0000 		lds r22,__iob+2
 376 0120 7091 0000 		lds r23,(__iob+2)+1
 377 0124 82E1      		ldi r24,lo8(18)
 378 0126 90E0      		ldi r25,hi8(18)
 379 0128 0E94 0000 		call fputc
 380               	.LBE91:
 381               	.LBE90:
 382               	.LBB92:
 383               	.LBB93:
 384 012c 6091 0000 		lds r22,__iob+2
 385 0130 7091 0000 		lds r23,(__iob+2)+1
 386 0134 83E0      		ldi r24,lo8(3)
 387 0136 90E0      		ldi r25,hi8(3)
 388 0138 0E94 0000 		call fputc
 389               	.LBE93:
 390               	.LBE92:
 391               	.LBB94:
 392               	.LBB95:
 393 013c 6091 0000 		lds r22,__iob+2
 394 0140 7091 0000 		lds r23,(__iob+2)+1
 395 0144 81E4      		ldi r24,lo8(65)
 396 0146 90E0      		ldi r25,hi8(65)
 397 0148 0E94 0000 		call fputc
 398               	.LBE95:
 399               	.LBE94:
 400               	.LBB96:
 401               	.LBB97:
 402 014c 6091 0000 		lds r22,__iob+2
 403 0150 7091 0000 		lds r23,(__iob+2)+1
 404 0154 83E5      		ldi r24,lo8(83)
 405 0156 90E0      		ldi r25,hi8(83)
 406 0158 0E94 0000 		call fputc
 407               	.LBE97:
 408               	.LBE96:
 409               	.LBB98:
 410               	.LBB99:
 411 015c 6091 0000 		lds r22,__iob+2
 412 0160 7091 0000 		lds r23,(__iob+2)+1
 413 0164 812F      		mov r24,r17
 414 0166 90E0      		ldi r25,lo8(0)
 415 0168 0E94 0000 		call fputc
 416               	.LBE99:
 417               	.LBE98:
 418               	.LBB100:
 419               	.LBB101:
 420 016c 6091 0000 		lds r22,__iob+2
 421 0170 7091 0000 		lds r23,(__iob+2)+1
 422 0174 812F      		mov r24,r17
 423 0176 8755      		subi r24,lo8(-(-87))
 424 0178 90E0      		ldi r25,lo8(0)
 425 017a 0E94 0000 		call fputc
 426               	.L15:
 427               	.LBE101:
 428               	.LBE100:
 341:../../../src/drivers/platform/micaZ/source/eDIP240-7_TouchPanel_driver.c **** 	ack = USART0_getchar();
 430               	.LM18:
 431 017e 0E94 0000 		call USART0_getchar
 342:../../../src/drivers/platform/micaZ/source/eDIP240-7_TouchPanel_driver.c **** 	ack_timeout--;
 433               	.LM19:
 434 0182 2981      		ldd r18,Y+1
 435 0184 3A81      		ldd r19,Y+2
 436 0186 4B81      		ldd r20,Y+3
 437 0188 5C81      		ldd r21,Y+4
 438 018a 2150      		subi r18,lo8(-(-1))
 439 018c 3040      		sbci r19,hi8(-(-1))
 440 018e 4040      		sbci r20,hlo8(-(-1))
 441 0190 5040      		sbci r21,hhi8(-(-1))
 442 0192 2983      		std Y+1,r18
 443 0194 3A83      		std Y+2,r19
 444 0196 4B83      		std Y+3,r20
 445 0198 5C83      		std Y+4,r21
 343:../../../src/drivers/platform/micaZ/source/eDIP240-7_TouchPanel_driver.c ****  }while((ack != 0x06) && (ack_timeout > 0));
 447               	.LM20:
 448 019a 8630      		cpi r24,lo8(6)
 449 019c 01F0      		breq .L14
 450 019e 8981      		ldd r24,Y+1
 451 01a0 9A81      		ldd r25,Y+2
 452 01a2 AB81      		ldd r26,Y+3
 453 01a4 BC81      		ldd r27,Y+4
 454 01a6 0097      		sbiw r24,0
 455 01a8 A105      		cpc r26,__zero_reg__
 456 01aa B105      		cpc r27,__zero_reg__
 457 01ac 01F4      		brne .L15
 344:../../../src/drivers/platform/micaZ/source/eDIP240-7_TouchPanel_driver.c ****  if (ack != 0x06) return (-1);
 459               	.LM21:
 460 01ae 8FEF      		ldi r24,lo8(-1)
 461 01b0 00C0      		rjmp .L16
 462               	.L14:
 463 01b2 80E0      		ldi r24,lo8(0)
 464               	.L16:
 465               	/* epilogue start */
 346:../../../src/drivers/platform/micaZ/source/eDIP240-7_TouchPanel_driver.c **** }
 467               	.LM22:
 468 01b4 0F90      		pop __tmp_reg__
 469 01b6 0F90      		pop __tmp_reg__
 470 01b8 0F90      		pop __tmp_reg__
 471 01ba 0F90      		pop __tmp_reg__
 472 01bc CF91      		pop r28
 473 01be DF91      		pop r29
 474 01c0 1F91      		pop r17
 475 01c2 0895      		ret
 480               	.Lscope4:
 482               		.stabd	78,0,0
 484               	.global	eDIP240_7_Display_repeat_last_packet
 486               	eDIP240_7_Display_repeat_last_packet:
 487               		.stabd	46,0,0
 282:../../../src/drivers/platform/micaZ/source/eDIP240-7_TouchPanel_driver.c **** {
 489               	.LM23:
 490               	.LFBB5:
 491 01c4 EF92      		push r14
 492 01c6 FF92      		push r15
 493 01c8 0F93      		push r16
 494 01ca 1F93      		push r17
 495 01cc DF93      		push r29
 496 01ce CF93      		push r28
 497 01d0 00D0      		rcall .
 498 01d2 00D0      		rcall .
 499 01d4 CDB7      		in r28,__SP_L__
 500 01d6 DEB7      		in r29,__SP_H__
 501               	/* prologue: function */
 502               	/* frame size = 4 */
 503 01d8 182F      		mov r17,r24
 504 01da F92E      		mov r15,r25
 285:../../../src/drivers/platform/micaZ/source/eDIP240-7_TouchPanel_driver.c ****  volatile unsigned long ack_timeout=1000000;
 506               	.LM24:
 507 01dc 80E4      		ldi r24,lo8(1000000)
 508 01de 92E4      		ldi r25,hi8(1000000)
 509 01e0 AFE0      		ldi r26,hlo8(1000000)
 510 01e2 B0E0      		ldi r27,hhi8(1000000)
 511 01e4 8983      		std Y+1,r24
 512 01e6 9A83      		std Y+2,r25
 513 01e8 AB83      		std Y+3,r26
 514 01ea BC83      		std Y+4,r27
 515               	.LBB102:
 516               	.LBB103:
  39:../../../src/drivers/platform/micaZ/source/eDIP240-7_TouchPanel_driver.c **** 	putchar(data);
 518               	.LM25:
 519 01ec 6091 0000 		lds r22,__iob+2
 520 01f0 7091 0000 		lds r23,(__iob+2)+1
 521 01f4 82E1      		ldi r24,lo8(18)
 522 01f6 90E0      		ldi r25,hi8(18)
 523 01f8 0E94 0000 		call fputc
 524               	.LBE103:
 525               	.LBE102:
 526               	.LBB104:
 527               	.LBB105:
 528 01fc 6091 0000 		lds r22,__iob+2
 529 0200 7091 0000 		lds r23,(__iob+2)+1
 530 0204 81E0      		ldi r24,lo8(1)
 531 0206 90E0      		ldi r25,hi8(1)
 532 0208 0E94 0000 		call fputc
 533               	.LBE105:
 534               	.LBE104:
 535               	.LBB106:
 536               	.LBB107:
 537 020c 6091 0000 		lds r22,__iob+2
 538 0210 7091 0000 		lds r23,(__iob+2)+1
 539 0214 82E5      		ldi r24,lo8(82)
 540 0216 90E0      		ldi r25,hi8(82)
 541 0218 0E94 0000 		call fputc
 542               	.LBE107:
 543               	.LBE106:
 544               	.LBB108:
 545               	.LBB109:
 546 021c 6091 0000 		lds r22,__iob+2
 547 0220 7091 0000 		lds r23,(__iob+2)+1
 548 0224 85E6      		ldi r24,lo8(101)
 549 0226 90E0      		ldi r25,hi8(101)
 550 0228 0E94 0000 		call fputc
 551               	.L21:
 552               	.LBE109:
 553               	.LBE108:
 293:../../../src/drivers/platform/micaZ/source/eDIP240-7_TouchPanel_driver.c **** 	ack = USART0_getchar();
 555               	.LM26:
 556 022c 0E94 0000 		call USART0_getchar
 294:../../../src/drivers/platform/micaZ/source/eDIP240-7_TouchPanel_driver.c **** 	ack_timeout--;
 558               	.LM27:
 559 0230 2981      		ldd r18,Y+1
 560 0232 3A81      		ldd r19,Y+2
 561 0234 4B81      		ldd r20,Y+3
 562 0236 5C81      		ldd r21,Y+4
 563 0238 2150      		subi r18,lo8(-(-1))
 564 023a 3040      		sbci r19,hi8(-(-1))
 565 023c 4040      		sbci r20,hlo8(-(-1))
 566 023e 5040      		sbci r21,hhi8(-(-1))
 567 0240 2983      		std Y+1,r18
 568 0242 3A83      		std Y+2,r19
 569 0244 4B83      		std Y+3,r20
 570 0246 5C83      		std Y+4,r21
 295:../../../src/drivers/platform/micaZ/source/eDIP240-7_TouchPanel_driver.c ****  }while((ack != 0x06) && (ack_timeout > 0));
 572               	.LM28:
 573 0248 8630      		cpi r24,lo8(6)
 574 024a 01F0      		breq .L32
 575 024c 8981      		ldd r24,Y+1
 576 024e 9A81      		ldd r25,Y+2
 577 0250 AB81      		ldd r26,Y+3
 578 0252 BC81      		ldd r27,Y+4
 579 0254 0097      		sbiw r24,0
 580 0256 A105      		cpc r26,__zero_reg__
 581 0258 B105      		cpc r27,__zero_reg__
 582 025a 01F4      		brne .L21
 296:../../../src/drivers/platform/micaZ/source/eDIP240-7_TouchPanel_driver.c ****  if (ack != 0x06) return (-1);
 584               	.LM29:
 585 025c 8FEF      		ldi r24,lo8(-1)
 586 025e 00C0      		rjmp .L22
 587               	.L32:
 299:../../../src/drivers/platform/micaZ/source/eDIP240-7_TouchPanel_driver.c ****  do{ ch = USART0_getchar(); }while (ch == -1);       // Get the command byte
 589               	.LM30:
 590 0260 0E94 0000 		call USART0_getchar
 591 0264 2FEF      		ldi r18,hi8(-1)
 592 0266 8F3F      		cpi r24,lo8(-1)
 593 0268 9207      		cpc r25,r18
 594 026a 01F0      		breq .L32
 300:../../../src/drivers/platform/micaZ/source/eDIP240-7_TouchPanel_driver.c ****  if (ch == 0x11)                                     // Abort if command byte is incorrect
 596               	.LM31:
 597 026c 4197      		sbiw r24,17
 598 026e 01F4      		brne .L23
 599               	.L31:
 302:../../../src/drivers/platform/micaZ/source/eDIP240-7_TouchPanel_driver.c **** 	do{ ch = USART0_getchar(); }while (ch == -1);     // Get payload length
 601               	.LM32:
 602 0270 0E94 0000 		call USART0_getchar
 603 0274 EFEF      		ldi r30,hi8(-1)
 604 0276 8F3F      		cpi r24,lo8(-1)
 605 0278 9E07      		cpc r25,r30
 606 027a 01F0      		breq .L31
 303:../../../src/drivers/platform/micaZ/source/eDIP240-7_TouchPanel_driver.c **** 	length = ch;
 608               	.LM33:
 609 027c 082F      		mov r16,r24
 610 027e 812F      		mov r24,r17
 611 0280 9F2D      		mov r25,r15
 612 0282 9C01      		movw r18,r24
 613 0284 7901      		movw r14,r18
 614 0286 10E0      		ldi r17,lo8(0)
 615 0288 00C0      		rjmp .L25
 616               	.L30:
 307:../../../src/drivers/platform/micaZ/source/eDIP240-7_TouchPanel_driver.c **** 	  do{ ch = USART0_getchar(); }while (ch == -1);   // Get payload data
 618               	.LM34:
 619 028a 0E94 0000 		call USART0_getchar
 620 028e FFEF      		ldi r31,hi8(-1)
 621 0290 8F3F      		cpi r24,lo8(-1)
 622 0292 9F07      		cpc r25,r31
 623 0294 01F0      		breq .L30
 308:../../../src/drivers/platform/micaZ/source/eDIP240-7_TouchPanel_driver.c **** 	  data[i] = ch;
 625               	.LM35:
 626 0296 F701      		movw r30,r14
 627 0298 8193      		st Z+,r24
 628 029a 7F01      		movw r14,r30
 310:../../../src/drivers/platform/micaZ/source/eDIP240-7_TouchPanel_driver.c **** 	  i++;
 630               	.LM36:
 631 029c 1F5F      		subi r17,lo8(-(1))
 632               	.L25:
 305:../../../src/drivers/platform/micaZ/source/eDIP240-7_TouchPanel_driver.c **** 	while (i < length)
 634               	.LM37:
 635 029e 1017      		cp r17,r16
 636 02a0 00F0      		brlo .L30
 637               	.L29:
 313:../../../src/drivers/platform/micaZ/source/eDIP240-7_TouchPanel_driver.c **** 	do{ ch = USART0_getchar(); }while (ch == -1);   // Get checksum
 639               	.LM38:
 640 02a2 0E94 0000 		call USART0_getchar
 641 02a6 8F5F      		subi r24,lo8(-1)
 642 02a8 9F4F      		sbci r25,hi8(-1)
 643 02aa 01F0      		breq .L29
 644               	.L23:
 645 02ac 80E0      		ldi r24,lo8(0)
 646               	.L22:
 647               	/* epilogue start */
 321:../../../src/drivers/platform/micaZ/source/eDIP240-7_TouchPanel_driver.c **** }
 649               	.LM39:
 650 02ae 0F90      		pop __tmp_reg__
 651 02b0 0F90      		pop __tmp_reg__
 652 02b2 0F90      		pop __tmp_reg__
 653 02b4 0F90      		pop __tmp_reg__
 654 02b6 CF91      		pop r28
 655 02b8 DF91      		pop r29
 656 02ba 1F91      		pop r17
 657 02bc 0F91      		pop r16
 658 02be FF90      		pop r15
 659 02c0 EF90      		pop r14
 660 02c2 0895      		ret
 668               	.Lscope5:
 670               		.stabd	78,0,0
 675               	.global	eDIP240_7_Display_get_protocoll_info
 677               	eDIP240_7_Display_get_protocoll_info:
 678               		.stabd	46,0,0
 221:../../../src/drivers/platform/micaZ/source/eDIP240-7_TouchPanel_driver.c **** {
 680               	.LM40:
 681               	.LFBB6:
 682 02c4 AF92      		push r10
 683 02c6 BF92      		push r11
 684 02c8 CF92      		push r12
 685 02ca DF92      		push r13
 686 02cc EF92      		push r14
 687 02ce FF92      		push r15
 688 02d0 0F93      		push r16
 689 02d2 1F93      		push r17
 690 02d4 DF93      		push r29
 691 02d6 CF93      		push r28
 692 02d8 00D0      		rcall .
 693 02da 00D0      		rcall .
 694 02dc CDB7      		in r28,__SP_L__
 695 02de DEB7      		in r29,__SP_H__
 696               	/* prologue: function */
 697               	/* frame size = 4 */
 698 02e0 7C01      		movw r14,r24
 699 02e2 6B01      		movw r12,r22
 700 02e4 5A01      		movw r10,r20
 224:../../../src/drivers/platform/micaZ/source/eDIP240-7_TouchPanel_driver.c ****  volatile unsigned long ack_timeout=1000000;
 702               	.LM41:
 703 02e6 80E4      		ldi r24,lo8(1000000)
 704 02e8 92E4      		ldi r25,hi8(1000000)
 705 02ea AFE0      		ldi r26,hlo8(1000000)
 706 02ec B0E0      		ldi r27,hhi8(1000000)
 707 02ee 8983      		std Y+1,r24
 708 02f0 9A83      		std Y+2,r25
 709 02f2 AB83      		std Y+3,r26
 710 02f4 BC83      		std Y+4,r27
 711               	.LBB110:
 712               	.LBB111:
  39:../../../src/drivers/platform/micaZ/source/eDIP240-7_TouchPanel_driver.c **** 	putchar(data);
 714               	.LM42:
 715 02f6 6091 0000 		lds r22,__iob+2
 716 02fa 7091 0000 		lds r23,(__iob+2)+1
 717 02fe 82E1      		ldi r24,lo8(18)
 718 0300 90E0      		ldi r25,hi8(18)
 719 0302 0E94 0000 		call fputc
 720               	.LBE111:
 721               	.LBE110:
 722               	.LBB112:
 723               	.LBB113:
 724 0306 6091 0000 		lds r22,__iob+2
 725 030a 7091 0000 		lds r23,(__iob+2)+1
 726 030e 81E0      		ldi r24,lo8(1)
 727 0310 90E0      		ldi r25,hi8(1)
 728 0312 0E94 0000 		call fputc
 729               	.LBE113:
 730               	.LBE112:
 731               	.LBB114:
 732               	.LBB115:
 733 0316 6091 0000 		lds r22,__iob+2
 734 031a 7091 0000 		lds r23,(__iob+2)+1
 735 031e 80E5      		ldi r24,lo8(80)
 736 0320 90E0      		ldi r25,hi8(80)
 737 0322 0E94 0000 		call fputc
 738               	.LBE115:
 739               	.LBE114:
 740               	.LBB116:
 741               	.LBB117:
 742 0326 6091 0000 		lds r22,__iob+2
 743 032a 7091 0000 		lds r23,(__iob+2)+1
 744 032e 83E6      		ldi r24,lo8(99)
 745 0330 90E0      		ldi r25,hi8(99)
 746 0332 0E94 0000 		call fputc
 747               	.L40:
 748               	.LBE117:
 749               	.LBE116:
 232:../../../src/drivers/platform/micaZ/source/eDIP240-7_TouchPanel_driver.c **** 	ack = USART0_getchar();
 751               	.LM43:
 752 0336 0E94 0000 		call USART0_getchar
 233:../../../src/drivers/platform/micaZ/source/eDIP240-7_TouchPanel_driver.c **** 	ack_timeout--;
 754               	.LM44:
 755 033a 2981      		ldd r18,Y+1
 756 033c 3A81      		ldd r19,Y+2
 757 033e 4B81      		ldd r20,Y+3
 758 0340 5C81      		ldd r21,Y+4
 759 0342 2150      		subi r18,lo8(-(-1))
 760 0344 3040      		sbci r19,hi8(-(-1))
 761 0346 4040      		sbci r20,hlo8(-(-1))
 762 0348 5040      		sbci r21,hhi8(-(-1))
 763 034a 2983      		std Y+1,r18
 764 034c 3A83      		std Y+2,r19
 765 034e 4B83      		std Y+3,r20
 766 0350 5C83      		std Y+4,r21
 234:../../../src/drivers/platform/micaZ/source/eDIP240-7_TouchPanel_driver.c ****  }while((ack != 0x06) && (ack_timeout > 0));
 768               	.LM45:
 769 0352 8630      		cpi r24,lo8(6)
 770 0354 01F0      		breq .L51
 771 0356 8981      		ldd r24,Y+1
 772 0358 9A81      		ldd r25,Y+2
 773 035a AB81      		ldd r26,Y+3
 774 035c BC81      		ldd r27,Y+4
 775 035e 0097      		sbiw r24,0
 776 0360 A105      		cpc r26,__zero_reg__
 777 0362 B105      		cpc r27,__zero_reg__
 778 0364 01F4      		brne .L40
 779 0366 00C0      		rjmp .L41
 780               	.L51:
 238:../../../src/drivers/platform/micaZ/source/eDIP240-7_TouchPanel_driver.c ****  do{ ch = USART0_getchar(); }while (ch == -1);       // Get the command byte
 782               	.LM46:
 783 0368 0E94 0000 		call USART0_getchar
 784 036c 2FEF      		ldi r18,hi8(-1)
 785 036e 8F3F      		cpi r24,lo8(-1)
 786 0370 9207      		cpc r25,r18
 787 0372 01F0      		breq .L51
 239:../../../src/drivers/platform/micaZ/source/eDIP240-7_TouchPanel_driver.c ****  if (ch == 0x12)                                     // Abort if command byte is incorrect
 789               	.LM47:
 790 0374 4297      		sbiw r24,18
 791 0376 01F4      		brne .L41
 792               	.L50:
 241:../../../src/drivers/platform/micaZ/source/eDIP240-7_TouchPanel_driver.c **** 	do{ ch = USART0_getchar(); }while (ch == -1);     // Get payload length
 794               	.LM48:
 795 0378 0E94 0000 		call USART0_getchar
 796 037c EFEF      		ldi r30,hi8(-1)
 797 037e 8F3F      		cpi r24,lo8(-1)
 798 0380 9E07      		cpc r25,r30
 799 0382 01F0      		breq .L50
 243:../../../src/drivers/platform/micaZ/source/eDIP240-7_TouchPanel_driver.c **** 	if (length == 3)                                  // Abort if length is incorrect
 801               	.LM49:
 802 0384 8330      		cpi r24,lo8(3)
 803 0386 01F4      		brne .L41
 804               	.L49:
 247:../../../src/drivers/platform/micaZ/source/eDIP240-7_TouchPanel_driver.c **** 	  do{ ch = USART0_getchar(); }while (ch == -1);   // Get payload data
 806               	.LM50:
 807 0388 0E94 0000 		call USART0_getchar
 808 038c FFEF      		ldi r31,hi8(-1)
 809 038e 8F3F      		cpi r24,lo8(-1)
 810 0390 9F07      		cpc r25,r31
 811 0392 01F0      		breq .L49
 248:../../../src/drivers/platform/micaZ/source/eDIP240-7_TouchPanel_driver.c **** 	  checksum += ch;                                 // Calculate checksum
 813               	.LM51:
 814 0394 182F      		mov r17,r24
 249:../../../src/drivers/platform/micaZ/source/eDIP240-7_TouchPanel_driver.c **** 	  *sendbuffer_size = ch;
 816               	.LM52:
 817 0396 F701      		movw r30,r14
 818 0398 8083      		st Z,r24
 819               	.L44:
 251:../../../src/drivers/platform/micaZ/source/eDIP240-7_TouchPanel_driver.c **** 	  do{ ch = USART0_getchar(); }while (ch == -1);   // Get payload data
 821               	.LM53:
 822 039a 0E94 0000 		call USART0_getchar
 823 039e FFEF      		ldi r31,hi8(-1)
 824 03a0 8F3F      		cpi r24,lo8(-1)
 825 03a2 9F07      		cpc r25,r31
 826 03a4 01F0      		breq .L44
 252:../../../src/drivers/platform/micaZ/source/eDIP240-7_TouchPanel_driver.c **** 	  checksum += ch;                                 // Calculate checksum
 828               	.LM54:
 829 03a6 F82E      		mov r15,r24
 253:../../../src/drivers/platform/micaZ/source/eDIP240-7_TouchPanel_driver.c **** 	  *sendbuffer_level = ch;
 831               	.LM55:
 832 03a8 F601      		movw r30,r12
 833 03aa 8083      		st Z,r24
 834               	.L45:
 255:../../../src/drivers/platform/micaZ/source/eDIP240-7_TouchPanel_driver.c **** 	  do{ ch = USART0_getchar(); }while (ch == -1);   // Get payload data
 836               	.LM56:
 837 03ac 0E94 0000 		call USART0_getchar
 838 03b0 FFEF      		ldi r31,hi8(-1)
 839 03b2 8F3F      		cpi r24,lo8(-1)
 840 03b4 9F07      		cpc r25,r31
 841 03b6 01F0      		breq .L45
 256:../../../src/drivers/platform/micaZ/source/eDIP240-7_TouchPanel_driver.c **** 	  checksum += ch;                                 // Calculate checksum
 843               	.LM57:
 844 03b8 082F      		mov r16,r24
 257:../../../src/drivers/platform/micaZ/source/eDIP240-7_TouchPanel_driver.c **** 	  *timeout = ch;
 846               	.LM58:
 847 03ba F501      		movw r30,r10
 848 03bc 8083      		st Z,r24
 849               	.L46:
 260:../../../src/drivers/platform/micaZ/source/eDIP240-7_TouchPanel_driver.c **** 	  do{ ch = USART0_getchar(); }while (ch == -1);   // Get checksum
 851               	.LM59:
 852 03be 0E94 0000 		call USART0_getchar
 853 03c2 9C01      		movw r18,r24
 854 03c4 FFEF      		ldi r31,hi8(-1)
 855 03c6 8F3F      		cpi r24,lo8(-1)
 856 03c8 9F07      		cpc r25,r31
 857 03ca 01F0      		breq .L46
 248:../../../src/drivers/platform/micaZ/source/eDIP240-7_TouchPanel_driver.c **** 	  checksum += ch;                                 // Calculate checksum
 859               	.LM60:
 860 03cc 1B5E      		subi r17,lo8(-(21))
 252:../../../src/drivers/platform/micaZ/source/eDIP240-7_TouchPanel_driver.c **** 	  checksum += ch;                                 // Calculate checksum
 862               	.LM61:
 863 03ce 1F0D      		add r17,r15
 262:../../../src/drivers/platform/micaZ/source/eDIP240-7_TouchPanel_driver.c **** 	  if (ch != checksum) error = 1;
 865               	.LM62:
 866 03d0 100F      		add r17,r16
 867 03d2 812F      		mov r24,r17
 868 03d4 90E0      		ldi r25,lo8(0)
 869 03d6 2817      		cp r18,r24
 870 03d8 3907      		cpc r19,r25
 871 03da 01F4      		brne .L41
 872 03dc 80E0      		ldi r24,lo8(0)
 873 03de 00C0      		rjmp .L47
 874               	.L41:
 875 03e0 8FEF      		ldi r24,lo8(-1)
 876               	.L47:
 877               	/* epilogue start */
 273:../../../src/drivers/platform/micaZ/source/eDIP240-7_TouchPanel_driver.c **** }
 879               	.LM63:
 880 03e2 0F90      		pop __tmp_reg__
 881 03e4 0F90      		pop __tmp_reg__
 882 03e6 0F90      		pop __tmp_reg__
 883 03e8 0F90      		pop __tmp_reg__
 884 03ea CF91      		pop r28
 885 03ec DF91      		pop r29
 886 03ee 1F91      		pop r17
 887 03f0 0F91      		pop r16
 888 03f2 FF90      		pop r15
 889 03f4 EF90      		pop r14
 890 03f6 DF90      		pop r13
 891 03f8 CF90      		pop r12
 892 03fa BF90      		pop r11
 893 03fc AF90      		pop r10
 894 03fe 0895      		ret
 900               	.Lscope6:
 902               		.stabd	78,0,0
 906               	.global	eDIP240_7_Display_set_protocol
 908               	eDIP240_7_Display_set_protocol:
 909               		.stabd	46,0,0
 194:../../../src/drivers/platform/micaZ/source/eDIP240-7_TouchPanel_driver.c **** {
 911               	.LM64:
 912               	.LFBB7:
 913 0400 0F93      		push r16
 914 0402 1F93      		push r17
 915 0404 DF93      		push r29
 916 0406 CF93      		push r28
 917 0408 00D0      		rcall .
 918 040a 00D0      		rcall .
 919 040c CDB7      		in r28,__SP_L__
 920 040e DEB7      		in r29,__SP_H__
 921               	/* prologue: function */
 922               	/* frame size = 4 */
 923 0410 182F      		mov r17,r24
 924 0412 062F      		mov r16,r22
 196:../../../src/drivers/platform/micaZ/source/eDIP240-7_TouchPanel_driver.c ****  volatile unsigned long ack_timeout=1000000;
 926               	.LM65:
 927 0414 80E4      		ldi r24,lo8(1000000)
 928 0416 92E4      		ldi r25,hi8(1000000)
 929 0418 AFE0      		ldi r26,hlo8(1000000)
 930 041a B0E0      		ldi r27,hhi8(1000000)
 931 041c 8983      		std Y+1,r24
 932 041e 9A83      		std Y+2,r25
 933 0420 AB83      		std Y+3,r26
 934 0422 BC83      		std Y+4,r27
 935               	.LBB118:
 936               	.LBB119:
  39:../../../src/drivers/platform/micaZ/source/eDIP240-7_TouchPanel_driver.c **** 	putchar(data);
 938               	.LM66:
 939 0424 6091 0000 		lds r22,__iob+2
 940 0428 7091 0000 		lds r23,(__iob+2)+1
 941 042c 82E1      		ldi r24,lo8(18)
 942 042e 90E0      		ldi r25,hi8(18)
 943 0430 0E94 0000 		call fputc
 944               	.LBE119:
 945               	.LBE118:
 946               	.LBB120:
 947               	.LBB121:
 948 0434 6091 0000 		lds r22,__iob+2
 949 0438 7091 0000 		lds r23,(__iob+2)+1
 950 043c 83E0      		ldi r24,lo8(3)
 951 043e 90E0      		ldi r25,hi8(3)
 952 0440 0E94 0000 		call fputc
 953               	.LBE121:
 954               	.LBE120:
 955               	.LBB122:
 956               	.LBB123:
 957 0444 6091 0000 		lds r22,__iob+2
 958 0448 7091 0000 		lds r23,(__iob+2)+1
 959 044c 84E4      		ldi r24,lo8(68)
 960 044e 90E0      		ldi r25,hi8(68)
 961 0450 0E94 0000 		call fputc
 962               	.LBE123:
 963               	.LBE122:
 964               	.LBB124:
 965               	.LBB125:
 966 0454 6091 0000 		lds r22,__iob+2
 967 0458 7091 0000 		lds r23,(__iob+2)+1
 968 045c 812F      		mov r24,r17
 969 045e 90E0      		ldi r25,lo8(0)
 970 0460 0E94 0000 		call fputc
 971               	.LBE125:
 972               	.LBE124:
 973               	.LBB126:
 974               	.LBB127:
 975 0464 6091 0000 		lds r22,__iob+2
 976 0468 7091 0000 		lds r23,(__iob+2)+1
 977 046c 802F      		mov r24,r16
 978 046e 90E0      		ldi r25,lo8(0)
 979 0470 0E94 0000 		call fputc
 980               	.LBE127:
 981               	.LBE126:
 982               	.LBB128:
 983               	.LBB129:
 984 0474 175A      		subi r17,lo8(-(89))
 985 0476 6091 0000 		lds r22,__iob+2
 986 047a 7091 0000 		lds r23,(__iob+2)+1
 987 047e 812F      		mov r24,r17
 988 0480 800F      		add r24,r16
 989 0482 90E0      		ldi r25,lo8(0)
 990 0484 0E94 0000 		call fputc
 991               	.L61:
 992               	.LBE129:
 993               	.LBE128:
 206:../../../src/drivers/platform/micaZ/source/eDIP240-7_TouchPanel_driver.c **** 	ack = USART0_getchar();
 995               	.LM67:
 996 0488 0E94 0000 		call USART0_getchar
 207:../../../src/drivers/platform/micaZ/source/eDIP240-7_TouchPanel_driver.c **** 	ack_timeout--;
 998               	.LM68:
 999 048c 2981      		ldd r18,Y+1
 1000 048e 3A81      		ldd r19,Y+2
 1001 0490 4B81      		ldd r20,Y+3
 1002 0492 5C81      		ldd r21,Y+4
 1003 0494 2150      		subi r18,lo8(-(-1))
 1004 0496 3040      		sbci r19,hi8(-(-1))
 1005 0498 4040      		sbci r20,hlo8(-(-1))
 1006 049a 5040      		sbci r21,hhi8(-(-1))
 1007 049c 2983      		std Y+1,r18
 1008 049e 3A83      		std Y+2,r19
 1009 04a0 4B83      		std Y+3,r20
 1010 04a2 5C83      		std Y+4,r21
 208:../../../src/drivers/platform/micaZ/source/eDIP240-7_TouchPanel_driver.c ****  }while((ack != 0x06) && (ack_timeout > 0));
 1012               	.LM69:
 1013 04a4 8630      		cpi r24,lo8(6)
 1014 04a6 01F0      		breq .L60
 1015 04a8 8981      		ldd r24,Y+1
 1016 04aa 9A81      		ldd r25,Y+2
 1017 04ac AB81      		ldd r26,Y+3
 1018 04ae BC81      		ldd r27,Y+4
 1019 04b0 0097      		sbiw r24,0
 1020 04b2 A105      		cpc r26,__zero_reg__
 1021 04b4 B105      		cpc r27,__zero_reg__
 1022 04b6 01F4      		brne .L61
 209:../../../src/drivers/platform/micaZ/source/eDIP240-7_TouchPanel_driver.c ****  if (ack != 0x06) return (-1);
 1024               	.LM70:
 1025 04b8 8FEF      		ldi r24,lo8(-1)
 1026 04ba 00C0      		rjmp .L62
 1027               	.L60:
 1028 04bc 80E0      		ldi r24,lo8(0)
 1029               	.L62:
 1030               	/* epilogue start */
 211:../../../src/drivers/platform/micaZ/source/eDIP240-7_TouchPanel_driver.c **** }
 1032               	.LM71:
 1033 04be 0F90      		pop __tmp_reg__
 1034 04c0 0F90      		pop __tmp_reg__
 1035 04c2 0F90      		pop __tmp_reg__
 1036 04c4 0F90      		pop __tmp_reg__
 1037 04c6 CF91      		pop r28
 1038 04c8 DF91      		pop r29
 1039 04ca 1F91      		pop r17
 1040 04cc 0F91      		pop r16
 1041 04ce 0895      		ret
 1046               	.Lscope7:
 1048               		.stabd	78,0,0
 1052               	.global	eDIP240_7_Display_request_buffer_info
 1054               	eDIP240_7_Display_request_buffer_info:
 1055               		.stabd	46,0,0
 140:../../../src/drivers/platform/micaZ/source/eDIP240-7_TouchPanel_driver.c **** {
 1057               	.LM72:
 1058               	.LFBB8:
 1059 04d0 AF92      		push r10
 1060 04d2 BF92      		push r11
 1061 04d4 CF92      		push r12
 1062 04d6 DF92      		push r13
 1063 04d8 FF92      		push r15
 1064 04da 0F93      		push r16
 1065 04dc 1F93      		push r17
 1066 04de DF93      		push r29
 1067 04e0 CF93      		push r28
 1068 04e2 00D0      		rcall .
 1069 04e4 00D0      		rcall .
 1070 04e6 CDB7      		in r28,__SP_L__
 1071 04e8 DEB7      		in r29,__SP_H__
 1072               	/* prologue: function */
 1073               	/* frame size = 4 */
 1074 04ea 6C01      		movw r12,r24
 1075 04ec 5B01      		movw r10,r22
 143:../../../src/drivers/platform/micaZ/source/eDIP240-7_TouchPanel_driver.c ****  volatile unsigned long ack_timeout=1000000;
 1077               	.LM73:
 1078 04ee 80E4      		ldi r24,lo8(1000000)
 1079 04f0 92E4      		ldi r25,hi8(1000000)
 1080 04f2 AFE0      		ldi r26,hlo8(1000000)
 1081 04f4 B0E0      		ldi r27,hhi8(1000000)
 1082 04f6 8983      		std Y+1,r24
 1083 04f8 9A83      		std Y+2,r25
 1084 04fa AB83      		std Y+3,r26
 1085 04fc BC83      		std Y+4,r27
 1086               	.LBB130:
 1087               	.LBB131:
  39:../../../src/drivers/platform/micaZ/source/eDIP240-7_TouchPanel_driver.c **** 	putchar(data);
 1089               	.LM74:
 1090 04fe 6091 0000 		lds r22,__iob+2
 1091 0502 7091 0000 		lds r23,(__iob+2)+1
 1092 0506 82E1      		ldi r24,lo8(18)
 1093 0508 90E0      		ldi r25,hi8(18)
 1094 050a 0E94 0000 		call fputc
 1095               	.LBE131:
 1096               	.LBE130:
 1097               	.LBB132:
 1098               	.LBB133:
 1099 050e 6091 0000 		lds r22,__iob+2
 1100 0512 7091 0000 		lds r23,(__iob+2)+1
 1101 0516 81E0      		ldi r24,lo8(1)
 1102 0518 90E0      		ldi r25,hi8(1)
 1103 051a 0E94 0000 		call fputc
 1104               	.LBE133:
 1105               	.LBE132:
 1106               	.LBB134:
 1107               	.LBB135:
 1108 051e 6091 0000 		lds r22,__iob+2
 1109 0522 7091 0000 		lds r23,(__iob+2)+1
 1110 0526 89E4      		ldi r24,lo8(73)
 1111 0528 90E0      		ldi r25,hi8(73)
 1112 052a 0E94 0000 		call fputc
 1113               	.LBE135:
 1114               	.LBE134:
 1115               	.LBB136:
 1116               	.LBB137:
 1117 052e 6091 0000 		lds r22,__iob+2
 1118 0532 7091 0000 		lds r23,(__iob+2)+1
 1119 0536 8CE5      		ldi r24,lo8(92)
 1120 0538 90E0      		ldi r25,hi8(92)
 1121 053a 0E94 0000 		call fputc
 1122               	.L68:
 1123               	.LBE137:
 1124               	.LBE136:
 151:../../../src/drivers/platform/micaZ/source/eDIP240-7_TouchPanel_driver.c **** 	ack = USART0_getchar();
 1126               	.LM75:
 1127 053e 0E94 0000 		call USART0_getchar
 152:../../../src/drivers/platform/micaZ/source/eDIP240-7_TouchPanel_driver.c **** 	ack_timeout--;
 1129               	.LM76:
 1130 0542 2981      		ldd r18,Y+1
 1131 0544 3A81      		ldd r19,Y+2
 1132 0546 4B81      		ldd r20,Y+3
 1133 0548 5C81      		ldd r21,Y+4
 1134 054a 2150      		subi r18,lo8(-(-1))
 1135 054c 3040      		sbci r19,hi8(-(-1))
 1136 054e 4040      		sbci r20,hlo8(-(-1))
 1137 0550 5040      		sbci r21,hhi8(-(-1))
 1138 0552 2983      		std Y+1,r18
 1139 0554 3A83      		std Y+2,r19
 1140 0556 4B83      		std Y+3,r20
 1141 0558 5C83      		std Y+4,r21
 153:../../../src/drivers/platform/micaZ/source/eDIP240-7_TouchPanel_driver.c ****  }while((ack != 0x06) && (ack_timeout > 0));
 1143               	.LM77:
 1144 055a 8630      		cpi r24,lo8(6)
 1145 055c 01F4      		brne .L66
 1146 055e FF24      		clr r15
 1147 0560 00C0      		rjmp .L79
 1148               	.L66:
 1149 0562 8981      		ldd r24,Y+1
 1150 0564 9A81      		ldd r25,Y+2
 1151 0566 AB81      		ldd r26,Y+3
 1152 0568 BC81      		ldd r27,Y+4
 1153 056a 0097      		sbiw r24,0
 1154 056c A105      		cpc r26,__zero_reg__
 1155 056e B105      		cpc r27,__zero_reg__
 1156 0570 01F4      		brne .L68
 1157 0572 FF24      		clr r15
 1158 0574 F394      		inc r15
 1159               	.L79:
 157:../../../src/drivers/platform/micaZ/source/eDIP240-7_TouchPanel_driver.c ****  do{ ch = USART0_getchar(); }while (ch == -1);       // Get the command byte
 1161               	.LM78:
 1162 0576 0E94 0000 		call USART0_getchar
 1163 057a 2FEF      		ldi r18,hi8(-1)
 1164 057c 8F3F      		cpi r24,lo8(-1)
 1165 057e 9207      		cpc r25,r18
 1166 0580 01F0      		breq .L79
 158:../../../src/drivers/platform/micaZ/source/eDIP240-7_TouchPanel_driver.c ****  if (ch == 0x12)                                     // Abort if command byte is incorrect
 1168               	.LM79:
 1169 0582 4297      		sbiw r24,18
 1170 0584 01F4      		brne .L70
 1171               	.L78:
 160:../../../src/drivers/platform/micaZ/source/eDIP240-7_TouchPanel_driver.c **** 	do{ ch = USART0_getchar(); }while (ch == -1);     // Get payload length
 1173               	.LM80:
 1174 0586 0E94 0000 		call USART0_getchar
 1175 058a EFEF      		ldi r30,hi8(-1)
 1176 058c 8F3F      		cpi r24,lo8(-1)
 1177 058e 9E07      		cpc r25,r30
 1178 0590 01F0      		breq .L78
 162:../../../src/drivers/platform/micaZ/source/eDIP240-7_TouchPanel_driver.c **** 	if (length == 2)                                  // Abort if length is incorrect
 1180               	.LM81:
 1181 0592 8230      		cpi r24,lo8(2)
 1182 0594 01F4      		brne .L70
 1183               	.L77:
 166:../../../src/drivers/platform/micaZ/source/eDIP240-7_TouchPanel_driver.c **** 	  do{ ch = USART0_getchar(); }while (ch == -1);   // Get payload data
 1185               	.LM82:
 1186 0596 0E94 0000 		call USART0_getchar
 1187 059a FFEF      		ldi r31,hi8(-1)
 1188 059c 8F3F      		cpi r24,lo8(-1)
 1189 059e 9F07      		cpc r25,r31
 1190 05a0 01F0      		breq .L77
 167:../../../src/drivers/platform/micaZ/source/eDIP240-7_TouchPanel_driver.c **** 	  checksum += ch;                                 // Calculate checksum
 1192               	.LM83:
 1193 05a2 182F      		mov r17,r24
 168:../../../src/drivers/platform/micaZ/source/eDIP240-7_TouchPanel_driver.c **** 	  *bytes_ready = ch;
 1195               	.LM84:
 1196 05a4 F601      		movw r30,r12
 1197 05a6 8083      		st Z,r24
 1198               	.L73:
 170:../../../src/drivers/platform/micaZ/source/eDIP240-7_TouchPanel_driver.c **** 	  do{ ch = USART0_getchar(); }while (ch == -1);   // Get payload data
 1200               	.LM85:
 1201 05a8 0E94 0000 		call USART0_getchar
 1202 05ac FFEF      		ldi r31,hi8(-1)
 1203 05ae 8F3F      		cpi r24,lo8(-1)
 1204 05b0 9F07      		cpc r25,r31
 1205 05b2 01F0      		breq .L73
 171:../../../src/drivers/platform/micaZ/source/eDIP240-7_TouchPanel_driver.c **** 	  checksum += ch;                                 // Calculate checksum
 1207               	.LM86:
 1208 05b4 082F      		mov r16,r24
 172:../../../src/drivers/platform/micaZ/source/eDIP240-7_TouchPanel_driver.c **** 	  *bytes_free = ch;
 1210               	.LM87:
 1211 05b6 F501      		movw r30,r10
 1212 05b8 8083      		st Z,r24
 1213               	.L74:
 175:../../../src/drivers/platform/micaZ/source/eDIP240-7_TouchPanel_driver.c **** 	  do{ ch = USART0_getchar(); }while (ch == -1);   // Get checksum
 1215               	.LM88:
 1216 05ba 0E94 0000 		call USART0_getchar
 1217 05be 9C01      		movw r18,r24
 1218 05c0 FFEF      		ldi r31,hi8(-1)
 1219 05c2 8F3F      		cpi r24,lo8(-1)
 1220 05c4 9F07      		cpc r25,r31
 1221 05c6 01F0      		breq .L74
 167:../../../src/drivers/platform/micaZ/source/eDIP240-7_TouchPanel_driver.c **** 	  checksum += ch;                                 // Calculate checksum
 1223               	.LM89:
 1224 05c8 1C5E      		subi r17,lo8(-(20))
 177:../../../src/drivers/platform/micaZ/source/eDIP240-7_TouchPanel_driver.c **** 	  if (ch != checksum) error = 1;
 1226               	.LM90:
 1227 05ca 100F      		add r17,r16
 1228 05cc 812F      		mov r24,r17
 1229 05ce 90E0      		ldi r25,lo8(0)
 1230 05d0 2817      		cp r18,r24
 1231 05d2 3907      		cpc r19,r25
 1232 05d4 01F4      		brne .L70
 183:../../../src/drivers/platform/micaZ/source/eDIP240-7_TouchPanel_driver.c ****  if (error == 0) return 0;  // Success!
 1234               	.LM91:
 1235 05d6 FF20      		tst r15
 1236 05d8 01F4      		brne .L70
 1237 05da 80E0      		ldi r24,lo8(0)
 1238 05dc 00C0      		rjmp .L75
 1239               	.L70:
 1240 05de 8FEF      		ldi r24,lo8(-1)
 1241               	.L75:
 1242               	/* epilogue start */
 185:../../../src/drivers/platform/micaZ/source/eDIP240-7_TouchPanel_driver.c **** }
 1244               	.LM92:
 1245 05e0 0F90      		pop __tmp_reg__
 1246 05e2 0F90      		pop __tmp_reg__
 1247 05e4 0F90      		pop __tmp_reg__
 1248 05e6 0F90      		pop __tmp_reg__
 1249 05e8 CF91      		pop r28
 1250 05ea DF91      		pop r29
 1251 05ec 1F91      		pop r17
 1252 05ee 0F91      		pop r16
 1253 05f0 FF90      		pop r15
 1254 05f2 DF90      		pop r13
 1255 05f4 CF90      		pop r12
 1256 05f6 BF90      		pop r11
 1257 05f8 AF90      		pop r10
 1258 05fa 0895      		ret
 1265               	.Lscope8:
 1267               		.stabd	78,0,0
 1269               	.global	eDIP240_7_Display_get_buffer
 1271               	eDIP240_7_Display_get_buffer:
 1272               		.stabd	46,0,0
  91:../../../src/drivers/platform/micaZ/source/eDIP240-7_TouchPanel_driver.c **** {
 1274               	.LM93:
 1275               	.LFBB9:
 1276 05fc CF92      		push r12
 1277 05fe DF92      		push r13
 1278 0600 EF92      		push r14
 1279 0602 FF92      		push r15
 1280 0604 0F93      		push r16
 1281 0606 1F93      		push r17
 1282 0608 DF93      		push r29
 1283 060a CF93      		push r28
 1284 060c 00D0      		rcall .
 1285 060e 00D0      		rcall .
 1286 0610 CDB7      		in r28,__SP_L__
 1287 0612 DEB7      		in r29,__SP_H__
 1288               	/* prologue: function */
 1289               	/* frame size = 4 */
 1290 0614 182F      		mov r17,r24
 1291 0616 F92E      		mov r15,r25
  94:../../../src/drivers/platform/micaZ/source/eDIP240-7_TouchPanel_driver.c ****  volatile unsigned long ack_timeout=100000;
 1293               	.LM94:
 1294 0618 80EA      		ldi r24,lo8(100000)
 1295 061a 96E8      		ldi r25,hi8(100000)
 1296 061c A1E0      		ldi r26,hlo8(100000)
 1297 061e B0E0      		ldi r27,hhi8(100000)
 1298 0620 8983      		std Y+1,r24
 1299 0622 9A83      		std Y+2,r25
 1300 0624 AB83      		std Y+3,r26
 1301 0626 BC83      		std Y+4,r27
 1302               	.LBB138:
 1303               	.LBB139:
  39:../../../src/drivers/platform/micaZ/source/eDIP240-7_TouchPanel_driver.c **** 	putchar(data);
 1305               	.LM95:
 1306 0628 6091 0000 		lds r22,__iob+2
 1307 062c 7091 0000 		lds r23,(__iob+2)+1
 1308 0630 82E1      		ldi r24,lo8(18)
 1309 0632 90E0      		ldi r25,hi8(18)
 1310 0634 0E94 0000 		call fputc
 1311               	.LBE139:
 1312               	.LBE138:
 1313               	.LBB140:
 1314               	.LBB141:
 1315 0638 6091 0000 		lds r22,__iob+2
 1316 063c 7091 0000 		lds r23,(__iob+2)+1
 1317 0640 81E0      		ldi r24,lo8(1)
 1318 0642 90E0      		ldi r25,hi8(1)
 1319 0644 0E94 0000 		call fputc
 1320               	.LBE141:
 1321               	.LBE140:
 1322               	.LBB142:
 1323               	.LBB143:
 1324 0648 6091 0000 		lds r22,__iob+2
 1325 064c 7091 0000 		lds r23,(__iob+2)+1
 1326 0650 83E5      		ldi r24,lo8(83)
 1327 0652 90E0      		ldi r25,hi8(83)
 1328 0654 0E94 0000 		call fputc
 1329               	.LBE143:
 1330               	.LBE142:
 1331               	.LBB144:
 1332               	.LBB145:
 1333 0658 6091 0000 		lds r22,__iob+2
 1334 065c 7091 0000 		lds r23,(__iob+2)+1
 1335 0660 86E6      		ldi r24,lo8(102)
 1336 0662 90E0      		ldi r25,hi8(102)
 1337 0664 0E94 0000 		call fputc
 1338               	.L89:
 1339               	.LBE145:
 1340               	.LBE144:
 103:../../../src/drivers/platform/micaZ/source/eDIP240-7_TouchPanel_driver.c **** 	ack = USART0_getchar();
 1342               	.LM96:
 1343 0668 0E94 0000 		call USART0_getchar
 104:../../../src/drivers/platform/micaZ/source/eDIP240-7_TouchPanel_driver.c **** 	ack_timeout--;
 1345               	.LM97:
 1346 066c 2981      		ldd r18,Y+1
 1347 066e 3A81      		ldd r19,Y+2
 1348 0670 4B81      		ldd r20,Y+3
 1349 0672 5C81      		ldd r21,Y+4
 1350 0674 2150      		subi r18,lo8(-(-1))
 1351 0676 3040      		sbci r19,hi8(-(-1))
 1352 0678 4040      		sbci r20,hlo8(-(-1))
 1353 067a 5040      		sbci r21,hhi8(-(-1))
 1354 067c 2983      		std Y+1,r18
 1355 067e 3A83      		std Y+2,r19
 1356 0680 4B83      		std Y+3,r20
 1357 0682 5C83      		std Y+4,r21
 105:../../../src/drivers/platform/micaZ/source/eDIP240-7_TouchPanel_driver.c ****  }while((ack != 0x06) && (ack_timeout > 0));
 1359               	.LM98:
 1360 0684 8630      		cpi r24,lo8(6)
 1361 0686 01F4      		brne .L87
 1362 0688 CC24      		clr r12
 1363 068a 00C0      		rjmp .L101
 1364               	.L87:
 1365 068c 8981      		ldd r24,Y+1
 1366 068e 9A81      		ldd r25,Y+2
 1367 0690 AB81      		ldd r26,Y+3
 1368 0692 BC81      		ldd r27,Y+4
 1369 0694 0097      		sbiw r24,0
 1370 0696 A105      		cpc r26,__zero_reg__
 1371 0698 B105      		cpc r27,__zero_reg__
 1372 069a 01F4      		brne .L89
 1373 069c CC24      		clr r12
 1374 069e C394      		inc r12
 1375               	.L101:
 109:../../../src/drivers/platform/micaZ/source/eDIP240-7_TouchPanel_driver.c ****  do{ ch = USART0_getchar(); }while (ch == -1);       // Get the command byte
 1377               	.LM99:
 1378 06a0 0E94 0000 		call USART0_getchar
 1379 06a4 2FEF      		ldi r18,hi8(-1)
 1380 06a6 8F3F      		cpi r24,lo8(-1)
 1381 06a8 9207      		cpc r25,r18
 1382 06aa 01F0      		breq .L101
 110:../../../src/drivers/platform/micaZ/source/eDIP240-7_TouchPanel_driver.c ****  if (ch == 0x11)                                     // Abort if command byte is incorrect
 1384               	.LM100:
 1385 06ac 4197      		sbiw r24,17
 1386 06ae 01F4      		brne .L91
 1387               	.L100:
 112:../../../src/drivers/platform/micaZ/source/eDIP240-7_TouchPanel_driver.c **** 	do{ ch = USART0_getchar(); }while (ch == -1);     // Get payload length
 1389               	.LM101:
 1390 06b0 0E94 0000 		call USART0_getchar
 1391 06b4 EFEF      		ldi r30,hi8(-1)
 1392 06b6 8F3F      		cpi r24,lo8(-1)
 1393 06b8 9E07      		cpc r25,r30
 1394 06ba 01F0      		breq .L100
 113:../../../src/drivers/platform/micaZ/source/eDIP240-7_TouchPanel_driver.c **** 	length = ch;
 1396               	.LM102:
 1397 06bc D82E      		mov r13,r24
 114:../../../src/drivers/platform/micaZ/source/eDIP240-7_TouchPanel_driver.c **** 	checksum = 0x11 + length;                         // Start checksum calculation
 1399               	.LM103:
 1400 06be 082F      		mov r16,r24
 1401 06c0 0F5E      		subi r16,lo8(-(17))
 1402 06c2 812F      		mov r24,r17
 1403 06c4 9F2D      		mov r25,r15
 1404 06c6 9C01      		movw r18,r24
 1405 06c8 7901      		movw r14,r18
 1406 06ca 10E0      		ldi r17,lo8(0)
 1407 06cc 00C0      		rjmp .L93
 1408               	.L99:
 117:../../../src/drivers/platform/micaZ/source/eDIP240-7_TouchPanel_driver.c **** 	  do{ ch = USART0_getchar(); }while (ch == -1);   // Get payload data
 1410               	.LM104:
 1411 06ce 0E94 0000 		call USART0_getchar
 1412 06d2 FFEF      		ldi r31,hi8(-1)
 1413 06d4 8F3F      		cpi r24,lo8(-1)
 1414 06d6 9F07      		cpc r25,r31
 1415 06d8 01F0      		breq .L99
 118:../../../src/drivers/platform/micaZ/source/eDIP240-7_TouchPanel_driver.c **** 	  data[i] = ch;
 1417               	.LM105:
 1418 06da F701      		movw r30,r14
 1419 06dc 8193      		st Z+,r24
 1420 06de 7F01      		movw r14,r30
 119:../../../src/drivers/platform/micaZ/source/eDIP240-7_TouchPanel_driver.c **** 	  checksum += ch;                                 // Calculate checksum
 1422               	.LM106:
 1423 06e0 080F      		add r16,r24
 120:../../../src/drivers/platform/micaZ/source/eDIP240-7_TouchPanel_driver.c **** 	  i++;
 1425               	.LM107:
 1426 06e2 1F5F      		subi r17,lo8(-(1))
 1427               	.L93:
 115:../../../src/drivers/platform/micaZ/source/eDIP240-7_TouchPanel_driver.c **** 	while (i < length)
 1429               	.LM108:
 1430 06e4 1D15      		cp r17,r13
 1431 06e6 00F0      		brlo .L99
 1432               	.L98:
 123:../../../src/drivers/platform/micaZ/source/eDIP240-7_TouchPanel_driver.c **** 	do{ ch = USART0_getchar(); }while (ch == -1);   // Get checksum
 1434               	.LM109:
 1435 06e8 0E94 0000 		call USART0_getchar
 1436 06ec 9C01      		movw r18,r24
 1437 06ee FFEF      		ldi r31,hi8(-1)
 1438 06f0 8F3F      		cpi r24,lo8(-1)
 1439 06f2 9F07      		cpc r25,r31
 1440 06f4 01F0      		breq .L98
 125:../../../src/drivers/platform/micaZ/source/eDIP240-7_TouchPanel_driver.c **** 	if (ch != checksum) error = 1;
 1442               	.LM110:
 1443 06f6 802F      		mov r24,r16
 1444 06f8 90E0      		ldi r25,lo8(0)
 1445 06fa 2817      		cp r18,r24
 1446 06fc 3907      		cpc r19,r25
 1447 06fe 01F4      		brne .L91
 129:../../../src/drivers/platform/micaZ/source/eDIP240-7_TouchPanel_driver.c ****  if (error == 0) return length;   // Success!
 1449               	.LM111:
 1450 0700 CC20      		tst r12
 1451 0702 01F4      		brne .L91
 1452 0704 8D2D      		mov r24,r13
 1453 0706 00C0      		rjmp .L96
 1454               	.L91:
 1455 0708 8FEF      		ldi r24,lo8(-1)
 1456               	.L96:
 1457               	/* epilogue start */
 131:../../../src/drivers/platform/micaZ/source/eDIP240-7_TouchPanel_driver.c **** }
 1459               	.LM112:
 1460 070a 0F90      		pop __tmp_reg__
 1461 070c 0F90      		pop __tmp_reg__
 1462 070e 0F90      		pop __tmp_reg__
 1463 0710 0F90      		pop __tmp_reg__
 1464 0712 CF91      		pop r28
 1465 0714 DF91      		pop r29
 1466 0716 1F91      		pop r17
 1467 0718 0F91      		pop r16
 1468 071a FF90      		pop r15
 1469 071c EF90      		pop r14
 1470 071e DF90      		pop r13
 1471 0720 CF90      		pop r12
 1472 0722 0895      		ret
 1482               	.Lscope9:
 1484               		.stabd	78,0,0
 1487               	.global	eDIP240_7_Display_send_packet
 1489               	eDIP240_7_Display_send_packet:
 1490               		.stabd	46,0,0
  60:../../../src/drivers/platform/micaZ/source/eDIP240-7_TouchPanel_driver.c **** {
 1492               	.LM113:
 1493               	.LFBB10:
 1494 0724 DF92      		push r13
 1495 0726 EF92      		push r14
 1496 0728 FF92      		push r15
 1497 072a 0F93      		push r16
 1498 072c 1F93      		push r17
 1499 072e DF93      		push r29
 1500 0730 CF93      		push r28
 1501 0732 00D0      		rcall .
 1502 0734 00D0      		rcall .
 1503 0736 CDB7      		in r28,__SP_L__
 1504 0738 DEB7      		in r29,__SP_H__
 1505               	/* prologue: function */
 1506               	/* frame size = 4 */
 1507 073a 182F      		mov r17,r24
 1508 073c 092F      		mov r16,r25
 1509 073e D62E      		mov r13,r22
  62:../../../src/drivers/platform/micaZ/source/eDIP240-7_TouchPanel_driver.c ****  volatile unsigned long ack_timeout=100000;
 1511               	.LM114:
 1512 0740 80EA      		ldi r24,lo8(100000)
 1513 0742 96E8      		ldi r25,hi8(100000)
 1514 0744 A1E0      		ldi r26,hlo8(100000)
 1515 0746 B0E0      		ldi r27,hhi8(100000)
 1516 0748 8983      		std Y+1,r24
 1517 074a 9A83      		std Y+2,r25
 1518 074c AB83      		std Y+3,r26
 1519 074e BC83      		std Y+4,r27
 1520               	.LBB146:
 1521               	.LBB147:
  39:../../../src/drivers/platform/micaZ/source/eDIP240-7_TouchPanel_driver.c **** 	putchar(data);
 1523               	.LM115:
 1524 0750 6091 0000 		lds r22,__iob+2
 1525 0754 7091 0000 		lds r23,(__iob+2)+1
 1526 0758 81E1      		ldi r24,lo8(17)
 1527 075a 90E0      		ldi r25,hi8(17)
 1528 075c 0E94 0000 		call fputc
 1529               	.LBE147:
 1530               	.LBE146:
 1531               	.LBB148:
 1532               	.LBB149:
 1533 0760 6091 0000 		lds r22,__iob+2
 1534 0764 7091 0000 		lds r23,(__iob+2)+1
 1535 0768 8D2D      		mov r24,r13
 1536 076a 90E0      		ldi r25,lo8(0)
 1537 076c 0E94 0000 		call fputc
 1538               	.LBE149:
 1539               	.LBE148:
  66:../../../src/drivers/platform/micaZ/source/eDIP240-7_TouchPanel_driver.c ****  checksum = 0x11 + length;
 1541               	.LM116:
 1542 0770 81E1      		ldi r24,lo8(17)
 1543 0772 E82E      		mov r14,r24
 1544 0774 ED0C      		add r14,r13
 1545 0776 212F      		mov r18,r17
 1546 0778 302F      		mov r19,r16
 1547 077a C901      		movw r24,r18
 1548 077c 8C01      		movw r16,r24
 1549 077e FF24      		clr r15
 1550 0780 00C0      		rjmp .L108
 1551               	.L109:
 1552               	.LBB150:
 1553               	.LBB151:
  39:../../../src/drivers/platform/micaZ/source/eDIP240-7_TouchPanel_driver.c **** 	putchar(data);
 1555               	.LM117:
 1556 0782 6091 0000 		lds r22,__iob+2
 1557 0786 7091 0000 		lds r23,(__iob+2)+1
 1558 078a F801      		movw r30,r16
 1559 078c 8081      		ld r24,Z
 1560 078e 90E0      		ldi r25,lo8(0)
 1561 0790 0E94 0000 		call fputc
 1562               	.LBE151:
 1563               	.LBE150:
  70:../../../src/drivers/platform/micaZ/source/eDIP240-7_TouchPanel_driver.c **** 	checksum += data[i];
 1565               	.LM118:
 1566 0794 F801      		movw r30,r16
 1567 0796 8191      		ld r24,Z+
 1568 0798 8F01      		movw r16,r30
 1569 079a E80E      		add r14,r24
  71:../../../src/drivers/platform/micaZ/source/eDIP240-7_TouchPanel_driver.c **** 	i++;
 1571               	.LM119:
 1572 079c F394      		inc r15
 1573               	.L108:
  67:../../../src/drivers/platform/micaZ/source/eDIP240-7_TouchPanel_driver.c ****  while(i < length)
 1575               	.LM120:
 1576 079e FD14      		cp r15,r13
 1577 07a0 00F0      		brlo .L109
 1578               	.LBB152:
 1579               	.LBB153:
  39:../../../src/drivers/platform/micaZ/source/eDIP240-7_TouchPanel_driver.c **** 	putchar(data);
 1581               	.LM121:
 1582 07a2 6091 0000 		lds r22,__iob+2
 1583 07a6 7091 0000 		lds r23,(__iob+2)+1
 1584 07aa 8E2D      		mov r24,r14
 1585 07ac 90E0      		ldi r25,lo8(0)
 1586 07ae 0E94 0000 		call fputc
 1587               	.L111:
 1588               	.LBE153:
 1589               	.LBE152:
  77:../../../src/drivers/platform/micaZ/source/eDIP240-7_TouchPanel_driver.c **** 	ack = USART0_getchar();
 1591               	.LM122:
 1592 07b2 0E94 0000 		call USART0_getchar
  78:../../../src/drivers/platform/micaZ/source/eDIP240-7_TouchPanel_driver.c **** 	ack_timeout--;
 1594               	.LM123:
 1595 07b6 2981      		ldd r18,Y+1
 1596 07b8 3A81      		ldd r19,Y+2
 1597 07ba 4B81      		ldd r20,Y+3
 1598 07bc 5C81      		ldd r21,Y+4
 1599 07be 2150      		subi r18,lo8(-(-1))
 1600 07c0 3040      		sbci r19,hi8(-(-1))
 1601 07c2 4040      		sbci r20,hlo8(-(-1))
 1602 07c4 5040      		sbci r21,hhi8(-(-1))
 1603 07c6 2983      		std Y+1,r18
 1604 07c8 3A83      		std Y+2,r19
 1605 07ca 4B83      		std Y+3,r20
 1606 07cc 5C83      		std Y+4,r21
  79:../../../src/drivers/platform/micaZ/source/eDIP240-7_TouchPanel_driver.c ****  }while((ack != 0x06) && (ack_timeout > 0));
 1608               	.LM124:
 1609 07ce 8630      		cpi r24,lo8(6)
 1610 07d0 01F0      		breq .L110
 1611 07d2 8981      		ldd r24,Y+1
 1612 07d4 9A81      		ldd r25,Y+2
 1613 07d6 AB81      		ldd r26,Y+3
 1614 07d8 BC81      		ldd r27,Y+4
 1615 07da 0097      		sbiw r24,0
 1616 07dc A105      		cpc r26,__zero_reg__
 1617 07de B105      		cpc r27,__zero_reg__
 1618 07e0 01F4      		brne .L111
  81:../../../src/drivers/platform/micaZ/source/eDIP240-7_TouchPanel_driver.c ****  if (ack == 0x06) return 0;  // Success!
 1620               	.LM125:
 1621 07e2 8FEF      		ldi r24,lo8(-1)
 1622 07e4 00C0      		rjmp .L112
 1623               	.L110:
 1624 07e6 80E0      		ldi r24,lo8(0)
 1625               	.L112:
 1626               	/* epilogue start */
  83:../../../src/drivers/platform/micaZ/source/eDIP240-7_TouchPanel_driver.c **** }
 1628               	.LM126:
 1629 07e8 0F90      		pop __tmp_reg__
 1630 07ea 0F90      		pop __tmp_reg__
 1631 07ec 0F90      		pop __tmp_reg__
 1632 07ee 0F90      		pop __tmp_reg__
 1633 07f0 CF91      		pop r28
 1634 07f2 DF91      		pop r29
 1635 07f4 1F91      		pop r17
 1636 07f6 0F91      		pop r16
 1637 07f8 FF90      		pop r15
 1638 07fa EF90      		pop r14
 1639 07fc DF90      		pop r13
 1640 07fe 0895      		ret
 1647               	.Lscope10:
 1649               		.stabd	78,0,0
 1651               	.global	eDIP240_7_Display_send_string_with_NULL
 1653               	eDIP240_7_Display_send_string_with_NULL:
 1654               		.stabd	46,0,0
 371:../../../src/drivers/platform/micaZ/source/eDIP240-7_TouchPanel_driver.c **** // End of Electronic Assembly SMALLPROTOKOLL driver
 372:../../../src/drivers/platform/micaZ/source/eDIP240-7_TouchPanel_driver.c **** 
 373:../../../src/drivers/platform/micaZ/source/eDIP240-7_TouchPanel_driver.c **** 
 374:../../../src/drivers/platform/micaZ/source/eDIP240-7_TouchPanel_driver.c **** 
 375:../../../src/drivers/platform/micaZ/source/eDIP240-7_TouchPanel_driver.c **** // Use this for sending ascii commands to the Display
 376:../../../src/drivers/platform/micaZ/source/eDIP240-7_TouchPanel_driver.c **** void eDIP240_7_Display_send_string(char * str)
 377:../../../src/drivers/platform/micaZ/source/eDIP240-7_TouchPanel_driver.c **** {
 378:../../../src/drivers/platform/micaZ/source/eDIP240-7_TouchPanel_driver.c ****  eDIP240_7_Display_send_packet(str, strlen(str));
 379:../../../src/drivers/platform/micaZ/source/eDIP240-7_TouchPanel_driver.c **** }
 380:../../../src/drivers/platform/micaZ/source/eDIP240-7_TouchPanel_driver.c **** 
 381:../../../src/drivers/platform/micaZ/source/eDIP240-7_TouchPanel_driver.c **** 
 382:../../../src/drivers/platform/micaZ/source/eDIP240-7_TouchPanel_driver.c **** 
 383:../../../src/drivers/platform/micaZ/source/eDIP240-7_TouchPanel_driver.c **** void eDIP240_7_Display_send_string_with_NULL(char * str)
 384:../../../src/drivers/platform/micaZ/source/eDIP240-7_TouchPanel_driver.c **** {
 1656               	.LM127:
 1657               	.LFBB11:
 1658               	/* prologue: function */
 1659               	/* frame size = 0 */
 385:../../../src/drivers/platform/micaZ/source/eDIP240-7_TouchPanel_driver.c ****  eDIP240_7_Display_send_packet(str, strlen(str) + 1);
 1661               	.LM128:
 1662 0800 DC01      		movw r26,r24
 1663 0802 0D90      		ld __tmp_reg__,X+
 1664 0804 0020      		tst __tmp_reg__
 1665 0806 01F4      		brne .-6
 1666 0808 A81B      		sub r26,r24
 1667 080a 6A2F      		mov r22,r26
 1668 080c 0E94 0000 		call eDIP240_7_Display_send_packet
 1669               	/* epilogue start */
 386:../../../src/drivers/platform/micaZ/source/eDIP240-7_TouchPanel_driver.c **** }
 1671               	.LM129:
 1672 0810 0895      		ret
 1674               	.Lscope11:
 1676               		.stabd	78,0,0
 1678               	.global	eDIP240_7_Display_send_string
 1680               	eDIP240_7_Display_send_string:
 1681               		.stabd	46,0,0
 378:../../../src/drivers/platform/micaZ/source/eDIP240-7_TouchPanel_driver.c **** {
 1683               	.LM130:
 1684               	.LFBB12:
 1685               	/* prologue: function */
 1686               	/* frame size = 0 */
 379:../../../src/drivers/platform/micaZ/source/eDIP240-7_TouchPanel_driver.c ****  eDIP240_7_Display_send_packet(str, strlen(str));
 1688               	.LM131:
 1689 0812 DC01      		movw r26,r24
 1690 0814 0D90      		ld __tmp_reg__,X+
 1691 0816 0020      		tst __tmp_reg__
 1692 0818 01F4      		brne .-6
 1693 081a 1197      		sbiw r26,1
 1694 081c A81B      		sub r26,r24
 1695 081e B90B      		sbc r27,r25
 1696 0820 6A2F      		mov r22,r26
 1697 0822 0E94 0000 		call eDIP240_7_Display_send_packet
 1698               	/* epilogue start */
 380:../../../src/drivers/platform/micaZ/source/eDIP240-7_TouchPanel_driver.c **** }
 1700               	.LM132:
 1701 0826 0895      		ret
 1703               	.Lscope12:
 1705               		.stabd	78,0,0
 1706               		.comm _nrk_signal_list,4,1
 1707               		.comm nrk_idle_task_stk,128,1
 1708               		.comm nrk_kernel_stk_ptr,2,1
 1713               	.Letext0:
DEFINED SYMBOLS
                            *ABS*:00000000 eDIP240-7_TouchPanel_driver.c
     /tmp/ccEUIbUe.s:2      *ABS*:0000003f __SREG__
     /tmp/ccEUIbUe.s:3      *ABS*:0000003e __SP_H__
     /tmp/ccEUIbUe.s:4      *ABS*:0000003d __SP_L__
     /tmp/ccEUIbUe.s:5      *ABS*:00000034 __CCP__
     /tmp/ccEUIbUe.s:6      *ABS*:00000000 __tmp_reg__
     /tmp/ccEUIbUe.s:7      *ABS*:00000001 __zero_reg__
     /tmp/ccEUIbUe.s:142    .text:00000000 USART0_getchar
     /tmp/ccEUIbUe.s:180    .text:00000024 USART0_putchar
     /tmp/ccEUIbUe.s:205    .text:00000034 eDIP240_7_Display_deselect
     /tmp/ccEUIbUe.s:346    .text:000000fc eDIP240_7_Display_select
     /tmp/ccEUIbUe.s:486    .text:000001c4 eDIP240_7_Display_repeat_last_packet
     /tmp/ccEUIbUe.s:677    .text:000002c4 eDIP240_7_Display_get_protocoll_info
     /tmp/ccEUIbUe.s:908    .text:00000400 eDIP240_7_Display_set_protocol
     /tmp/ccEUIbUe.s:1054   .text:000004d0 eDIP240_7_Display_request_buffer_info
     /tmp/ccEUIbUe.s:1271   .text:000005fc eDIP240_7_Display_get_buffer
     /tmp/ccEUIbUe.s:1489   .text:00000724 eDIP240_7_Display_send_packet
     /tmp/ccEUIbUe.s:1653   .text:00000800 eDIP240_7_Display_send_string_with_NULL
     /tmp/ccEUIbUe.s:1680   .text:00000812 eDIP240_7_Display_send_string
                            *COM*:00000004 _nrk_signal_list
                            *COM*:00000080 nrk_idle_task_stk
                            *COM*:00000002 nrk_kernel_stk_ptr

UNDEFINED SYMBOLS
__do_copy_data
__do_clear_bss
nrk_uart_data_ready
__iob
fgetc
fputc
