   1               		.file	"mda100_driver.c"
   2               	__SREG__ = 0x3f
   3               	__SP_H__ = 0x3e
   4               	__SP_L__ = 0x3d
   5               	__CCP__  = 0x34
   6               	__tmp_reg__ = 0
   7               	__zero_reg__ = 1
   8               		.global __do_copy_data
   9               		.global __do_clear_bss
  12               		.text
  13               	.Ltext0:
  76               	.global	mda100_init
  78               	mda100_init:
  79               		.stabd	46,0,0
   0:../../../src/drivers/platform/micaZ/source/mda100_driver.c **** /******************************************************************************
   1:../../../src/drivers/platform/micaZ/source/mda100_driver.c **** *  Nano-RK, a real-time operating system for sensor networks.
   2:../../../src/drivers/platform/micaZ/source/mda100_driver.c **** *  Copyright (C) 2011 Technische Universität München (www.vmi.ei.tum.de)
   3:../../../src/drivers/platform/micaZ/source/mda100_driver.c **** *  All rights reserved.
   4:../../../src/drivers/platform/micaZ/source/mda100_driver.c **** *
   5:../../../src/drivers/platform/micaZ/source/mda100_driver.c **** *  This is the Open Source Version of Nano-RK included as part of a Dual
   6:../../../src/drivers/platform/micaZ/source/mda100_driver.c **** *  Licensing Model. If you are unsure which license to use please refer to:
   7:../../../src/drivers/platform/micaZ/source/mda100_driver.c **** *  http://www.nanork.org/nano-RK/wiki/Licensing
   8:../../../src/drivers/platform/micaZ/source/mda100_driver.c **** *
   9:../../../src/drivers/platform/micaZ/source/mda100_driver.c **** *  This program is free software: you can redistribute it and/or modify
  10:../../../src/drivers/platform/micaZ/source/mda100_driver.c **** *  it under the terms of the GNU General Public License as published by
  11:../../../src/drivers/platform/micaZ/source/mda100_driver.c **** *  the Free Software Foundation, version 2.0 of the License.
  12:../../../src/drivers/platform/micaZ/source/mda100_driver.c **** *
  13:../../../src/drivers/platform/micaZ/source/mda100_driver.c **** *  This program is distributed in the hope that it will be useful,
  14:../../../src/drivers/platform/micaZ/source/mda100_driver.c **** *  but WITHOUT ANY WARRANTY; without even the implied warranty of
  15:../../../src/drivers/platform/micaZ/source/mda100_driver.c **** *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  16:../../../src/drivers/platform/micaZ/source/mda100_driver.c **** *  GNU General Public License for more details.
  17:../../../src/drivers/platform/micaZ/source/mda100_driver.c **** *
  18:../../../src/drivers/platform/micaZ/source/mda100_driver.c **** *  You should have received a copy of the GNU General Public License
  19:../../../src/drivers/platform/micaZ/source/mda100_driver.c **** *  along with this program.  If not, see <http://www.gnu.org/licenses/>.
  20:../../../src/drivers/platform/micaZ/source/mda100_driver.c **** *
  21:../../../src/drivers/platform/micaZ/source/mda100_driver.c **** *
  22:../../../src/drivers/platform/micaZ/source/mda100_driver.c **** *  mda100 sensor board driver
  23:../../../src/drivers/platform/micaZ/source/mda100_driver.c **** *
  24:../../../src/drivers/platform/micaZ/source/mda100_driver.c **** *  Contributing Authors (specific to this file):
  25:../../../src/drivers/platform/micaZ/source/mda100_driver.c **** *  Author: Peter Diener
  26:../../../src/drivers/platform/micaZ/source/mda100_driver.c **** *
  27:../../../src/drivers/platform/micaZ/source/mda100_driver.c **** ***************************************************************************************/
  28:../../../src/drivers/platform/micaZ/source/mda100_driver.c **** 
  29:../../../src/drivers/platform/micaZ/source/mda100_driver.c **** 
  30:../../../src/drivers/platform/micaZ/source/mda100_driver.c **** #include "mda100_driver.h"
  31:../../../src/drivers/platform/micaZ/source/mda100_driver.c **** #include "adc_driver.h"
  32:../../../src/drivers/platform/micaZ/source/mda100_driver.c **** #include <avr/io.h>
  33:../../../src/drivers/platform/micaZ/source/mda100_driver.c **** #include <math.h>
  34:../../../src/drivers/platform/micaZ/source/mda100_driver.c **** 
  35:../../../src/drivers/platform/micaZ/source/mda100_driver.c **** 
  36:../../../src/drivers/platform/micaZ/source/mda100_driver.c **** volatile unsigned char mda100_initDone = 0;
  37:../../../src/drivers/platform/micaZ/source/mda100_driver.c **** 
  38:../../../src/drivers/platform/micaZ/source/mda100_driver.c **** #define CheckIfInitDone() do{ if (mda100_initDone == 0) mda100_init(); }while(0)
  39:../../../src/drivers/platform/micaZ/source/mda100_driver.c **** 
  40:../../../src/drivers/platform/micaZ/source/mda100_driver.c **** 
  41:../../../src/drivers/platform/micaZ/source/mda100_driver.c **** // Do not forget to init everything before using it
  42:../../../src/drivers/platform/micaZ/source/mda100_driver.c **** void mda100_init()
  43:../../../src/drivers/platform/micaZ/source/mda100_driver.c **** {
  81               	.LM0:
  82               	.LFBB1:
  83               	/* prologue: function */
  84               	/* frame size = 0 */
  44:../../../src/drivers/platform/micaZ/source/mda100_driver.c **** 	adc_init();
  86               	.LM1:
  87 0000 0E94 0000 		call adc_init
  45:../../../src/drivers/platform/micaZ/source/mda100_driver.c **** 	mda100_initDone = 1;
  89               	.LM2:
  90 0004 81E0      		ldi r24,lo8(1)
  91 0006 8093 0000 		sts mda100_initDone,r24
  92               	/* epilogue start */
  46:../../../src/drivers/platform/micaZ/source/mda100_driver.c **** }
  94               	.LM3:
  95 000a 0895      		ret
  97               	.Lscope1:
  99               		.stabd	78,0,0
 102               	.global	mda100_TemperatureSensor_Power
 104               	mda100_TemperatureSensor_Power:
 105               		.stabd	46,0,0
  47:../../../src/drivers/platform/micaZ/source/mda100_driver.c **** 
  48:../../../src/drivers/platform/micaZ/source/mda100_driver.c **** 
  49:../../../src/drivers/platform/micaZ/source/mda100_driver.c **** 
  50:../../../src/drivers/platform/micaZ/source/mda100_driver.c **** void mda100_Powersave()
  51:../../../src/drivers/platform/micaZ/source/mda100_driver.c **** {
  52:../../../src/drivers/platform/micaZ/source/mda100_driver.c **** 	CheckIfInitDone();
  53:../../../src/drivers/platform/micaZ/source/mda100_driver.c **** 	adc_Powersave();
  54:../../../src/drivers/platform/micaZ/source/mda100_driver.c **** }
  55:../../../src/drivers/platform/micaZ/source/mda100_driver.c **** 
  56:../../../src/drivers/platform/micaZ/source/mda100_driver.c **** 
  57:../../../src/drivers/platform/micaZ/source/mda100_driver.c **** 
  58:../../../src/drivers/platform/micaZ/source/mda100_driver.c **** // Power control via int1 (PE5)
  59:../../../src/drivers/platform/micaZ/source/mda100_driver.c **** // This must be tristate if not in use, otherwise temperature sensor will be incorrect
  60:../../../src/drivers/platform/micaZ/source/mda100_driver.c **** void mda100_LightSensor_Power(T_Power powerstatus)
  61:../../../src/drivers/platform/micaZ/source/mda100_driver.c **** {
  62:../../../src/drivers/platform/micaZ/source/mda100_driver.c **** 	CheckIfInitDone();
  63:../../../src/drivers/platform/micaZ/source/mda100_driver.c **** 	// Switch off temperature sensor power first; Only one of these may be active at a time
  64:../../../src/drivers/platform/micaZ/source/mda100_driver.c **** 	PORTC &= ~(1 << 0);
  65:../../../src/drivers/platform/micaZ/source/mda100_driver.c ****     DDRC  &= ~(1 << 0);
  66:../../../src/drivers/platform/micaZ/source/mda100_driver.c **** 
  67:../../../src/drivers/platform/micaZ/source/mda100_driver.c **** 	if (powerstatus == POWER_ON)
  68:../../../src/drivers/platform/micaZ/source/mda100_driver.c **** 	{
  69:../../../src/drivers/platform/micaZ/source/mda100_driver.c **** 		PORTE |= (1 << 5);
  70:../../../src/drivers/platform/micaZ/source/mda100_driver.c **** 		DDRE  |= (1 << 5);
  71:../../../src/drivers/platform/micaZ/source/mda100_driver.c **** 	}
  72:../../../src/drivers/platform/micaZ/source/mda100_driver.c **** 	else
  73:../../../src/drivers/platform/micaZ/source/mda100_driver.c **** 	{
  74:../../../src/drivers/platform/micaZ/source/mda100_driver.c **** 		PORTE &= ~(1 << 5);
  75:../../../src/drivers/platform/micaZ/source/mda100_driver.c **** 		DDRE  &= ~(1 << 5);
  76:../../../src/drivers/platform/micaZ/source/mda100_driver.c **** 	}
  77:../../../src/drivers/platform/micaZ/source/mda100_driver.c **** }
  78:../../../src/drivers/platform/micaZ/source/mda100_driver.c **** 
  79:../../../src/drivers/platform/micaZ/source/mda100_driver.c **** 
  80:../../../src/drivers/platform/micaZ/source/mda100_driver.c **** 
  81:../../../src/drivers/platform/micaZ/source/mda100_driver.c **** // Power control via PW0
  82:../../../src/drivers/platform/micaZ/source/mda100_driver.c **** // This must be tristate if not in use, otherwise light sensor will be incorrect
  83:../../../src/drivers/platform/micaZ/source/mda100_driver.c **** void mda100_TemperatureSensor_Power(T_Power powerstatus)
  84:../../../src/drivers/platform/micaZ/source/mda100_driver.c **** {
 107               	.LM4:
 108               	.LFBB2:
 109 000c 1F93      		push r17
 110               	/* prologue: function */
 111               	/* frame size = 0 */
 112 000e 182F      		mov r17,r24
  85:../../../src/drivers/platform/micaZ/source/mda100_driver.c **** 	CheckIfInitDone();
 114               	.LM5:
 115 0010 8091 0000 		lds r24,mda100_initDone
 116 0014 8823      		tst r24
 117 0016 01F4      		brne .L4
 118 0018 0E94 0000 		call mda100_init
 119               	.L4:
  86:../../../src/drivers/platform/micaZ/source/mda100_driver.c **** 	// Switch off light sensor power first; Only one of these may be active at a time
  87:../../../src/drivers/platform/micaZ/source/mda100_driver.c ****     PORTE &= ~(1 << 5);
 121               	.LM6:
 122 001c 1D98      		cbi 35-32,5
  88:../../../src/drivers/platform/micaZ/source/mda100_driver.c ****     DDRE  &= ~(1 << 5);
 124               	.LM7:
 125 001e 1598      		cbi 34-32,5
  89:../../../src/drivers/platform/micaZ/source/mda100_driver.c **** 
  90:../../../src/drivers/platform/micaZ/source/mda100_driver.c **** 	if (powerstatus == POWER_ON)
 127               	.LM8:
 128 0020 1130      		cpi r17,lo8(1)
 129 0022 01F4      		brne .L5
  91:../../../src/drivers/platform/micaZ/source/mda100_driver.c **** 	{
  92:../../../src/drivers/platform/micaZ/source/mda100_driver.c **** 		PORTC |= (1 << 0);
 131               	.LM9:
 132 0024 A89A      		sbi 53-32,0
  93:../../../src/drivers/platform/micaZ/source/mda100_driver.c **** 		DDRC  |= (1 << 0);
 134               	.LM10:
 135 0026 A09A      		sbi 52-32,0
 136 0028 00C0      		rjmp .L7
 137               	.L5:
  94:../../../src/drivers/platform/micaZ/source/mda100_driver.c **** 	}
  95:../../../src/drivers/platform/micaZ/source/mda100_driver.c **** 	else
  96:../../../src/drivers/platform/micaZ/source/mda100_driver.c **** 	{
  97:../../../src/drivers/platform/micaZ/source/mda100_driver.c **** 		PORTC &= ~(1 << 0);
 139               	.LM11:
 140 002a A898      		cbi 53-32,0
  98:../../../src/drivers/platform/micaZ/source/mda100_driver.c **** 		DDRC  &= ~(1 << 0);
 142               	.LM12:
 143 002c A098      		cbi 52-32,0
 144               	.L7:
 145               	/* epilogue start */
  99:../../../src/drivers/platform/micaZ/source/mda100_driver.c **** 	}
 100:../../../src/drivers/platform/micaZ/source/mda100_driver.c **** }
 147               	.LM13:
 148 002e 1F91      		pop r17
 149 0030 0895      		ret
 151               	.Lscope2:
 153               		.stabd	78,0,0
 155               	.global	mda100_TemperatureSensor_GetCounts
 157               	mda100_TemperatureSensor_GetCounts:
 158               		.stabd	46,0,0
 101:../../../src/drivers/platform/micaZ/source/mda100_driver.c **** 
 102:../../../src/drivers/platform/micaZ/source/mda100_driver.c **** 
 103:../../../src/drivers/platform/micaZ/source/mda100_driver.c **** 
 104:../../../src/drivers/platform/micaZ/source/mda100_driver.c **** // This is a ratiometric value, so use Vcc as reference
 105:../../../src/drivers/platform/micaZ/source/mda100_driver.c **** unsigned int mda100_LightSensor_GetCounts()
 106:../../../src/drivers/platform/micaZ/source/mda100_driver.c **** {
 107:../../../src/drivers/platform/micaZ/source/mda100_driver.c **** 	CheckIfInitDone();
 108:../../../src/drivers/platform/micaZ/source/mda100_driver.c **** 	mda100_LightSensor_Power(POWER_ON);
 109:../../../src/drivers/platform/micaZ/source/mda100_driver.c **** 	return adc_GetChannel(1);
 110:../../../src/drivers/platform/micaZ/source/mda100_driver.c **** }
 111:../../../src/drivers/platform/micaZ/source/mda100_driver.c **** 
 112:../../../src/drivers/platform/micaZ/source/mda100_driver.c **** 
 113:../../../src/drivers/platform/micaZ/source/mda100_driver.c **** 
 114:../../../src/drivers/platform/micaZ/source/mda100_driver.c **** // This is a ratiometric value, so use Vcc as reference
 115:../../../src/drivers/platform/micaZ/source/mda100_driver.c **** unsigned int mda100_TemperatureSensor_GetCounts()
 116:../../../src/drivers/platform/micaZ/source/mda100_driver.c **** {
 160               	.LM14:
 161               	.LFBB3:
 162               	/* prologue: function */
 163               	/* frame size = 0 */
 117:../../../src/drivers/platform/micaZ/source/mda100_driver.c **** 	CheckIfInitDone();
 165               	.LM15:
 166 0032 8091 0000 		lds r24,mda100_initDone
 167 0036 8823      		tst r24
 168 0038 01F4      		brne .L9
 169 003a 0E94 0000 		call mda100_init
 170               	.L9:
 118:../../../src/drivers/platform/micaZ/source/mda100_driver.c **** 	mda100_TemperatureSensor_Power(POWER_ON);
 172               	.LM16:
 173 003e 81E0      		ldi r24,lo8(1)
 174 0040 0E94 0000 		call mda100_TemperatureSensor_Power
 119:../../../src/drivers/platform/micaZ/source/mda100_driver.c **** 	return adc_GetChannel(1);
 176               	.LM17:
 177 0044 81E0      		ldi r24,lo8(1)
 178 0046 0E94 0000 		call adc_GetChannel
 179               	/* epilogue start */
 120:../../../src/drivers/platform/micaZ/source/mda100_driver.c **** }
 181               	.LM18:
 182 004a 0895      		ret
 184               	.Lscope3:
 186               		.stabd	78,0,0
 188               	.global	mda100_TemperatureSensor_GetKelvin
 190               	mda100_TemperatureSensor_GetKelvin:
 191               		.stabd	46,0,0
 121:../../../src/drivers/platform/micaZ/source/mda100_driver.c **** 
 122:../../../src/drivers/platform/micaZ/source/mda100_driver.c **** 
 123:../../../src/drivers/platform/micaZ/source/mda100_driver.c **** 
 124:../../../src/drivers/platform/micaZ/source/mda100_driver.c **** float mda100_TemperatureSensor_GetKelvin()
 125:../../../src/drivers/platform/micaZ/source/mda100_driver.c **** {
 193               	.LM19:
 194               	.LFBB4:
 195 004c AF92      		push r10
 196 004e BF92      		push r11
 197 0050 CF92      		push r12
 198 0052 DF92      		push r13
 199 0054 EF92      		push r14
 200 0056 FF92      		push r15
 201 0058 0F93      		push r16
 202 005a 1F93      		push r17
 203               	/* prologue: function */
 204               	/* frame size = 0 */
 126:../../../src/drivers/platform/micaZ/source/mda100_driver.c **** 	float counts = mda100_TemperatureSensor_GetCounts();
 206               	.LM20:
 207 005c 0E94 0000 		call mda100_TemperatureSensor_GetCounts
 208 0060 A0E0      		ldi r26,lo8(0)
 209 0062 B0E0      		ldi r27,hi8(0)
 210 0064 BC01      		movw r22,r24
 211 0066 CD01      		movw r24,r26
 212 0068 0E94 0000 		call __floatunsisf
 213 006c 7B01      		movw r14,r22
 214 006e 8C01      		movw r16,r24
 127:../../../src/drivers/platform/micaZ/source/mda100_driver.c **** 	float lnRthr = log( 10e3 * (1023.0 - counts) / counts);
 216               	.LM21:
 217 0070 60E0      		ldi r22,lo8(0x447fc000)
 218 0072 70EC      		ldi r23,hi8(0x447fc000)
 219 0074 8FE7      		ldi r24,hlo8(0x447fc000)
 220 0076 94E4      		ldi r25,hhi8(0x447fc000)
 221 0078 A801      		movw r20,r16
 222 007a 9701      		movw r18,r14
 223 007c 0E94 0000 		call __subsf3
 224 0080 20E0      		ldi r18,lo8(0x461c4000)
 225 0082 30E4      		ldi r19,hi8(0x461c4000)
 226 0084 4CE1      		ldi r20,hlo8(0x461c4000)
 227 0086 56E4      		ldi r21,hhi8(0x461c4000)
 228 0088 0E94 0000 		call __mulsf3
 229 008c A801      		movw r20,r16
 230 008e 9701      		movw r18,r14
 231 0090 0E94 0000 		call __divsf3
 232 0094 0E94 0000 		call log
 233 0098 5B01      		movw r10,r22
 234 009a 6C01      		movw r12,r24
 128:../../../src/drivers/platform/micaZ/source/mda100_driver.c **** 	float lnRthr3 = pow(lnRthr, 3);	// lnRthr³
 236               	.LM22:
 237 009c 20E0      		ldi r18,lo8(0x40400000)
 238 009e 30E0      		ldi r19,hi8(0x40400000)
 239 00a0 40E4      		ldi r20,hlo8(0x40400000)
 240 00a2 50E4      		ldi r21,hhi8(0x40400000)
 241 00a4 0E94 0000 		call pow
 242 00a8 7B01      		movw r14,r22
 243 00aa 8C01      		movw r16,r24
 244 00ac C601      		movw r24,r12
 245 00ae B501      		movw r22,r10
 246 00b0 29E7      		ldi r18,lo8(0x397de379)
 247 00b2 33EE      		ldi r19,hi8(0x397de379)
 248 00b4 4DE7      		ldi r20,hlo8(0x397de379)
 249 00b6 59E3      		ldi r21,hhi8(0x397de379)
 250 00b8 0E94 0000 		call __mulsf3
 251 00bc 28EC      		ldi r18,lo8(0x3a8462c8)
 252 00be 32E6      		ldi r19,hi8(0x3a8462c8)
 253 00c0 44E8      		ldi r20,hlo8(0x3a8462c8)
 254 00c2 5AE3      		ldi r21,hhi8(0x3a8462c8)
 255 00c4 0E94 0000 		call __addsf3
 256 00c8 5B01      		movw r10,r22
 257 00ca 6C01      		movw r12,r24
 258 00cc C801      		movw r24,r16
 259 00ce B701      		movw r22,r14
 260 00d0 2DE2      		ldi r18,lo8(0x341cc42d)
 261 00d2 34EC      		ldi r19,hi8(0x341cc42d)
 262 00d4 4CE1      		ldi r20,hlo8(0x341cc42d)
 263 00d6 54E3      		ldi r21,hhi8(0x341cc42d)
 264 00d8 0E94 0000 		call __mulsf3
 265 00dc 9B01      		movw r18,r22
 266 00de AC01      		movw r20,r24
 267 00e0 C601      		movw r24,r12
 268 00e2 B501      		movw r22,r10
 269 00e4 0E94 0000 		call __addsf3
 270 00e8 9B01      		movw r18,r22
 271 00ea AC01      		movw r20,r24
 272 00ec 60E0      		ldi r22,lo8(0x3f800000)
 273 00ee 70E0      		ldi r23,hi8(0x3f800000)
 274 00f0 80E8      		ldi r24,hlo8(0x3f800000)
 275 00f2 9FE3      		ldi r25,hhi8(0x3f800000)
 276 00f4 0E94 0000 		call __divsf3
 277               	/* epilogue start */
 129:../../../src/drivers/platform/micaZ/source/mda100_driver.c **** 	
 130:../../../src/drivers/platform/micaZ/source/mda100_driver.c **** 	float a = 0.001010024;
 131:../../../src/drivers/platform/micaZ/source/mda100_driver.c **** 	float b = 0.000242127;
 132:../../../src/drivers/platform/micaZ/source/mda100_driver.c **** 	float c = 0.000000146;
 133:../../../src/drivers/platform/micaZ/source/mda100_driver.c **** 	
 134:../../../src/drivers/platform/micaZ/source/mda100_driver.c **** 	return ( 1 / ( a + b * lnRthr + c * lnRthr3) );
 135:../../../src/drivers/platform/micaZ/source/mda100_driver.c **** }
 279               	.LM23:
 280 00f8 1F91      		pop r17
 281 00fa 0F91      		pop r16
 282 00fc FF90      		pop r15
 283 00fe EF90      		pop r14
 284 0100 DF90      		pop r13
 285 0102 CF90      		pop r12
 286 0104 BF90      		pop r11
 287 0106 AF90      		pop r10
 288 0108 0895      		ret
 293               	.Lscope4:
 295               		.stabd	78,0,0
 297               	.global	mda100_TemperatureSensor_GetDegreeCelsius
 299               	mda100_TemperatureSensor_GetDegreeCelsius:
 300               		.stabd	46,0,0
 136:../../../src/drivers/platform/micaZ/source/mda100_driver.c **** 
 137:../../../src/drivers/platform/micaZ/source/mda100_driver.c **** 
 138:../../../src/drivers/platform/micaZ/source/mda100_driver.c **** 
 139:../../../src/drivers/platform/micaZ/source/mda100_driver.c **** float mda100_TemperatureSensor_GetDegreeCelsius()
 140:../../../src/drivers/platform/micaZ/source/mda100_driver.c **** {
 302               	.LM24:
 303               	.LFBB5:
 304               	/* prologue: function */
 305               	/* frame size = 0 */
 141:../../../src/drivers/platform/micaZ/source/mda100_driver.c **** 	return (mda100_TemperatureSensor_GetKelvin() - 273.15);
 307               	.LM25:
 308 010a 0E94 0000 		call mda100_TemperatureSensor_GetKelvin
 309 010e 23E3      		ldi r18,lo8(0x43889333)
 310 0110 33E9      		ldi r19,hi8(0x43889333)
 311 0112 48E8      		ldi r20,hlo8(0x43889333)
 312 0114 53E4      		ldi r21,hhi8(0x43889333)
 313 0116 0E94 0000 		call __subsf3
 314               	/* epilogue start */
 142:../../../src/drivers/platform/micaZ/source/mda100_driver.c **** }
 316               	.LM26:
 317 011a 0895      		ret
 319               	.Lscope5:
 321               		.stabd	78,0,0
 324               	.global	mda100_LightSensor_Power
 326               	mda100_LightSensor_Power:
 327               		.stabd	46,0,0
  62:../../../src/drivers/platform/micaZ/source/mda100_driver.c **** {
 329               	.LM27:
 330               	.LFBB6:
 331 011c 1F93      		push r17
 332               	/* prologue: function */
 333               	/* frame size = 0 */
 334 011e 182F      		mov r17,r24
  63:../../../src/drivers/platform/micaZ/source/mda100_driver.c **** 	CheckIfInitDone();
 336               	.LM28:
 337 0120 8091 0000 		lds r24,mda100_initDone
 338 0124 8823      		tst r24
 339 0126 01F4      		brne .L16
 340 0128 0E94 0000 		call mda100_init
 341               	.L16:
  65:../../../src/drivers/platform/micaZ/source/mda100_driver.c **** 	PORTC &= ~(1 << 0);
 343               	.LM29:
 344 012c A898      		cbi 53-32,0
  66:../../../src/drivers/platform/micaZ/source/mda100_driver.c ****     DDRC  &= ~(1 << 0);
 346               	.LM30:
 347 012e A098      		cbi 52-32,0
  68:../../../src/drivers/platform/micaZ/source/mda100_driver.c **** 	if (powerstatus == POWER_ON)
 349               	.LM31:
 350 0130 1130      		cpi r17,lo8(1)
 351 0132 01F4      		brne .L17
  70:../../../src/drivers/platform/micaZ/source/mda100_driver.c **** 		PORTE |= (1 << 5);
 353               	.LM32:
 354 0134 1D9A      		sbi 35-32,5
  71:../../../src/drivers/platform/micaZ/source/mda100_driver.c **** 		DDRE  |= (1 << 5);
 356               	.LM33:
 357 0136 159A      		sbi 34-32,5
 358 0138 00C0      		rjmp .L19
 359               	.L17:
  75:../../../src/drivers/platform/micaZ/source/mda100_driver.c **** 		PORTE &= ~(1 << 5);
 361               	.LM34:
 362 013a 1D98      		cbi 35-32,5
  76:../../../src/drivers/platform/micaZ/source/mda100_driver.c **** 		DDRE  &= ~(1 << 5);
 364               	.LM35:
 365 013c 1598      		cbi 34-32,5
 366               	.L19:
 367               	/* epilogue start */
  78:../../../src/drivers/platform/micaZ/source/mda100_driver.c **** }
 369               	.LM36:
 370 013e 1F91      		pop r17
 371 0140 0895      		ret
 373               	.Lscope6:
 375               		.stabd	78,0,0
 377               	.global	mda100_LightSensor_GetCounts
 379               	mda100_LightSensor_GetCounts:
 380               		.stabd	46,0,0
 107:../../../src/drivers/platform/micaZ/source/mda100_driver.c **** {
 382               	.LM37:
 383               	.LFBB7:
 384               	/* prologue: function */
 385               	/* frame size = 0 */
 108:../../../src/drivers/platform/micaZ/source/mda100_driver.c **** 	CheckIfInitDone();
 387               	.LM38:
 388 0142 8091 0000 		lds r24,mda100_initDone
 389 0146 8823      		tst r24
 390 0148 01F4      		brne .L21
 391 014a 0E94 0000 		call mda100_init
 392               	.L21:
 109:../../../src/drivers/platform/micaZ/source/mda100_driver.c **** 	mda100_LightSensor_Power(POWER_ON);
 394               	.LM39:
 395 014e 81E0      		ldi r24,lo8(1)
 396 0150 0E94 0000 		call mda100_LightSensor_Power
 110:../../../src/drivers/platform/micaZ/source/mda100_driver.c **** 	return adc_GetChannel(1);
 398               	.LM40:
 399 0154 81E0      		ldi r24,lo8(1)
 400 0156 0E94 0000 		call adc_GetChannel
 401               	/* epilogue start */
 111:../../../src/drivers/platform/micaZ/source/mda100_driver.c **** }
 403               	.LM41:
 404 015a 0895      		ret
 406               	.Lscope7:
 408               		.stabd	78,0,0
 410               	.global	mda100_Powersave
 412               	mda100_Powersave:
 413               		.stabd	46,0,0
  52:../../../src/drivers/platform/micaZ/source/mda100_driver.c **** {
 415               	.LM42:
 416               	.LFBB8:
 417               	/* prologue: function */
 418               	/* frame size = 0 */
  53:../../../src/drivers/platform/micaZ/source/mda100_driver.c **** 	CheckIfInitDone();
 420               	.LM43:
 421 015c 8091 0000 		lds r24,mda100_initDone
 422 0160 8823      		tst r24
 423 0162 01F4      		brne .L24
 424 0164 0E94 0000 		call mda100_init
 425               	.L24:
  54:../../../src/drivers/platform/micaZ/source/mda100_driver.c **** 	adc_Powersave();
 427               	.LM44:
 428 0168 0E94 0000 		call adc_Powersave
 429               	/* epilogue start */
  55:../../../src/drivers/platform/micaZ/source/mda100_driver.c **** }
 431               	.LM45:
 432 016c 0895      		ret
 434               	.Lscope8:
 436               		.stabd	78,0,0
 437               	.global	mda100_initDone
 438               	.global	mda100_initDone
 439               		.section .bss
 442               	mda100_initDone:
 443 0000 00        		.skip 1,0
 445               		.text
 447               	.Letext0:
DEFINED SYMBOLS
                            *ABS*:00000000 mda100_driver.c
     /tmp/cc46ZLwI.s:2      *ABS*:0000003f __SREG__
     /tmp/cc46ZLwI.s:3      *ABS*:0000003e __SP_H__
     /tmp/cc46ZLwI.s:4      *ABS*:0000003d __SP_L__
     /tmp/cc46ZLwI.s:5      *ABS*:00000034 __CCP__
     /tmp/cc46ZLwI.s:6      *ABS*:00000000 __tmp_reg__
     /tmp/cc46ZLwI.s:7      *ABS*:00000001 __zero_reg__
     /tmp/cc46ZLwI.s:78     .text:00000000 mda100_init
     /tmp/cc46ZLwI.s:442    .bss:00000000 mda100_initDone
     /tmp/cc46ZLwI.s:104    .text:0000000c mda100_TemperatureSensor_Power
     /tmp/cc46ZLwI.s:157    .text:00000032 mda100_TemperatureSensor_GetCounts
     /tmp/cc46ZLwI.s:190    .text:0000004c mda100_TemperatureSensor_GetKelvin
     /tmp/cc46ZLwI.s:299    .text:0000010a mda100_TemperatureSensor_GetDegreeCelsius
     /tmp/cc46ZLwI.s:326    .text:0000011c mda100_LightSensor_Power
     /tmp/cc46ZLwI.s:379    .text:00000142 mda100_LightSensor_GetCounts
     /tmp/cc46ZLwI.s:412    .text:0000015c mda100_Powersave

UNDEFINED SYMBOLS
__do_copy_data
__do_clear_bss
adc_init
adc_GetChannel
__floatunsisf
__subsf3
__mulsf3
__divsf3
log
pow
__addsf3
adc_Powersave
