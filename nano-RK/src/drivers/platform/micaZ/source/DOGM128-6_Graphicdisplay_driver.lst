   1               		.file	"DOGM128-6_Graphicdisplay_driver.c"
   2               	__SREG__ = 0x3f
   3               	__SP_H__ = 0x3e
   4               	__SP_L__ = 0x3d
   5               	__CCP__  = 0x34
   6               	__tmp_reg__ = 0
   7               	__zero_reg__ = 1
   8               		.global __do_copy_data
   9               		.global __do_clear_bss
  12               		.text
  13               	.Ltext0:
  93               	.global	DOGM128_6_usart1_sendByte
  95               	DOGM128_6_usart1_sendByte:
  96               		.stabd	46,0,0
   0:../../../src/drivers/platform/micaZ/source/DOGM128-6_Graphicdisplay_driver.c **** /******************************************************************************
   1:../../../src/drivers/platform/micaZ/source/DOGM128-6_Graphicdisplay_driver.c **** *  Nano-RK, a real-time operating system for sensor networks.
   2:../../../src/drivers/platform/micaZ/source/DOGM128-6_Graphicdisplay_driver.c **** *  Copyright (C) 2011 Technische Universität München (www.vmi.ei.tum.de)
   3:../../../src/drivers/platform/micaZ/source/DOGM128-6_Graphicdisplay_driver.c **** *  All rights reserved.
   4:../../../src/drivers/platform/micaZ/source/DOGM128-6_Graphicdisplay_driver.c **** *
   5:../../../src/drivers/platform/micaZ/source/DOGM128-6_Graphicdisplay_driver.c **** *  This is the Open Source Version of Nano-RK included as part of a Dual
   6:../../../src/drivers/platform/micaZ/source/DOGM128-6_Graphicdisplay_driver.c **** *  Licensing Model. If you are unsure which license to use please refer to:
   7:../../../src/drivers/platform/micaZ/source/DOGM128-6_Graphicdisplay_driver.c **** *  http://www.nanork.org/nano-RK/wiki/Licensing
   8:../../../src/drivers/platform/micaZ/source/DOGM128-6_Graphicdisplay_driver.c **** *
   9:../../../src/drivers/platform/micaZ/source/DOGM128-6_Graphicdisplay_driver.c **** *  This program is free software: you can redistribute it and/or modify
  10:../../../src/drivers/platform/micaZ/source/DOGM128-6_Graphicdisplay_driver.c **** *  it under the terms of the GNU General Public License as published by
  11:../../../src/drivers/platform/micaZ/source/DOGM128-6_Graphicdisplay_driver.c **** *  the Free Software Foundation, version 2.0 of the License.
  12:../../../src/drivers/platform/micaZ/source/DOGM128-6_Graphicdisplay_driver.c **** *
  13:../../../src/drivers/platform/micaZ/source/DOGM128-6_Graphicdisplay_driver.c **** *  This program is distributed in the hope that it will be useful,
  14:../../../src/drivers/platform/micaZ/source/DOGM128-6_Graphicdisplay_driver.c **** *  but WITHOUT ANY WARRANTY; without even the implied warranty of
  15:../../../src/drivers/platform/micaZ/source/DOGM128-6_Graphicdisplay_driver.c **** *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  16:../../../src/drivers/platform/micaZ/source/DOGM128-6_Graphicdisplay_driver.c **** *  GNU General Public License for more details.
  17:../../../src/drivers/platform/micaZ/source/DOGM128-6_Graphicdisplay_driver.c **** *
  18:../../../src/drivers/platform/micaZ/source/DOGM128-6_Graphicdisplay_driver.c **** *  You should have received a copy of the GNU General Public License
  19:../../../src/drivers/platform/micaZ/source/DOGM128-6_Graphicdisplay_driver.c **** *  along with this program.  If not, see <http://www.gnu.org/licenses/>.
  20:../../../src/drivers/platform/micaZ/source/DOGM128-6_Graphicdisplay_driver.c **** *
  21:../../../src/drivers/platform/micaZ/source/DOGM128-6_Graphicdisplay_driver.c **** *
  22:../../../src/drivers/platform/micaZ/source/DOGM128-6_Graphicdisplay_driver.c **** *  Driver for Electronic Assembly DOGM128-6 Full Graphic Display
  23:../../../src/drivers/platform/micaZ/source/DOGM128-6_Graphicdisplay_driver.c **** *
  24:../../../src/drivers/platform/micaZ/source/DOGM128-6_Graphicdisplay_driver.c **** *  Contributing Authors (specific to this file):
  25:../../../src/drivers/platform/micaZ/source/DOGM128-6_Graphicdisplay_driver.c **** *  Author: Peter Diener
  26:../../../src/drivers/platform/micaZ/source/DOGM128-6_Graphicdisplay_driver.c **** *
  27:../../../src/drivers/platform/micaZ/source/DOGM128-6_Graphicdisplay_driver.c **** ***************************************************************************************/
  28:../../../src/drivers/platform/micaZ/source/DOGM128-6_Graphicdisplay_driver.c **** 
  29:../../../src/drivers/platform/micaZ/source/DOGM128-6_Graphicdisplay_driver.c **** /*
  30:../../../src/drivers/platform/micaZ/source/DOGM128-6_Graphicdisplay_driver.c **** 
  31:../../../src/drivers/platform/micaZ/source/DOGM128-6_Graphicdisplay_driver.c **** 
  32:../../../src/drivers/platform/micaZ/source/DOGM128-6_Graphicdisplay_driver.c **** Author: 	P. Diener
  33:../../../src/drivers/platform/micaZ/source/DOGM128-6_Graphicdisplay_driver.c **** Target: 	AtMega128(L)
  34:../../../src/drivers/platform/micaZ/source/DOGM128-6_Graphicdisplay_driver.c **** 
  35:../../../src/drivers/platform/micaZ/source/DOGM128-6_Graphicdisplay_driver.c **** The display has to be connected to usart1 spi
  36:../../../src/drivers/platform/micaZ/source/DOGM128-6_Graphicdisplay_driver.c **** chipselect is
  37:../../../src/drivers/platform/micaZ/source/DOGM128-6_Graphicdisplay_driver.c **** A0 is
  38:../../../src/drivers/platform/micaZ/source/DOGM128-6_Graphicdisplay_driver.c **** 
  39:../../../src/drivers/platform/micaZ/source/DOGM128-6_Graphicdisplay_driver.c **** example of usage: 	    LCD_print("Peter Diener", 5*6, 0);
  40:../../../src/drivers/platform/micaZ/source/DOGM128-6_Graphicdisplay_driver.c **** 
  41:../../../src/drivers/platform/micaZ/source/DOGM128-6_Graphicdisplay_driver.c **** ***************************************
  42:../../../src/drivers/platform/micaZ/source/DOGM128-6_Graphicdisplay_driver.c **** 
  43:../../../src/drivers/platform/micaZ/source/DOGM128-6_Graphicdisplay_driver.c **** copyright 2008 - 2009
  44:../../../src/drivers/platform/micaZ/source/DOGM128-6_Graphicdisplay_driver.c **** 
  45:../../../src/drivers/platform/micaZ/source/DOGM128-6_Graphicdisplay_driver.c **** */
  46:../../../src/drivers/platform/micaZ/source/DOGM128-6_Graphicdisplay_driver.c **** 
  47:../../../src/drivers/platform/micaZ/source/DOGM128-6_Graphicdisplay_driver.c **** #define F_CPU 7372800
  48:../../../src/drivers/platform/micaZ/source/DOGM128-6_Graphicdisplay_driver.c **** #include "avr/io.h"
  49:../../../src/drivers/platform/micaZ/source/DOGM128-6_Graphicdisplay_driver.c **** #include "util/delay.h"
  50:../../../src/drivers/platform/micaZ/source/DOGM128-6_Graphicdisplay_driver.c **** #include <avr/pgmspace.h>
  51:../../../src/drivers/platform/micaZ/source/DOGM128-6_Graphicdisplay_driver.c **** 
  52:../../../src/drivers/platform/micaZ/source/DOGM128-6_Graphicdisplay_driver.c **** #include "DOGM128-6_Graphicdisplay_driver.h"
  53:../../../src/drivers/platform/micaZ/source/DOGM128-6_Graphicdisplay_driver.c **** 
  54:../../../src/drivers/platform/micaZ/source/DOGM128-6_Graphicdisplay_driver.c **** #include <font5x7.h>
  55:../../../src/drivers/platform/micaZ/source/DOGM128-6_Graphicdisplay_driver.c **** //Always read this font with pgm_read_byte(&(font5x7[character][i]))
  56:../../../src/drivers/platform/micaZ/source/DOGM128-6_Graphicdisplay_driver.c **** 
  57:../../../src/drivers/platform/micaZ/source/DOGM128-6_Graphicdisplay_driver.c **** 
  58:../../../src/drivers/platform/micaZ/source/DOGM128-6_Graphicdisplay_driver.c **** #define DisA0low		do {PORTC &= ~(1<<0);} while(0)
  59:../../../src/drivers/platform/micaZ/source/DOGM128-6_Graphicdisplay_driver.c **** #define DisA0high		do {PORTC |=  (1<<0);} while(0)
  60:../../../src/drivers/platform/micaZ/source/DOGM128-6_Graphicdisplay_driver.c **** #define DisCSlow		do {PORTC &= ~(1<<2);} while(0)
  61:../../../src/drivers/platform/micaZ/source/DOGM128-6_Graphicdisplay_driver.c **** #define DisCShigh		do {PORTC |=  (1<<2);} while(0)
  62:../../../src/drivers/platform/micaZ/source/DOGM128-6_Graphicdisplay_driver.c **** #define DisRESETlow		do {PORTC &= ~(1<<1);} while(0)
  63:../../../src/drivers/platform/micaZ/source/DOGM128-6_Graphicdisplay_driver.c **** #define DisRESEThigh	do {PORTC |=  (1<<1);} while(0)
  64:../../../src/drivers/platform/micaZ/source/DOGM128-6_Graphicdisplay_driver.c **** #define DisBLIGHTon		do {PORTB |=  (1<<4);} while(0)
  65:../../../src/drivers/platform/micaZ/source/DOGM128-6_Graphicdisplay_driver.c **** #define DisBLIGHToff	do {PORTB &= ~(1<<4);} while(0)
  66:../../../src/drivers/platform/micaZ/source/DOGM128-6_Graphicdisplay_driver.c **** 
  67:../../../src/drivers/platform/micaZ/source/DOGM128-6_Graphicdisplay_driver.c **** #define DisSCLlow		do {PORTD &= ~(1<<5);} while(0)
  68:../../../src/drivers/platform/micaZ/source/DOGM128-6_Graphicdisplay_driver.c **** #define DisSCLhigh		do {PORTD |=  (1<<5);} while(0)
  69:../../../src/drivers/platform/micaZ/source/DOGM128-6_Graphicdisplay_driver.c **** #define DisSOlow		do {PORTD &= ~(1<<3);} while(0)
  70:../../../src/drivers/platform/micaZ/source/DOGM128-6_Graphicdisplay_driver.c **** #define DisSOhigh		do {PORTD |=  (1<<3);} while(0)
  71:../../../src/drivers/platform/micaZ/source/DOGM128-6_Graphicdisplay_driver.c **** 
  72:../../../src/drivers/platform/micaZ/source/DOGM128-6_Graphicdisplay_driver.c **** 
  73:../../../src/drivers/platform/micaZ/source/DOGM128-6_Graphicdisplay_driver.c **** 
  74:../../../src/drivers/platform/micaZ/source/DOGM128-6_Graphicdisplay_driver.c **** /* We are using software spi at the moment
  75:../../../src/drivers/platform/micaZ/source/DOGM128-6_Graphicdisplay_driver.c **** void usart1_init(void)
  76:../../../src/drivers/platform/micaZ/source/DOGM128-6_Graphicdisplay_driver.c **** {
  77:../../../src/drivers/platform/micaZ/source/DOGM128-6_Graphicdisplay_driver.c **** 	//crystal oscillator @ 7.3728 MHz
  78:../../../src/drivers/platform/micaZ/source/DOGM128-6_Graphicdisplay_driver.c **** 	#define FOSC 7372800
  79:../../../src/drivers/platform/micaZ/source/DOGM128-6_Graphicdisplay_driver.c ****   	// Set the baud rate registers
  80:../../../src/drivers/platform/micaZ/source/DOGM128-6_Graphicdisplay_driver.c ****   	UBRR1H = 0;
  81:../../../src/drivers/platform/micaZ/source/DOGM128-6_Graphicdisplay_driver.c ****   	UBRR1L = 0;
  82:../../../src/drivers/platform/micaZ/source/DOGM128-6_Graphicdisplay_driver.c ****   	// Enable receiver and transmitter
  83:../../../src/drivers/platform/micaZ/source/DOGM128-6_Graphicdisplay_driver.c ****   	UCSR1B = ((1<<RXEN) | (1<<TXEN));
  84:../../../src/drivers/platform/micaZ/source/DOGM128-6_Graphicdisplay_driver.c ****   	// Set synchronous operation, set frame format: 8data bits, clock polarity: data is changed at t
  85:../../../src/drivers/platform/micaZ/source/DOGM128-6_Graphicdisplay_driver.c ****   	UCSR1C = ((1<<UMSEL1) | (3<<UCSZ0) | (1<<UCPOL));
  86:../../../src/drivers/platform/micaZ/source/DOGM128-6_Graphicdisplay_driver.c ****   	UBRR1H = 0;
  87:../../../src/drivers/platform/micaZ/source/DOGM128-6_Graphicdisplay_driver.c ****   	UBRR1L = 8;
  88:../../../src/drivers/platform/micaZ/source/DOGM128-6_Graphicdisplay_driver.c **** 
  89:../../../src/drivers/platform/micaZ/source/DOGM128-6_Graphicdisplay_driver.c **** }
  90:../../../src/drivers/platform/micaZ/source/DOGM128-6_Graphicdisplay_driver.c **** */
  91:../../../src/drivers/platform/micaZ/source/DOGM128-6_Graphicdisplay_driver.c **** 
  92:../../../src/drivers/platform/micaZ/source/DOGM128-6_Graphicdisplay_driver.c **** 
  93:../../../src/drivers/platform/micaZ/source/DOGM128-6_Graphicdisplay_driver.c **** void DOGM128_6_usart1_sendByte(unsigned char ch)
  94:../../../src/drivers/platform/micaZ/source/DOGM128-6_Graphicdisplay_driver.c **** {
  98               	.LM0:
  99               	.LFBB1:
 100               	/* prologue: function */
 101               	/* frame size = 0 */
  95:../../../src/drivers/platform/micaZ/source/DOGM128-6_Graphicdisplay_driver.c **** /*	volatile unsigned char garb;
  96:../../../src/drivers/platform/micaZ/source/DOGM128-6_Graphicdisplay_driver.c **** 	DisCSlow;
  97:../../../src/drivers/platform/micaZ/source/DOGM128-6_Graphicdisplay_driver.c **** 	//clear TXC1 here by writing a 1 to it? Is that necessary? yes it is!
  98:../../../src/drivers/platform/micaZ/source/DOGM128-6_Graphicdisplay_driver.c **** 	//UCSR1A |= (1<<TXC1);
  99:../../../src/drivers/platform/micaZ/source/DOGM128-6_Graphicdisplay_driver.c **** 	UDR1 = ch;
 100:../../../src/drivers/platform/micaZ/source/DOGM128-6_Graphicdisplay_driver.c **** 	while ((UCSR1A & (1<<TXC1)) == 0);	//wait for complete transmition
 101:../../../src/drivers/platform/micaZ/source/DOGM128-6_Graphicdisplay_driver.c **** 	garb = UDR1;
 102:../../../src/drivers/platform/micaZ/source/DOGM128-6_Graphicdisplay_driver.c **** 	DisCShigh;
 103:../../../src/drivers/platform/micaZ/source/DOGM128-6_Graphicdisplay_driver.c **** */
 104:../../../src/drivers/platform/micaZ/source/DOGM128-6_Graphicdisplay_driver.c **** 
 105:../../../src/drivers/platform/micaZ/source/DOGM128-6_Graphicdisplay_driver.c **** 
 106:../../../src/drivers/platform/micaZ/source/DOGM128-6_Graphicdisplay_driver.c **** 	DisCSlow;
 103               	.LM1:
 104 0000 AA98      		cbi 53-32,2
 107:../../../src/drivers/platform/micaZ/source/DOGM128-6_Graphicdisplay_driver.c **** 	DisSCLlow;
 106               	.LM2:
 107 0002 9598      		cbi 50-32,5
 108:../../../src/drivers/platform/micaZ/source/DOGM128-6_Graphicdisplay_driver.c **** 	if (ch & 0x80) DisSOhigh; else DisSOlow;
 109               	.LM3:
 110 0004 87FF      		sbrs r24,7
 111 0006 00C0      		rjmp .L2
 112 0008 939A      		sbi 50-32,3
 113 000a 00C0      		rjmp .L3
 114               	.L2:
 115 000c 9398      		cbi 50-32,3
 116               	.L3:
 109:../../../src/drivers/platform/micaZ/source/DOGM128-6_Graphicdisplay_driver.c **** 	DisSCLhigh;
 118               	.LM4:
 119 000e 959A      		sbi 50-32,5
 110:../../../src/drivers/platform/micaZ/source/DOGM128-6_Graphicdisplay_driver.c **** 	DisSCLlow;
 121               	.LM5:
 122 0010 9598      		cbi 50-32,5
 111:../../../src/drivers/platform/micaZ/source/DOGM128-6_Graphicdisplay_driver.c **** 	if (ch & 0x40) DisSOhigh; else DisSOlow;
 124               	.LM6:
 125 0012 86FF      		sbrs r24,6
 126 0014 00C0      		rjmp .L4
 127 0016 939A      		sbi 50-32,3
 128 0018 00C0      		rjmp .L5
 129               	.L4:
 130 001a 9398      		cbi 50-32,3
 131               	.L5:
 112:../../../src/drivers/platform/micaZ/source/DOGM128-6_Graphicdisplay_driver.c **** 	DisSCLhigh;
 133               	.LM7:
 134 001c 959A      		sbi 50-32,5
 113:../../../src/drivers/platform/micaZ/source/DOGM128-6_Graphicdisplay_driver.c **** 	DisSCLlow;
 136               	.LM8:
 137 001e 9598      		cbi 50-32,5
 114:../../../src/drivers/platform/micaZ/source/DOGM128-6_Graphicdisplay_driver.c **** 	if (ch & 0x20) DisSOhigh; else DisSOlow;
 139               	.LM9:
 140 0020 85FF      		sbrs r24,5
 141 0022 00C0      		rjmp .L6
 142 0024 939A      		sbi 50-32,3
 143 0026 00C0      		rjmp .L7
 144               	.L6:
 145 0028 9398      		cbi 50-32,3
 146               	.L7:
 115:../../../src/drivers/platform/micaZ/source/DOGM128-6_Graphicdisplay_driver.c **** 	DisSCLhigh;
 148               	.LM10:
 149 002a 959A      		sbi 50-32,5
 116:../../../src/drivers/platform/micaZ/source/DOGM128-6_Graphicdisplay_driver.c **** 	DisSCLlow;
 151               	.LM11:
 152 002c 9598      		cbi 50-32,5
 117:../../../src/drivers/platform/micaZ/source/DOGM128-6_Graphicdisplay_driver.c **** 	if (ch & 0x10) DisSOhigh; else DisSOlow;
 154               	.LM12:
 155 002e 84FF      		sbrs r24,4
 156 0030 00C0      		rjmp .L8
 157 0032 939A      		sbi 50-32,3
 158 0034 00C0      		rjmp .L9
 159               	.L8:
 160 0036 9398      		cbi 50-32,3
 161               	.L9:
 118:../../../src/drivers/platform/micaZ/source/DOGM128-6_Graphicdisplay_driver.c **** 	DisSCLhigh;
 163               	.LM13:
 164 0038 959A      		sbi 50-32,5
 119:../../../src/drivers/platform/micaZ/source/DOGM128-6_Graphicdisplay_driver.c **** 	DisSCLlow;
 166               	.LM14:
 167 003a 9598      		cbi 50-32,5
 120:../../../src/drivers/platform/micaZ/source/DOGM128-6_Graphicdisplay_driver.c **** 	if (ch & 0x08) DisSOhigh; else DisSOlow;
 169               	.LM15:
 170 003c 83FF      		sbrs r24,3
 171 003e 00C0      		rjmp .L10
 172 0040 939A      		sbi 50-32,3
 173 0042 00C0      		rjmp .L11
 174               	.L10:
 175 0044 9398      		cbi 50-32,3
 176               	.L11:
 121:../../../src/drivers/platform/micaZ/source/DOGM128-6_Graphicdisplay_driver.c **** 	DisSCLhigh;
 178               	.LM16:
 179 0046 959A      		sbi 50-32,5
 122:../../../src/drivers/platform/micaZ/source/DOGM128-6_Graphicdisplay_driver.c **** 	DisSCLlow;
 181               	.LM17:
 182 0048 9598      		cbi 50-32,5
 123:../../../src/drivers/platform/micaZ/source/DOGM128-6_Graphicdisplay_driver.c **** 	if (ch & 0x04) DisSOhigh; else DisSOlow;
 184               	.LM18:
 185 004a 82FF      		sbrs r24,2
 186 004c 00C0      		rjmp .L12
 187 004e 939A      		sbi 50-32,3
 188 0050 00C0      		rjmp .L13
 189               	.L12:
 190 0052 9398      		cbi 50-32,3
 191               	.L13:
 124:../../../src/drivers/platform/micaZ/source/DOGM128-6_Graphicdisplay_driver.c **** 	DisSCLhigh;
 193               	.LM19:
 194 0054 959A      		sbi 50-32,5
 125:../../../src/drivers/platform/micaZ/source/DOGM128-6_Graphicdisplay_driver.c **** 	DisSCLlow;
 196               	.LM20:
 197 0056 9598      		cbi 50-32,5
 126:../../../src/drivers/platform/micaZ/source/DOGM128-6_Graphicdisplay_driver.c **** 	if (ch & 0x02) DisSOhigh; else DisSOlow;
 199               	.LM21:
 200 0058 81FF      		sbrs r24,1
 201 005a 00C0      		rjmp .L14
 202 005c 939A      		sbi 50-32,3
 203 005e 00C0      		rjmp .L15
 204               	.L14:
 205 0060 9398      		cbi 50-32,3
 206               	.L15:
 127:../../../src/drivers/platform/micaZ/source/DOGM128-6_Graphicdisplay_driver.c **** 	DisSCLhigh;
 208               	.LM22:
 209 0062 959A      		sbi 50-32,5
 128:../../../src/drivers/platform/micaZ/source/DOGM128-6_Graphicdisplay_driver.c **** 	DisSCLlow;
 211               	.LM23:
 212 0064 9598      		cbi 50-32,5
 129:../../../src/drivers/platform/micaZ/source/DOGM128-6_Graphicdisplay_driver.c **** 	if (ch & 0x01) DisSOhigh; else DisSOlow;
 214               	.LM24:
 215 0066 80FF      		sbrs r24,0
 216 0068 00C0      		rjmp .L16
 217 006a 939A      		sbi 50-32,3
 218 006c 00C0      		rjmp .L17
 219               	.L16:
 220 006e 9398      		cbi 50-32,3
 221               	.L17:
 130:../../../src/drivers/platform/micaZ/source/DOGM128-6_Graphicdisplay_driver.c **** 	DisSCLhigh;
 223               	.LM25:
 224 0070 959A      		sbi 50-32,5
 131:../../../src/drivers/platform/micaZ/source/DOGM128-6_Graphicdisplay_driver.c **** 	DisSCLhigh;	//short delay (repeating the last command)
 226               	.LM26:
 227 0072 959A      		sbi 50-32,5
 132:../../../src/drivers/platform/micaZ/source/DOGM128-6_Graphicdisplay_driver.c **** 
 133:../../../src/drivers/platform/micaZ/source/DOGM128-6_Graphicdisplay_driver.c **** 	DisCShigh;
 229               	.LM27:
 230 0074 AA9A      		sbi 53-32,2
 231               	/* epilogue start */
 134:../../../src/drivers/platform/micaZ/source/DOGM128-6_Graphicdisplay_driver.c **** }
 233               	.LM28:
 234 0076 0895      		ret
 236               	.Lscope1:
 238               		.stabd	78,0,0
 240               	.global	DOGM128_6_clear_display
 242               	DOGM128_6_clear_display:
 243               		.stabd	46,0,0
 135:../../../src/drivers/platform/micaZ/source/DOGM128-6_Graphicdisplay_driver.c **** 
 136:../../../src/drivers/platform/micaZ/source/DOGM128-6_Graphicdisplay_driver.c **** 
 137:../../../src/drivers/platform/micaZ/source/DOGM128-6_Graphicdisplay_driver.c **** 
 138:../../../src/drivers/platform/micaZ/source/DOGM128-6_Graphicdisplay_driver.c **** void DOGM128_6_clear_display(void)
 139:../../../src/drivers/platform/micaZ/source/DOGM128-6_Graphicdisplay_driver.c **** {
 245               	.LM29:
 246               	.LFBB2:
 247 0078 DF93      		push r29
 248 007a CF93      		push r28
 249 007c 00D0      		rcall .
 250 007e 0F92      		push __tmp_reg__
 251 0080 CDB7      		in r28,__SP_L__
 252 0082 DEB7      		in r29,__SP_H__
 253               	/* prologue: function */
 254               	/* frame size = 3 */
 140:../../../src/drivers/platform/micaZ/source/DOGM128-6_Graphicdisplay_driver.c ****   volatile int i;
 141:../../../src/drivers/platform/micaZ/source/DOGM128-6_Graphicdisplay_driver.c ****   volatile char j;
 142:../../../src/drivers/platform/micaZ/source/DOGM128-6_Graphicdisplay_driver.c **** 
 143:../../../src/drivers/platform/micaZ/source/DOGM128-6_Graphicdisplay_driver.c ****   DisA0high;
 256               	.LM30:
 257 0084 A89A      		sbi 53-32,0
 144:../../../src/drivers/platform/micaZ/source/DOGM128-6_Graphicdisplay_driver.c **** 
 145:../../../src/drivers/platform/micaZ/source/DOGM128-6_Graphicdisplay_driver.c ****   for(j=0; j<8; j++)
 259               	.LM31:
 260 0086 1982      		std Y+1,__zero_reg__
 261 0088 00C0      		rjmp .L20
 262               	.L23:
 146:../../../src/drivers/platform/micaZ/source/DOGM128-6_Graphicdisplay_driver.c ****   {
 147:../../../src/drivers/platform/micaZ/source/DOGM128-6_Graphicdisplay_driver.c **** 	DisA0low;
 264               	.LM32:
 265 008a A898      		cbi 53-32,0
 148:../../../src/drivers/platform/micaZ/source/DOGM128-6_Graphicdisplay_driver.c ****     DOGM128_6_usart1_sendByte(0xB0 + j);						//Set Page Address
 267               	.LM33:
 268 008c 8981      		ldd r24,Y+1
 269 008e 8055      		subi r24,lo8(-(-80))
 270 0090 0E94 0000 		call DOGM128_6_usart1_sendByte
 149:../../../src/drivers/platform/micaZ/source/DOGM128-6_Graphicdisplay_driver.c ****     DOGM128_6_usart1_sendByte(0x10);							//Set Column Address upper nibble to 0
 272               	.LM34:
 273 0094 80E1      		ldi r24,lo8(16)
 274 0096 0E94 0000 		call DOGM128_6_usart1_sendByte
 150:../../../src/drivers/platform/micaZ/source/DOGM128-6_Graphicdisplay_driver.c ****     DOGM128_6_usart1_sendByte(0x00);							//Set Column Address lower nibble to 0
 276               	.LM35:
 277 009a 80E0      		ldi r24,lo8(0)
 278 009c 0E94 0000 		call DOGM128_6_usart1_sendByte
 151:../../../src/drivers/platform/micaZ/source/DOGM128-6_Graphicdisplay_driver.c ****     DisA0high;
 280               	.LM36:
 281 00a0 A89A      		sbi 53-32,0
 152:../../../src/drivers/platform/micaZ/source/DOGM128-6_Graphicdisplay_driver.c **** 
 153:../../../src/drivers/platform/micaZ/source/DOGM128-6_Graphicdisplay_driver.c ****     for(i=0; i<128; i++)
 283               	.LM37:
 284 00a2 1B82      		std Y+3,__zero_reg__
 285 00a4 1A82      		std Y+2,__zero_reg__
 286 00a6 00C0      		rjmp .L21
 287               	.L22:
 154:../../../src/drivers/platform/micaZ/source/DOGM128-6_Graphicdisplay_driver.c ****     {
 155:../../../src/drivers/platform/micaZ/source/DOGM128-6_Graphicdisplay_driver.c ****       DOGM128_6_usart1_sendByte(0x00);							//Write white bytes to the display
 289               	.LM38:
 290 00a8 80E0      		ldi r24,lo8(0)
 291 00aa 0E94 0000 		call DOGM128_6_usart1_sendByte
 154:../../../src/drivers/platform/micaZ/source/DOGM128-6_Graphicdisplay_driver.c ****     {
 293               	.LM39:
 294 00ae 8A81      		ldd r24,Y+2
 295 00b0 9B81      		ldd r25,Y+3
 296 00b2 0196      		adiw r24,1
 297 00b4 9B83      		std Y+3,r25
 298 00b6 8A83      		std Y+2,r24
 299               	.L21:
 300 00b8 8A81      		ldd r24,Y+2
 301 00ba 9B81      		ldd r25,Y+3
 302 00bc 8038      		cpi r24,128
 303 00be 9105      		cpc r25,__zero_reg__
 304 00c0 04F0      		brlt .L22
 146:../../../src/drivers/platform/micaZ/source/DOGM128-6_Graphicdisplay_driver.c ****   for(j=0; j<8; j++)
 306               	.LM40:
 307 00c2 8981      		ldd r24,Y+1
 308 00c4 8F5F      		subi r24,lo8(-(1))
 309 00c6 8983      		std Y+1,r24
 310               	.L20:
 311 00c8 8981      		ldd r24,Y+1
 312 00ca 8830      		cpi r24,lo8(8)
 313 00cc 00F0      		brlo .L23
 314               	/* epilogue start */
 156:../../../src/drivers/platform/micaZ/source/DOGM128-6_Graphicdisplay_driver.c ****     }
 157:../../../src/drivers/platform/micaZ/source/DOGM128-6_Graphicdisplay_driver.c ****   }
 158:../../../src/drivers/platform/micaZ/source/DOGM128-6_Graphicdisplay_driver.c **** }
 316               	.LM41:
 317 00ce 0F90      		pop __tmp_reg__
 318 00d0 0F90      		pop __tmp_reg__
 319 00d2 0F90      		pop __tmp_reg__
 320 00d4 CF91      		pop r28
 321 00d6 DF91      		pop r29
 322 00d8 0895      		ret
 328               	.Lscope2:
 330               		.stabd	78,0,0
 332               	.global	DOGM128_6_display_init
 334               	DOGM128_6_display_init:
 335               		.stabd	46,0,0
 159:../../../src/drivers/platform/micaZ/source/DOGM128-6_Graphicdisplay_driver.c **** 
 160:../../../src/drivers/platform/micaZ/source/DOGM128-6_Graphicdisplay_driver.c **** 
 161:../../../src/drivers/platform/micaZ/source/DOGM128-6_Graphicdisplay_driver.c **** 
 162:../../../src/drivers/platform/micaZ/source/DOGM128-6_Graphicdisplay_driver.c **** void DOGM128_6_display_init(void)
 163:../../../src/drivers/platform/micaZ/source/DOGM128-6_Graphicdisplay_driver.c **** {
 337               	.LM42:
 338               	.LFBB3:
 339               	/* prologue: function */
 340               	/* frame size = 0 */
 164:../../../src/drivers/platform/micaZ/source/DOGM128-6_Graphicdisplay_driver.c **** 
 165:../../../src/drivers/platform/micaZ/source/DOGM128-6_Graphicdisplay_driver.c ****   	PORTB &= b11101111;		//LED backlight at Port B4
 342               	.LM43:
 343 00da C498      		cbi 56-32,4
 166:../../../src/drivers/platform/micaZ/source/DOGM128-6_Graphicdisplay_driver.c ****   	DDRB  |= b00010000;
 345               	.LM44:
 346 00dc BC9A      		sbi 55-32,4
 167:../../../src/drivers/platform/micaZ/source/DOGM128-6_Graphicdisplay_driver.c **** 
 168:../../../src/drivers/platform/micaZ/source/DOGM128-6_Graphicdisplay_driver.c ****   	PORTC |= b00000111;		//A0, Chip select and Reset at Port C0..C2
 348               	.LM45:
 349 00de 85B3      		in r24,53-32
 350 00e0 8760      		ori r24,lo8(7)
 351 00e2 85BB      		out 53-32,r24
 169:../../../src/drivers/platform/micaZ/source/DOGM128-6_Graphicdisplay_driver.c ****   	DDRC  |= b00000111;
 353               	.LM46:
 354 00e4 84B3      		in r24,52-32
 355 00e6 8760      		ori r24,lo8(7)
 356 00e8 84BB      		out 52-32,r24
 170:../../../src/drivers/platform/micaZ/source/DOGM128-6_Graphicdisplay_driver.c **** 
 171:../../../src/drivers/platform/micaZ/source/DOGM128-6_Graphicdisplay_driver.c ****   	DDRD  |= b00101000;		//PD5 is XCK output, PD3 is serial data output
 358               	.LM47:
 359 00ea 81B3      		in r24,49-32
 360 00ec 8862      		ori r24,lo8(40)
 361 00ee 81BB      		out 49-32,r24
 172:../../../src/drivers/platform/micaZ/source/DOGM128-6_Graphicdisplay_driver.c ****   	PORTD |= b00001000;
 363               	.LM48:
 364 00f0 939A      		sbi 50-32,3
 173:../../../src/drivers/platform/micaZ/source/DOGM128-6_Graphicdisplay_driver.c **** 
 174:../../../src/drivers/platform/micaZ/source/DOGM128-6_Graphicdisplay_driver.c **** 	PORTC = b01111000;		//enable pullups for push-buttons
 366               	.LM49:
 367 00f2 88E7      		ldi r24,lo8(120)
 368 00f4 85BB      		out 53-32,r24
 175:../../../src/drivers/platform/micaZ/source/DOGM128-6_Graphicdisplay_driver.c **** 	DDRC &= b10000111;		//pins to push-buttons are inputs
 370               	.LM50:
 371 00f6 84B3      		in r24,52-32
 372 00f8 8778      		andi r24,lo8(-121)
 373 00fa 84BB      		out 52-32,r24
 176:../../../src/drivers/platform/micaZ/source/DOGM128-6_Graphicdisplay_driver.c **** 
 177:../../../src/drivers/platform/micaZ/source/DOGM128-6_Graphicdisplay_driver.c **** //usart doesn't work, so we use an SPI in software
 178:../../../src/drivers/platform/micaZ/source/DOGM128-6_Graphicdisplay_driver.c **** //	usart1_init();
 179:../../../src/drivers/platform/micaZ/source/DOGM128-6_Graphicdisplay_driver.c **** 
 180:../../../src/drivers/platform/micaZ/source/DOGM128-6_Graphicdisplay_driver.c ****   	DisA0low;
 375               	.LM51:
 376 00fc A898      		cbi 53-32,0
 181:../../../src/drivers/platform/micaZ/source/DOGM128-6_Graphicdisplay_driver.c **** 
 182:../../../src/drivers/platform/micaZ/source/DOGM128-6_Graphicdisplay_driver.c ****   	DisRESETlow;
 378               	.LM52:
 379 00fe A998      		cbi 53-32,1
 380 0100 88EE      		ldi r24,lo8(1000)
 381 0102 93E0      		ldi r25,hi8(1000)
 382               	.LBB18:
 383               	.LBB19:
 384               	.LBB20:
 385               	.LBB21:
 387               	.Ltext1:
   0:/usr/lib/gcc/avr/4.3.4/../../../avr/include/util/delay_basic.h **** /* Copyright (c) 2002, Marek Michalkiewicz
   1:/usr/lib/gcc/avr/4.3.4/../../../avr/include/util/delay_basic.h ****    Copyright (c) 2007 Joerg Wunsch
   2:/usr/lib/gcc/avr/4.3.4/../../../avr/include/util/delay_basic.h ****    All rights reserved.
   3:/usr/lib/gcc/avr/4.3.4/../../../avr/include/util/delay_basic.h **** 
   4:/usr/lib/gcc/avr/4.3.4/../../../avr/include/util/delay_basic.h ****    Redistribution and use in source and binary forms, with or without
   5:/usr/lib/gcc/avr/4.3.4/../../../avr/include/util/delay_basic.h ****    modification, are permitted provided that the following conditions are met:
   6:/usr/lib/gcc/avr/4.3.4/../../../avr/include/util/delay_basic.h **** 
   7:/usr/lib/gcc/avr/4.3.4/../../../avr/include/util/delay_basic.h ****    * Redistributions of source code must retain the above copyright
   8:/usr/lib/gcc/avr/4.3.4/../../../avr/include/util/delay_basic.h ****      notice, this list of conditions and the following disclaimer.
   9:/usr/lib/gcc/avr/4.3.4/../../../avr/include/util/delay_basic.h **** 
  10:/usr/lib/gcc/avr/4.3.4/../../../avr/include/util/delay_basic.h ****    * Redistributions in binary form must reproduce the above copyright
  11:/usr/lib/gcc/avr/4.3.4/../../../avr/include/util/delay_basic.h ****      notice, this list of conditions and the following disclaimer in
  12:/usr/lib/gcc/avr/4.3.4/../../../avr/include/util/delay_basic.h ****      the documentation and/or other materials provided with the
  13:/usr/lib/gcc/avr/4.3.4/../../../avr/include/util/delay_basic.h ****      distribution.
  14:/usr/lib/gcc/avr/4.3.4/../../../avr/include/util/delay_basic.h **** 
  15:/usr/lib/gcc/avr/4.3.4/../../../avr/include/util/delay_basic.h ****    * Neither the name of the copyright holders nor the names of
  16:/usr/lib/gcc/avr/4.3.4/../../../avr/include/util/delay_basic.h ****      contributors may be used to endorse or promote products derived
  17:/usr/lib/gcc/avr/4.3.4/../../../avr/include/util/delay_basic.h ****      from this software without specific prior written permission.
  18:/usr/lib/gcc/avr/4.3.4/../../../avr/include/util/delay_basic.h **** 
  19:/usr/lib/gcc/avr/4.3.4/../../../avr/include/util/delay_basic.h ****   THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  20:/usr/lib/gcc/avr/4.3.4/../../../avr/include/util/delay_basic.h ****   AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  21:/usr/lib/gcc/avr/4.3.4/../../../avr/include/util/delay_basic.h ****   IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
  22:/usr/lib/gcc/avr/4.3.4/../../../avr/include/util/delay_basic.h ****   ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE
  23:/usr/lib/gcc/avr/4.3.4/../../../avr/include/util/delay_basic.h ****   LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
  24:/usr/lib/gcc/avr/4.3.4/../../../avr/include/util/delay_basic.h ****   CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
  25:/usr/lib/gcc/avr/4.3.4/../../../avr/include/util/delay_basic.h ****   SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
  26:/usr/lib/gcc/avr/4.3.4/../../../avr/include/util/delay_basic.h ****   INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
  27:/usr/lib/gcc/avr/4.3.4/../../../avr/include/util/delay_basic.h ****   CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
  28:/usr/lib/gcc/avr/4.3.4/../../../avr/include/util/delay_basic.h ****   ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
  29:/usr/lib/gcc/avr/4.3.4/../../../avr/include/util/delay_basic.h ****   POSSIBILITY OF SUCH DAMAGE. */
  30:/usr/lib/gcc/avr/4.3.4/../../../avr/include/util/delay_basic.h **** 
  31:/usr/lib/gcc/avr/4.3.4/../../../avr/include/util/delay_basic.h **** /* $Id: delay_basic.h,v 1.1 2007/05/13 21:23:20 joerg_wunsch Exp $ */
  32:/usr/lib/gcc/avr/4.3.4/../../../avr/include/util/delay_basic.h **** 
  33:/usr/lib/gcc/avr/4.3.4/../../../avr/include/util/delay_basic.h **** #ifndef _UTIL_DELAY_BASIC_H_
  34:/usr/lib/gcc/avr/4.3.4/../../../avr/include/util/delay_basic.h **** #define _UTIL_DELAY_BASIC_H_ 1
  35:/usr/lib/gcc/avr/4.3.4/../../../avr/include/util/delay_basic.h **** 
  36:/usr/lib/gcc/avr/4.3.4/../../../avr/include/util/delay_basic.h **** #include <inttypes.h>
  37:/usr/lib/gcc/avr/4.3.4/../../../avr/include/util/delay_basic.h **** 
  38:/usr/lib/gcc/avr/4.3.4/../../../avr/include/util/delay_basic.h **** /** \file */
  39:/usr/lib/gcc/avr/4.3.4/../../../avr/include/util/delay_basic.h **** /** \defgroup util_delay_basic <util/delay_basic.h>: Basic busy-wait delay loops
  40:/usr/lib/gcc/avr/4.3.4/../../../avr/include/util/delay_basic.h ****     \code
  41:/usr/lib/gcc/avr/4.3.4/../../../avr/include/util/delay_basic.h ****     #include <util/delay_basic.h>
  42:/usr/lib/gcc/avr/4.3.4/../../../avr/include/util/delay_basic.h ****     \endcode
  43:/usr/lib/gcc/avr/4.3.4/../../../avr/include/util/delay_basic.h **** 
  44:/usr/lib/gcc/avr/4.3.4/../../../avr/include/util/delay_basic.h ****     The functions in this header file implement simple delay loops
  45:/usr/lib/gcc/avr/4.3.4/../../../avr/include/util/delay_basic.h ****     that perform a busy-waiting.  They are typically used to
  46:/usr/lib/gcc/avr/4.3.4/../../../avr/include/util/delay_basic.h ****     facilitate short delays in the program execution.  They are
  47:/usr/lib/gcc/avr/4.3.4/../../../avr/include/util/delay_basic.h ****     implemented as count-down loops with a well-known CPU cycle
  48:/usr/lib/gcc/avr/4.3.4/../../../avr/include/util/delay_basic.h ****     count per loop iteration.  As such, no other processing can
  49:/usr/lib/gcc/avr/4.3.4/../../../avr/include/util/delay_basic.h ****     occur simultaneously.  It should be kept in mind that the
  50:/usr/lib/gcc/avr/4.3.4/../../../avr/include/util/delay_basic.h ****     functions described here do not disable interrupts.
  51:/usr/lib/gcc/avr/4.3.4/../../../avr/include/util/delay_basic.h **** 
  52:/usr/lib/gcc/avr/4.3.4/../../../avr/include/util/delay_basic.h ****     In general, for long delays, the use of hardware timers is
  53:/usr/lib/gcc/avr/4.3.4/../../../avr/include/util/delay_basic.h ****     much preferrable, as they free the CPU, and allow for
  54:/usr/lib/gcc/avr/4.3.4/../../../avr/include/util/delay_basic.h ****     concurrent processing of other events while the timer is
  55:/usr/lib/gcc/avr/4.3.4/../../../avr/include/util/delay_basic.h ****     running.  However, in particular for very short delays, the
  56:/usr/lib/gcc/avr/4.3.4/../../../avr/include/util/delay_basic.h ****     overhead of setting up a hardware timer is too much compared
  57:/usr/lib/gcc/avr/4.3.4/../../../avr/include/util/delay_basic.h ****     to the overall delay time.
  58:/usr/lib/gcc/avr/4.3.4/../../../avr/include/util/delay_basic.h **** 
  59:/usr/lib/gcc/avr/4.3.4/../../../avr/include/util/delay_basic.h ****     Two inline functions are provided for the actual delay algorithms.
  60:/usr/lib/gcc/avr/4.3.4/../../../avr/include/util/delay_basic.h **** 
  61:/usr/lib/gcc/avr/4.3.4/../../../avr/include/util/delay_basic.h **** */
  62:/usr/lib/gcc/avr/4.3.4/../../../avr/include/util/delay_basic.h **** 
  63:/usr/lib/gcc/avr/4.3.4/../../../avr/include/util/delay_basic.h **** #if !defined(__DOXYGEN__)
  64:/usr/lib/gcc/avr/4.3.4/../../../avr/include/util/delay_basic.h **** static inline void _delay_loop_1(uint8_t __count) __attribute__((always_inline));
  65:/usr/lib/gcc/avr/4.3.4/../../../avr/include/util/delay_basic.h **** static inline void _delay_loop_2(uint16_t __count) __attribute__((always_inline));
  66:/usr/lib/gcc/avr/4.3.4/../../../avr/include/util/delay_basic.h **** #endif
  67:/usr/lib/gcc/avr/4.3.4/../../../avr/include/util/delay_basic.h **** 
  68:/usr/lib/gcc/avr/4.3.4/../../../avr/include/util/delay_basic.h **** /** \ingroup util_delay_basic
  69:/usr/lib/gcc/avr/4.3.4/../../../avr/include/util/delay_basic.h **** 
  70:/usr/lib/gcc/avr/4.3.4/../../../avr/include/util/delay_basic.h ****     Delay loop using an 8-bit counter \c __count, so up to 256
  71:/usr/lib/gcc/avr/4.3.4/../../../avr/include/util/delay_basic.h ****     iterations are possible.  (The value 256 would have to be passed
  72:/usr/lib/gcc/avr/4.3.4/../../../avr/include/util/delay_basic.h ****     as 0.)  The loop executes three CPU cycles per iteration, not
  73:/usr/lib/gcc/avr/4.3.4/../../../avr/include/util/delay_basic.h ****     including the overhead the compiler needs to setup the counter
  74:/usr/lib/gcc/avr/4.3.4/../../../avr/include/util/delay_basic.h ****     register.
  75:/usr/lib/gcc/avr/4.3.4/../../../avr/include/util/delay_basic.h **** 
  76:/usr/lib/gcc/avr/4.3.4/../../../avr/include/util/delay_basic.h ****     Thus, at a CPU speed of 1 MHz, delays of up to 768 microseconds
  77:/usr/lib/gcc/avr/4.3.4/../../../avr/include/util/delay_basic.h ****     can be achieved.
  78:/usr/lib/gcc/avr/4.3.4/../../../avr/include/util/delay_basic.h **** */
  79:/usr/lib/gcc/avr/4.3.4/../../../avr/include/util/delay_basic.h **** void
  80:/usr/lib/gcc/avr/4.3.4/../../../avr/include/util/delay_basic.h **** _delay_loop_1(uint8_t __count)
  81:/usr/lib/gcc/avr/4.3.4/../../../avr/include/util/delay_basic.h **** {
  82:/usr/lib/gcc/avr/4.3.4/../../../avr/include/util/delay_basic.h **** 	__asm__ volatile (
  83:/usr/lib/gcc/avr/4.3.4/../../../avr/include/util/delay_basic.h **** 		"1: dec %0" "\n\t"
  84:/usr/lib/gcc/avr/4.3.4/../../../avr/include/util/delay_basic.h **** 		"brne 1b"
  85:/usr/lib/gcc/avr/4.3.4/../../../avr/include/util/delay_basic.h **** 		: "=r" (__count)
  86:/usr/lib/gcc/avr/4.3.4/../../../avr/include/util/delay_basic.h **** 		: "0" (__count)
  87:/usr/lib/gcc/avr/4.3.4/../../../avr/include/util/delay_basic.h **** 	);
  88:/usr/lib/gcc/avr/4.3.4/../../../avr/include/util/delay_basic.h **** }
  89:/usr/lib/gcc/avr/4.3.4/../../../avr/include/util/delay_basic.h **** 
  90:/usr/lib/gcc/avr/4.3.4/../../../avr/include/util/delay_basic.h **** /** \ingroup util_delay_basic
  91:/usr/lib/gcc/avr/4.3.4/../../../avr/include/util/delay_basic.h **** 
  92:/usr/lib/gcc/avr/4.3.4/../../../avr/include/util/delay_basic.h ****     Delay loop using a 16-bit counter \c __count, so up to 65536
  93:/usr/lib/gcc/avr/4.3.4/../../../avr/include/util/delay_basic.h ****     iterations are possible.  (The value 65536 would have to be
  94:/usr/lib/gcc/avr/4.3.4/../../../avr/include/util/delay_basic.h ****     passed as 0.)  The loop executes four CPU cycles per iteration,
  95:/usr/lib/gcc/avr/4.3.4/../../../avr/include/util/delay_basic.h ****     not including the overhead the compiler requires to setup the
  96:/usr/lib/gcc/avr/4.3.4/../../../avr/include/util/delay_basic.h ****     counter register pair.
  97:/usr/lib/gcc/avr/4.3.4/../../../avr/include/util/delay_basic.h **** 
  98:/usr/lib/gcc/avr/4.3.4/../../../avr/include/util/delay_basic.h ****     Thus, at a CPU speed of 1 MHz, delays of up to about 262.1
  99:/usr/lib/gcc/avr/4.3.4/../../../avr/include/util/delay_basic.h ****     milliseconds can be achieved.
 100:/usr/lib/gcc/avr/4.3.4/../../../avr/include/util/delay_basic.h ****  */
 101:/usr/lib/gcc/avr/4.3.4/../../../avr/include/util/delay_basic.h **** void
 102:/usr/lib/gcc/avr/4.3.4/../../../avr/include/util/delay_basic.h **** _delay_loop_2(uint16_t __count)
 103:/usr/lib/gcc/avr/4.3.4/../../../avr/include/util/delay_basic.h **** {
 104:/usr/lib/gcc/avr/4.3.4/../../../avr/include/util/delay_basic.h **** 	__asm__ volatile (
 389               	.LM53:
 390 0104 28EB      		ldi r18,lo8(184)
 391 0106 30E0      		ldi r19,hi8(184)
 392               	.L26:
 393 0108 F901      		movw r30,r18
 394               	/* #APP */
 395               	 ;  105 "/usr/lib/gcc/avr/4.3.4/../../../avr/include/util/delay_basic.h" 1
 396 010a 3197      		1: sbiw r30,1
 397 010c 01F4      		brne 1b
 398               	 ;  0 "" 2
 399               	/* #NOAPP */
 400               	.LBE21:
 401               	.LBE20:
 403               	.Ltext2:
   0:/usr/lib/gcc/avr/4.3.4/../../../avr/include/util/delay.h **** /* Copyright (c) 2002, Marek Michalkiewicz
   1:/usr/lib/gcc/avr/4.3.4/../../../avr/include/util/delay.h ****    Copyright (c) 2004,2005,2007 Joerg Wunsch
   2:/usr/lib/gcc/avr/4.3.4/../../../avr/include/util/delay.h ****    Copyright (c) 2007  Florin-Viorel Petrov
   3:/usr/lib/gcc/avr/4.3.4/../../../avr/include/util/delay.h ****    All rights reserved.
   4:/usr/lib/gcc/avr/4.3.4/../../../avr/include/util/delay.h **** 
   5:/usr/lib/gcc/avr/4.3.4/../../../avr/include/util/delay.h ****    Redistribution and use in source and binary forms, with or without
   6:/usr/lib/gcc/avr/4.3.4/../../../avr/include/util/delay.h ****    modification, are permitted provided that the following conditions are met:
   7:/usr/lib/gcc/avr/4.3.4/../../../avr/include/util/delay.h **** 
   8:/usr/lib/gcc/avr/4.3.4/../../../avr/include/util/delay.h ****    * Redistributions of source code must retain the above copyright
   9:/usr/lib/gcc/avr/4.3.4/../../../avr/include/util/delay.h ****      notice, this list of conditions and the following disclaimer.
  10:/usr/lib/gcc/avr/4.3.4/../../../avr/include/util/delay.h **** 
  11:/usr/lib/gcc/avr/4.3.4/../../../avr/include/util/delay.h ****    * Redistributions in binary form must reproduce the above copyright
  12:/usr/lib/gcc/avr/4.3.4/../../../avr/include/util/delay.h ****      notice, this list of conditions and the following disclaimer in
  13:/usr/lib/gcc/avr/4.3.4/../../../avr/include/util/delay.h ****      the documentation and/or other materials provided with the
  14:/usr/lib/gcc/avr/4.3.4/../../../avr/include/util/delay.h ****      distribution.
  15:/usr/lib/gcc/avr/4.3.4/../../../avr/include/util/delay.h **** 
  16:/usr/lib/gcc/avr/4.3.4/../../../avr/include/util/delay.h ****    * Neither the name of the copyright holders nor the names of
  17:/usr/lib/gcc/avr/4.3.4/../../../avr/include/util/delay.h ****      contributors may be used to endorse or promote products derived
  18:/usr/lib/gcc/avr/4.3.4/../../../avr/include/util/delay.h ****      from this software without specific prior written permission.
  19:/usr/lib/gcc/avr/4.3.4/../../../avr/include/util/delay.h **** 
  20:/usr/lib/gcc/avr/4.3.4/../../../avr/include/util/delay.h ****   THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  21:/usr/lib/gcc/avr/4.3.4/../../../avr/include/util/delay.h ****   AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  22:/usr/lib/gcc/avr/4.3.4/../../../avr/include/util/delay.h ****   IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
  23:/usr/lib/gcc/avr/4.3.4/../../../avr/include/util/delay.h ****   ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE
  24:/usr/lib/gcc/avr/4.3.4/../../../avr/include/util/delay.h ****   LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
  25:/usr/lib/gcc/avr/4.3.4/../../../avr/include/util/delay.h ****   CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
  26:/usr/lib/gcc/avr/4.3.4/../../../avr/include/util/delay.h ****   SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
  27:/usr/lib/gcc/avr/4.3.4/../../../avr/include/util/delay.h ****   INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
  28:/usr/lib/gcc/avr/4.3.4/../../../avr/include/util/delay.h ****   CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
  29:/usr/lib/gcc/avr/4.3.4/../../../avr/include/util/delay.h ****   ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
  30:/usr/lib/gcc/avr/4.3.4/../../../avr/include/util/delay.h ****   POSSIBILITY OF SUCH DAMAGE. */
  31:/usr/lib/gcc/avr/4.3.4/../../../avr/include/util/delay.h **** 
  32:/usr/lib/gcc/avr/4.3.4/../../../avr/include/util/delay.h **** /* $Id: delay.h,v 1.5.2.1 2009/02/25 10:14:03 joerg_wunsch Exp $ */
  33:/usr/lib/gcc/avr/4.3.4/../../../avr/include/util/delay.h **** 
  34:/usr/lib/gcc/avr/4.3.4/../../../avr/include/util/delay.h **** #ifndef _UTIL_DELAY_H_
  35:/usr/lib/gcc/avr/4.3.4/../../../avr/include/util/delay.h **** #define _UTIL_DELAY_H_ 1
  36:/usr/lib/gcc/avr/4.3.4/../../../avr/include/util/delay.h **** 
  37:/usr/lib/gcc/avr/4.3.4/../../../avr/include/util/delay.h **** #include <inttypes.h>
  38:/usr/lib/gcc/avr/4.3.4/../../../avr/include/util/delay.h **** #include <util/delay_basic.h>
  39:/usr/lib/gcc/avr/4.3.4/../../../avr/include/util/delay.h **** 
  40:/usr/lib/gcc/avr/4.3.4/../../../avr/include/util/delay.h **** /** \file */
  41:/usr/lib/gcc/avr/4.3.4/../../../avr/include/util/delay.h **** /** \defgroup util_delay <util/delay.h>: Convenience functions for busy-wait delay loops
  42:/usr/lib/gcc/avr/4.3.4/../../../avr/include/util/delay.h ****     \code
  43:/usr/lib/gcc/avr/4.3.4/../../../avr/include/util/delay.h ****     #define F_CPU 1000000UL  // 1 MHz
  44:/usr/lib/gcc/avr/4.3.4/../../../avr/include/util/delay.h ****     //#define F_CPU 14.7456E6
  45:/usr/lib/gcc/avr/4.3.4/../../../avr/include/util/delay.h ****     #include <util/delay.h>
  46:/usr/lib/gcc/avr/4.3.4/../../../avr/include/util/delay.h ****     \endcode
  47:/usr/lib/gcc/avr/4.3.4/../../../avr/include/util/delay.h **** 
  48:/usr/lib/gcc/avr/4.3.4/../../../avr/include/util/delay.h ****     \note As an alternative method, it is possible to pass the
  49:/usr/lib/gcc/avr/4.3.4/../../../avr/include/util/delay.h ****     F_CPU macro down to the compiler from the Makefile.
  50:/usr/lib/gcc/avr/4.3.4/../../../avr/include/util/delay.h ****     Obviously, in that case, no \c \#define statement should be
  51:/usr/lib/gcc/avr/4.3.4/../../../avr/include/util/delay.h ****     used.
  52:/usr/lib/gcc/avr/4.3.4/../../../avr/include/util/delay.h **** 
  53:/usr/lib/gcc/avr/4.3.4/../../../avr/include/util/delay.h ****     The functions in this header file are wrappers around the basic
  54:/usr/lib/gcc/avr/4.3.4/../../../avr/include/util/delay.h ****     busy-wait functions from <util/delay_basic.h>.  They are meant as
  55:/usr/lib/gcc/avr/4.3.4/../../../avr/include/util/delay.h ****     convenience functions where actual time values can be specified
  56:/usr/lib/gcc/avr/4.3.4/../../../avr/include/util/delay.h ****     rather than a number of cycles to wait for.  The idea behind is
  57:/usr/lib/gcc/avr/4.3.4/../../../avr/include/util/delay.h ****     that compile-time constant expressions will be eliminated by
  58:/usr/lib/gcc/avr/4.3.4/../../../avr/include/util/delay.h ****     compiler optimization so floating-point expressions can be used
  59:/usr/lib/gcc/avr/4.3.4/../../../avr/include/util/delay.h ****     to calculate the number of delay cycles needed based on the CPU
  60:/usr/lib/gcc/avr/4.3.4/../../../avr/include/util/delay.h ****     frequency passed by the macro F_CPU.
  61:/usr/lib/gcc/avr/4.3.4/../../../avr/include/util/delay.h **** 
  62:/usr/lib/gcc/avr/4.3.4/../../../avr/include/util/delay.h ****     \note In order for these functions to work as intended, compiler
  63:/usr/lib/gcc/avr/4.3.4/../../../avr/include/util/delay.h ****     optimizations <em>must</em> be enabled, and the delay time
  64:/usr/lib/gcc/avr/4.3.4/../../../avr/include/util/delay.h ****     <em>must</em> be an expression that is a known constant at
  65:/usr/lib/gcc/avr/4.3.4/../../../avr/include/util/delay.h ****     compile-time.  If these requirements are not met, the resulting
  66:/usr/lib/gcc/avr/4.3.4/../../../avr/include/util/delay.h ****     delay will be much longer (and basically unpredictable), and
  67:/usr/lib/gcc/avr/4.3.4/../../../avr/include/util/delay.h ****     applications that otherwise do not use floating-point calculations
  68:/usr/lib/gcc/avr/4.3.4/../../../avr/include/util/delay.h ****     will experience severe code bloat by the floating-point library
  69:/usr/lib/gcc/avr/4.3.4/../../../avr/include/util/delay.h ****     routines linked into the application.
  70:/usr/lib/gcc/avr/4.3.4/../../../avr/include/util/delay.h **** 
  71:/usr/lib/gcc/avr/4.3.4/../../../avr/include/util/delay.h ****     The functions available allow the specification of microsecond, and
  72:/usr/lib/gcc/avr/4.3.4/../../../avr/include/util/delay.h ****     millisecond delays directly, using the application-supplied macro
  73:/usr/lib/gcc/avr/4.3.4/../../../avr/include/util/delay.h ****     F_CPU as the CPU clock frequency (in Hertz).
  74:/usr/lib/gcc/avr/4.3.4/../../../avr/include/util/delay.h **** 
  75:/usr/lib/gcc/avr/4.3.4/../../../avr/include/util/delay.h **** */
  76:/usr/lib/gcc/avr/4.3.4/../../../avr/include/util/delay.h **** 
  77:/usr/lib/gcc/avr/4.3.4/../../../avr/include/util/delay.h **** #if !defined(__DOXYGEN__)
  78:/usr/lib/gcc/avr/4.3.4/../../../avr/include/util/delay.h **** static inline void _delay_us(double __us) __attribute__((always_inline));
  79:/usr/lib/gcc/avr/4.3.4/../../../avr/include/util/delay.h **** static inline void _delay_ms(double __ms) __attribute__((always_inline));
  80:/usr/lib/gcc/avr/4.3.4/../../../avr/include/util/delay.h **** #endif
  81:/usr/lib/gcc/avr/4.3.4/../../../avr/include/util/delay.h **** 
  82:/usr/lib/gcc/avr/4.3.4/../../../avr/include/util/delay.h **** #ifndef F_CPU
  83:/usr/lib/gcc/avr/4.3.4/../../../avr/include/util/delay.h **** /* prevent compiler error by supplying a default */
  84:/usr/lib/gcc/avr/4.3.4/../../../avr/include/util/delay.h **** # warning "F_CPU not defined for <util/delay.h>"
  85:/usr/lib/gcc/avr/4.3.4/../../../avr/include/util/delay.h **** # define F_CPU 1000000UL
  86:/usr/lib/gcc/avr/4.3.4/../../../avr/include/util/delay.h **** #endif
  87:/usr/lib/gcc/avr/4.3.4/../../../avr/include/util/delay.h **** 
  88:/usr/lib/gcc/avr/4.3.4/../../../avr/include/util/delay.h **** #ifndef __OPTIMIZE__
  89:/usr/lib/gcc/avr/4.3.4/../../../avr/include/util/delay.h **** # warning "Compiler optimizations disabled; functions from <util/delay.h> won't work as designed"
  90:/usr/lib/gcc/avr/4.3.4/../../../avr/include/util/delay.h **** #endif
  91:/usr/lib/gcc/avr/4.3.4/../../../avr/include/util/delay.h **** 
  92:/usr/lib/gcc/avr/4.3.4/../../../avr/include/util/delay.h **** /**
  93:/usr/lib/gcc/avr/4.3.4/../../../avr/include/util/delay.h ****    \ingroup util_delay
  94:/usr/lib/gcc/avr/4.3.4/../../../avr/include/util/delay.h **** 
  95:/usr/lib/gcc/avr/4.3.4/../../../avr/include/util/delay.h ****    Perform a delay of \c __ms milliseconds, using _delay_loop_2().
  96:/usr/lib/gcc/avr/4.3.4/../../../avr/include/util/delay.h **** 
  97:/usr/lib/gcc/avr/4.3.4/../../../avr/include/util/delay.h ****    The macro F_CPU is supposed to be defined to a
  98:/usr/lib/gcc/avr/4.3.4/../../../avr/include/util/delay.h ****    constant defining the CPU clock frequency (in Hertz).
  99:/usr/lib/gcc/avr/4.3.4/../../../avr/include/util/delay.h **** 
 100:/usr/lib/gcc/avr/4.3.4/../../../avr/include/util/delay.h ****    The maximal possible delay is 262.14 ms / F_CPU in MHz.
 101:/usr/lib/gcc/avr/4.3.4/../../../avr/include/util/delay.h **** 
 102:/usr/lib/gcc/avr/4.3.4/../../../avr/include/util/delay.h ****    When the user request delay which exceed the maximum possible one,
 103:/usr/lib/gcc/avr/4.3.4/../../../avr/include/util/delay.h ****    _delay_ms() provides a decreased resolution functionality. In this
 104:/usr/lib/gcc/avr/4.3.4/../../../avr/include/util/delay.h ****    mode _delay_ms() will work with a resolution of 1/10 ms, providing
 105:/usr/lib/gcc/avr/4.3.4/../../../avr/include/util/delay.h ****    delays up to 6.5535 seconds (independent from CPU frequency).  The
 106:/usr/lib/gcc/avr/4.3.4/../../../avr/include/util/delay.h ****    user will not be informed about decreased resolution.
 107:/usr/lib/gcc/avr/4.3.4/../../../avr/include/util/delay.h ****  */
 108:/usr/lib/gcc/avr/4.3.4/../../../avr/include/util/delay.h **** void
 109:/usr/lib/gcc/avr/4.3.4/../../../avr/include/util/delay.h **** _delay_ms(double __ms)
 110:/usr/lib/gcc/avr/4.3.4/../../../avr/include/util/delay.h **** {
 111:/usr/lib/gcc/avr/4.3.4/../../../avr/include/util/delay.h **** 	uint16_t __ticks;
 112:/usr/lib/gcc/avr/4.3.4/../../../avr/include/util/delay.h **** 	double __tmp = ((F_CPU) / 4e3) * __ms;
 113:/usr/lib/gcc/avr/4.3.4/../../../avr/include/util/delay.h **** 	if (__tmp < 1.0)
 114:/usr/lib/gcc/avr/4.3.4/../../../avr/include/util/delay.h **** 		__ticks = 1;
 115:/usr/lib/gcc/avr/4.3.4/../../../avr/include/util/delay.h **** 	else if (__tmp > 65535)
 116:/usr/lib/gcc/avr/4.3.4/../../../avr/include/util/delay.h **** 	{
 117:/usr/lib/gcc/avr/4.3.4/../../../avr/include/util/delay.h **** 		//	__ticks = requested delay in 1/10 ms
 118:/usr/lib/gcc/avr/4.3.4/../../../avr/include/util/delay.h **** 		__ticks = (uint16_t) (__ms * 10.0);
 119:/usr/lib/gcc/avr/4.3.4/../../../avr/include/util/delay.h **** 		while(__ticks)
 120:/usr/lib/gcc/avr/4.3.4/../../../avr/include/util/delay.h **** 		{
 121:/usr/lib/gcc/avr/4.3.4/../../../avr/include/util/delay.h **** 			// wait 1/10 ms
 122:/usr/lib/gcc/avr/4.3.4/../../../avr/include/util/delay.h **** 			_delay_loop_2(((F_CPU) / 4e3) / 10);
 123:/usr/lib/gcc/avr/4.3.4/../../../avr/include/util/delay.h **** 			__ticks --;
 405               	.LM54:
 406 010e 0197      		sbiw r24,1
 120:/usr/lib/gcc/avr/4.3.4/../../../avr/include/util/delay.h **** 		while(__ticks)
 408               	.LM55:
 409 0110 01F4      		brne .L26
 410               	.LBE19:
 411               	.LBE18:
 413               	.Ltext3:
 183:../../../src/drivers/platform/micaZ/source/DOGM128-6_Graphicdisplay_driver.c ****   	_delay_ms(100);
 184:../../../src/drivers/platform/micaZ/source/DOGM128-6_Graphicdisplay_driver.c ****   	DisRESEThigh;
 415               	.LM56:
 416 0112 A99A      		sbi 53-32,1
 417 0114 88EE      		ldi r24,lo8(1000)
 418 0116 93E0      		ldi r25,hi8(1000)
 419               	.LBB22:
 420               	.LBB23:
 421               	.LBB24:
 422               	.LBB25:
 424               	.Ltext4:
 426               	.LM57:
 427 0118 28EB      		ldi r18,lo8(184)
 428 011a 30E0      		ldi r19,hi8(184)
 429               	.L27:
 430 011c F901      		movw r30,r18
 431               	/* #APP */
 432               	 ;  105 "/usr/lib/gcc/avr/4.3.4/../../../avr/include/util/delay_basic.h" 1
 433 011e 3197      		1: sbiw r30,1
 434 0120 01F4      		brne 1b
 435               	 ;  0 "" 2
 436               	/* #NOAPP */
 437               	.LBE25:
 438               	.LBE24:
 440               	.Ltext5:
 442               	.LM58:
 443 0122 0197      		sbiw r24,1
 120:/usr/lib/gcc/avr/4.3.4/../../../avr/include/util/delay.h **** 		while(__ticks)
 445               	.LM59:
 446 0124 01F4      		brne .L27
 447               	.LBE23:
 448               	.LBE22:
 450               	.Ltext6:
 185:../../../src/drivers/platform/micaZ/source/DOGM128-6_Graphicdisplay_driver.c ****   	_delay_ms(100);
 186:../../../src/drivers/platform/micaZ/source/DOGM128-6_Graphicdisplay_driver.c **** 
 187:../../../src/drivers/platform/micaZ/source/DOGM128-6_Graphicdisplay_driver.c ****   	DOGM128_6_usart1_sendByte (0x40);
 452               	.LM60:
 453 0126 80E4      		ldi r24,lo8(64)
 454 0128 0E94 0000 		call DOGM128_6_usart1_sendByte
 188:../../../src/drivers/platform/micaZ/source/DOGM128-6_Graphicdisplay_driver.c ****   	DOGM128_6_usart1_sendByte (0xA1);
 456               	.LM61:
 457 012c 81EA      		ldi r24,lo8(-95)
 458 012e 0E94 0000 		call DOGM128_6_usart1_sendByte
 189:../../../src/drivers/platform/micaZ/source/DOGM128-6_Graphicdisplay_driver.c ****   	DOGM128_6_usart1_sendByte (0xC0);
 460               	.LM62:
 461 0132 80EC      		ldi r24,lo8(-64)
 462 0134 0E94 0000 		call DOGM128_6_usart1_sendByte
 190:../../../src/drivers/platform/micaZ/source/DOGM128-6_Graphicdisplay_driver.c ****   	DOGM128_6_usart1_sendByte (0xA6);
 464               	.LM63:
 465 0138 86EA      		ldi r24,lo8(-90)
 466 013a 0E94 0000 		call DOGM128_6_usart1_sendByte
 191:../../../src/drivers/platform/micaZ/source/DOGM128-6_Graphicdisplay_driver.c ****   	DOGM128_6_usart1_sendByte (0xA2);
 468               	.LM64:
 469 013e 82EA      		ldi r24,lo8(-94)
 470 0140 0E94 0000 		call DOGM128_6_usart1_sendByte
 192:../../../src/drivers/platform/micaZ/source/DOGM128-6_Graphicdisplay_driver.c ****   	DOGM128_6_usart1_sendByte (0x2F);
 472               	.LM65:
 473 0144 8FE2      		ldi r24,lo8(47)
 474 0146 0E94 0000 		call DOGM128_6_usart1_sendByte
 193:../../../src/drivers/platform/micaZ/source/DOGM128-6_Graphicdisplay_driver.c **** 	DOGM128_6_usart1_sendByte (0xF8);
 476               	.LM66:
 477 014a 88EF      		ldi r24,lo8(-8)
 478 014c 0E94 0000 		call DOGM128_6_usart1_sendByte
 194:../../../src/drivers/platform/micaZ/source/DOGM128-6_Graphicdisplay_driver.c **** 	DOGM128_6_usart1_sendByte (0x00);
 480               	.LM67:
 481 0150 80E0      		ldi r24,lo8(0)
 482 0152 0E94 0000 		call DOGM128_6_usart1_sendByte
 195:../../../src/drivers/platform/micaZ/source/DOGM128-6_Graphicdisplay_driver.c **** 	DOGM128_6_usart1_sendByte (0x27);
 484               	.LM68:
 485 0156 87E2      		ldi r24,lo8(39)
 486 0158 0E94 0000 		call DOGM128_6_usart1_sendByte
 196:../../../src/drivers/platform/micaZ/source/DOGM128-6_Graphicdisplay_driver.c **** 	DOGM128_6_usart1_sendByte (0x81);							//Display contrast
 488               	.LM69:
 489 015c 81E8      		ldi r24,lo8(-127)
 490 015e 0E94 0000 		call DOGM128_6_usart1_sendByte
 197:../../../src/drivers/platform/micaZ/source/DOGM128-6_Graphicdisplay_driver.c **** 	DOGM128_6_usart1_sendByte (0x10);//was 16
 492               	.LM70:
 493 0162 80E1      		ldi r24,lo8(16)
 494 0164 0E94 0000 		call DOGM128_6_usart1_sendByte
 198:../../../src/drivers/platform/micaZ/source/DOGM128-6_Graphicdisplay_driver.c **** 	DOGM128_6_usart1_sendByte (0xAC);
 496               	.LM71:
 497 0168 8CEA      		ldi r24,lo8(-84)
 498 016a 0E94 0000 		call DOGM128_6_usart1_sendByte
 199:../../../src/drivers/platform/micaZ/source/DOGM128-6_Graphicdisplay_driver.c **** 	DOGM128_6_usart1_sendByte (0x00);
 500               	.LM72:
 501 016e 80E0      		ldi r24,lo8(0)
 502 0170 0E94 0000 		call DOGM128_6_usart1_sendByte
 200:../../../src/drivers/platform/micaZ/source/DOGM128-6_Graphicdisplay_driver.c **** 	DOGM128_6_usart1_sendByte (0xAF);
 504               	.LM73:
 505 0174 8FEA      		ldi r24,lo8(-81)
 506 0176 0E94 0000 		call DOGM128_6_usart1_sendByte
 201:../../../src/drivers/platform/micaZ/source/DOGM128-6_Graphicdisplay_driver.c **** 
 202:../../../src/drivers/platform/micaZ/source/DOGM128-6_Graphicdisplay_driver.c **** 	DOGM128_6_clear_display();
 508               	.LM74:
 509 017a 0E94 0000 		call DOGM128_6_clear_display
 510               	/* epilogue start */
 203:../../../src/drivers/platform/micaZ/source/DOGM128-6_Graphicdisplay_driver.c **** }
 512               	.LM75:
 513 017e 0895      		ret
 527               	.Lscope3:
 529               		.stabd	78,0,0
 532               	.global	DOGM128_6_display_backlight
 534               	DOGM128_6_display_backlight:
 535               		.stabd	46,0,0
 204:../../../src/drivers/platform/micaZ/source/DOGM128-6_Graphicdisplay_driver.c **** 
 205:../../../src/drivers/platform/micaZ/source/DOGM128-6_Graphicdisplay_driver.c **** 
 206:../../../src/drivers/platform/micaZ/source/DOGM128-6_Graphicdisplay_driver.c **** 
 207:../../../src/drivers/platform/micaZ/source/DOGM128-6_Graphicdisplay_driver.c **** void DOGM128_6_display_backlight(type_ON_OFF backlight)
 208:../../../src/drivers/platform/micaZ/source/DOGM128-6_Graphicdisplay_driver.c **** {
 537               	.LM76:
 538               	.LFBB4:
 539               	/* prologue: function */
 540               	/* frame size = 0 */
 209:../../../src/drivers/platform/micaZ/source/DOGM128-6_Graphicdisplay_driver.c **** 	if (backlight == ON) DisBLIGHTon;
 542               	.LM77:
 543 0180 8130      		cpi r24,lo8(1)
 544 0182 01F4      		brne .L32
 545 0184 C49A      		sbi 56-32,4
 546 0186 0895      		ret
 547               	.L32:
 210:../../../src/drivers/platform/micaZ/source/DOGM128-6_Graphicdisplay_driver.c **** 	else DisBLIGHToff;
 549               	.LM78:
 550 0188 C498      		cbi 56-32,4
 551 018a 0895      		ret
 553               	.Lscope4:
 555               		.stabd	78,0,0
 559               	.global	DOGM128_6_LCD_print
 561               	DOGM128_6_LCD_print:
 562               		.stabd	46,0,0
 211:../../../src/drivers/platform/micaZ/source/DOGM128-6_Graphicdisplay_driver.c **** }
 212:../../../src/drivers/platform/micaZ/source/DOGM128-6_Graphicdisplay_driver.c **** 
 213:../../../src/drivers/platform/micaZ/source/DOGM128-6_Graphicdisplay_driver.c **** 
 214:../../../src/drivers/platform/micaZ/source/DOGM128-6_Graphicdisplay_driver.c **** 
 215:../../../src/drivers/platform/micaZ/source/DOGM128-6_Graphicdisplay_driver.c **** void DOGM128_6_LCD_print(char text[], unsigned char x, unsigned char y)
 216:../../../src/drivers/platform/micaZ/source/DOGM128-6_Graphicdisplay_driver.c **** {
 564               	.LM79:
 565               	.LFBB5:
 566 018c FF92      		push r15
 567 018e 0F93      		push r16
 568 0190 1F93      		push r17
 569 0192 CF93      		push r28
 570 0194 DF93      		push r29
 571               	/* prologue: function */
 572               	/* frame size = 0 */
 573 0196 082F      		mov r16,r24
 574 0198 F92E      		mov r15,r25
 575 019a 162F      		mov r17,r22
 576 019c 842F      		mov r24,r20
 217:../../../src/drivers/platform/micaZ/source/DOGM128-6_Graphicdisplay_driver.c **** 	int charnumber = 0, pixelcolumn;
 218:../../../src/drivers/platform/micaZ/source/DOGM128-6_Graphicdisplay_driver.c **** 
 219:../../../src/drivers/platform/micaZ/source/DOGM128-6_Graphicdisplay_driver.c **** 	DisA0low;
 578               	.LM80:
 579 019e A898      		cbi 53-32,0
 220:../../../src/drivers/platform/micaZ/source/DOGM128-6_Graphicdisplay_driver.c **** 
 221:../../../src/drivers/platform/micaZ/source/DOGM128-6_Graphicdisplay_driver.c **** 	DOGM128_6_usart1_sendByte (0xB0 + y);					//Set Page Address
 581               	.LM81:
 582 01a0 8055      		subi r24,lo8(-(-80))
 583 01a2 0E94 0000 		call DOGM128_6_usart1_sendByte
 222:../../../src/drivers/platform/micaZ/source/DOGM128-6_Graphicdisplay_driver.c **** 	DOGM128_6_usart1_sendByte (0x10 | (x >> 4));		//Set Column Address upper nibble to 0
 585               	.LM82:
 586 01a6 812F      		mov r24,r17
 587 01a8 8295      		swap r24
 588 01aa 8F70      		andi r24,0x0f
 589 01ac 8061      		ori r24,lo8(16)
 590 01ae 0E94 0000 		call DOGM128_6_usart1_sendByte
 223:../../../src/drivers/platform/micaZ/source/DOGM128-6_Graphicdisplay_driver.c **** 	DOGM128_6_usart1_sendByte (x & 0x0F);					//Set Column Address lower nibble to 0
 592               	.LM83:
 593 01b2 812F      		mov r24,r17
 594 01b4 8F70      		andi r24,lo8(15)
 595 01b6 0E94 0000 		call DOGM128_6_usart1_sendByte
 224:../../../src/drivers/platform/micaZ/source/DOGM128-6_Graphicdisplay_driver.c **** 
 225:../../../src/drivers/platform/micaZ/source/DOGM128-6_Graphicdisplay_driver.c **** 	DisA0high;
 597               	.LM84:
 598 01ba A89A      		sbi 53-32,0
 599 01bc 202F      		mov r18,r16
 600 01be 3F2D      		mov r19,r15
 601 01c0 C901      		movw r24,r18
 602 01c2 EC01      		movw r28,r24
 603               	.LBB26:
 226:../../../src/drivers/platform/micaZ/source/DOGM128-6_Graphicdisplay_driver.c **** 
 227:../../../src/drivers/platform/micaZ/source/DOGM128-6_Graphicdisplay_driver.c ****   	while (text[charnumber])
 228:../../../src/drivers/platform/micaZ/source/DOGM128-6_Graphicdisplay_driver.c ****   	{
 229:../../../src/drivers/platform/micaZ/source/DOGM128-6_Graphicdisplay_driver.c ****     	for (pixelcolumn = 0; pixelcolumn < 5 ; pixelcolumn++)
 230:../../../src/drivers/platform/micaZ/source/DOGM128-6_Graphicdisplay_driver.c **** 	  	{
 231:../../../src/drivers/platform/micaZ/source/DOGM128-6_Graphicdisplay_driver.c ****       		DOGM128_6_usart1_sendByte ( pgm_read_byte(&(font5x7 [(unsigned char)text[charnumber]] [pixe
 605               	.LM85:
 606 01c4 85E0      		ldi r24,lo8(5)
 607 01c6 F82E      		mov r15,r24
 608 01c8 00C0      		rjmp .L36
 609               	.L38:
 610               	.LBE26:
 228:../../../src/drivers/platform/micaZ/source/DOGM128-6_Graphicdisplay_driver.c ****   	while (text[charnumber])
 612               	.LM86:
 613 01ca 00E0      		ldi r16,lo8(0)
 614 01cc 10E0      		ldi r17,hi8(0)
 615               	.L37:
 616               	.LBB27:
 618               	.LM87:
 619 01ce E881      		ld r30,Y
 620 01d0 EF9D      		mul r30,r15
 621 01d2 F001      		movw r30,r0
 622 01d4 1124      		clr r1
 623 01d6 E00F      		add r30,r16
 624 01d8 F11F      		adc r31,r17
 625 01da E050      		subi r30,lo8(-(font5x7))
 626 01dc F040      		sbci r31,hi8(-(font5x7))
 627               	/* #APP */
 628               	 ;  232 "../../../src/drivers/platform/micaZ/source/DOGM128-6_Graphicdisplay_driver.c" 1
 629 01de E491      		lpm r30, Z
 630               		
 631               	 ;  0 "" 2
 632               	/* #NOAPP */
 633               	.LBE27:
 634 01e0 8E2F      		mov r24,r30
 635 01e2 0E94 0000 		call DOGM128_6_usart1_sendByte
 230:../../../src/drivers/platform/micaZ/source/DOGM128-6_Graphicdisplay_driver.c ****     	for (pixelcolumn = 0; pixelcolumn < 5 ; pixelcolumn++)
 637               	.LM88:
 638 01e6 0F5F      		subi r16,lo8(-(1))
 639 01e8 1F4F      		sbci r17,hi8(-(1))
 640 01ea 0530      		cpi r16,5
 641 01ec 1105      		cpc r17,__zero_reg__
 642 01ee 01F4      		brne .L37
 232:../../../src/drivers/platform/micaZ/source/DOGM128-6_Graphicdisplay_driver.c **** 	  	}
 233:../../../src/drivers/platform/micaZ/source/DOGM128-6_Graphicdisplay_driver.c ****     	DOGM128_6_usart1_sendByte (0x00);														//Write white space pixels between chars to the
 644               	.LM89:
 645 01f0 80E0      		ldi r24,lo8(0)
 646 01f2 0E94 0000 		call DOGM128_6_usart1_sendByte
 647 01f6 2196      		adiw r28,1
 648               	.L36:
 228:../../../src/drivers/platform/micaZ/source/DOGM128-6_Graphicdisplay_driver.c ****   	while (text[charnumber])
 650               	.LM90:
 651 01f8 8881      		ld r24,Y
 652 01fa 8823      		tst r24
 653 01fc 01F4      		brne .L38
 654               	/* epilogue start */
 234:../../../src/drivers/platform/micaZ/source/DOGM128-6_Graphicdisplay_driver.c **** 		charnumber++;
 235:../../../src/drivers/platform/micaZ/source/DOGM128-6_Graphicdisplay_driver.c ****   	}
 236:../../../src/drivers/platform/micaZ/source/DOGM128-6_Graphicdisplay_driver.c **** }
 656               	.LM91:
 657 01fe DF91      		pop r29
 658 0200 CF91      		pop r28
 659 0202 1F91      		pop r17
 660 0204 0F91      		pop r16
 661 0206 FF90      		pop r15
 662 0208 0895      		ret
 673               	.Lscope5:
 675               		.stabd	78,0,0
 676               	.global	font5x7
 677               		.section	.progmem.data,"a",@progbits
 680               	font5x7:
 681 0000 08        		.byte	8
 682 0001 08        		.byte	8
 683 0002 2A        		.byte	42
 684 0003 1C        		.byte	28
 685 0004 08        		.byte	8
 686 0005 08        		.byte	8
 687 0006 1C        		.byte	28
 688 0007 2A        		.byte	42
 689 0008 08        		.byte	8
 690 0009 08        		.byte	8
 691 000a 40        		.byte	64
 692 000b 44        		.byte	68
 693 000c 4A        		.byte	74
 694 000d 51        		.byte	81
 695 000e 40        		.byte	64
 696 000f 40        		.byte	64
 697 0010 51        		.byte	81
 698 0011 4A        		.byte	74
 699 0012 44        		.byte	68
 700 0013 40        		.byte	64
 701 0014 14        		.byte	20
 702 0015 74        		.byte	116
 703 0016 1C        		.byte	28
 704 0017 17        		.byte	23
 705 0018 14        		.byte	20
 706 0019 10        		.byte	16
 707 001a 20        		.byte	32
 708 001b 7F        		.byte	127
 709 001c 01        		.byte	1
 710 001d 01        		.byte	1
 711 001e 00        		.byte	0
 712 001f 00        		.byte	0
 713 0020 00        		.byte	0
 714 0021 00        		.byte	0
 715 0022 00        		.byte	0
 716 0023 00        		.byte	0
 717 0024 00        		.byte	0
 718 0025 00        		.byte	0
 719 0026 00        		.byte	0
 720 0027 00        		.byte	0
 721 0028 08        		.byte	8
 722 0029 1C        		.byte	28
 723 002a 2C        		.byte	44
 724 002b 08        		.byte	8
 725 002c 08        		.byte	8
 726 002d 7F        		.byte	127
 727 002e 01        		.byte	1
 728 002f 01        		.byte	1
 729 0030 01        		.byte	1
 730 0031 01        		.byte	1
 731 0032 01        		.byte	1
 732 0033 01        		.byte	1
 733 0034 01        		.byte	1
 734 0035 01        		.byte	1
 735 0036 7F        		.byte	127
 736 0037 7F        		.byte	127
 737 0038 40        		.byte	64
 738 0039 40        		.byte	64
 739 003a 40        		.byte	64
 740 003b 40        		.byte	64
 741 003c 40        		.byte	64
 742 003d 40        		.byte	64
 743 003e 40        		.byte	64
 744 003f 40        		.byte	64
 745 0040 7F        		.byte	127
 746 0041 00        		.byte	0
 747 0042 00        		.byte	0
 748 0043 00        		.byte	0
 749 0044 00        		.byte	0
 750 0045 00        		.byte	0
 751 0046 00        		.byte	0
 752 0047 00        		.byte	0
 753 0048 00        		.byte	0
 754 0049 00        		.byte	0
 755 004a 00        		.byte	0
 756 004b 00        		.byte	0
 757 004c 00        		.byte	0
 758 004d 00        		.byte	0
 759 004e 00        		.byte	0
 760 004f 00        		.byte	0
 761 0050 79        		.byte	121
 762 0051 11        		.byte	17
 763 0052 27        		.byte	39
 764 0053 11        		.byte	17
 765 0054 79        		.byte	121
 766 0055 00        		.byte	0
 767 0056 00        		.byte	0
 768 0057 00        		.byte	0
 769 0058 00        		.byte	0
 770 0059 00        		.byte	0
 771 005a 00        		.byte	0
 772 005b 00        		.byte	0
 773 005c 00        		.byte	0
 774 005d 00        		.byte	0
 775 005e 00        		.byte	0
 776 005f 00        		.byte	0
 777 0060 00        		.byte	0
 778 0061 00        		.byte	0
 779 0062 00        		.byte	0
 780 0063 00        		.byte	0
 781 0064 7F        		.byte	127
 782 0065 01        		.byte	1
 783 0066 01        		.byte	1
 784 0067 01        		.byte	1
 785 0068 03        		.byte	3
 786 0069 60        		.byte	96
 787 006a 50        		.byte	80
 788 006b 48        		.byte	72
 789 006c 44        		.byte	68
 790 006d 7E        		.byte	126
 791 006e 3E        		.byte	62
 792 006f 49        		.byte	73
 793 0070 49        		.byte	73
 794 0071 49        		.byte	73
 795 0072 3E        		.byte	62
 796 0073 70        		.byte	112
 797 0074 0C        		.byte	12
 798 0075 03        		.byte	3
 799 0076 0C        		.byte	12
 800 0077 70        		.byte	112
 801 0078 63        		.byte	99
 802 0079 49        		.byte	73
 803 007a 49        		.byte	73
 804 007b 49        		.byte	73
 805 007c 63        		.byte	99
 806 007d 01        		.byte	1
 807 007e 7F        		.byte	127
 808 007f 01        		.byte	1
 809 0080 7F        		.byte	127
 810 0081 01        		.byte	1
 811 0082 63        		.byte	99
 812 0083 55        		.byte	85
 813 0084 49        		.byte	73
 814 0085 41        		.byte	65
 815 0086 41        		.byte	65
 816 0087 06        		.byte	6
 817 0088 01        		.byte	1
 818 0089 7E        		.byte	126
 819 008a 01        		.byte	1
 820 008b 06        		.byte	6
 821 008c 08        		.byte	8
 822 008d 55        		.byte	85
 823 008e 7F        		.byte	127
 824 008f 55        		.byte	85
 825 0090 08        		.byte	8
 826 0091 0F        		.byte	15
 827 0092 10        		.byte	16
 828 0093 7F        		.byte	127
 829 0094 10        		.byte	16
 830 0095 0F        		.byte	15
 831 0096 4E        		.byte	78
 832 0097 71        		.byte	113
 833 0098 01        		.byte	1
 834 0099 71        		.byte	113
 835 009a 4E        		.byte	78
 836 009b 38        		.byte	56
 837 009c 44        		.byte	68
 838 009d 44        		.byte	68
 839 009e 38        		.byte	56
 840 009f 44        		.byte	68
 841 00a0 00        		.byte	0
 842 00a1 00        		.byte	0
 843 00a2 00        		.byte	0
 844 00a3 00        		.byte	0
 845 00a4 00        		.byte	0
 846 00a5 00        		.byte	0
 847 00a6 00        		.byte	0
 848 00a7 5F        		.byte	95
 849 00a8 00        		.byte	0
 850 00a9 00        		.byte	0
 851 00aa 03        		.byte	3
 852 00ab 00        		.byte	0
 853 00ac 03        		.byte	3
 854 00ad 00        		.byte	0
 855 00ae 00        		.byte	0
 856 00af 14        		.byte	20
 857 00b0 3E        		.byte	62
 858 00b1 14        		.byte	20
 859 00b2 3E        		.byte	62
 860 00b3 14        		.byte	20
 861 00b4 26        		.byte	38
 862 00b5 49        		.byte	73
 863 00b6 7F        		.byte	127
 864 00b7 49        		.byte	73
 865 00b8 32        		.byte	50
 866 00b9 62        		.byte	98
 867 00ba 15        		.byte	21
 868 00bb 2A        		.byte	42
 869 00bc 54        		.byte	84
 870 00bd 23        		.byte	35
 871 00be 36        		.byte	54
 872 00bf 49        		.byte	73
 873 00c0 56        		.byte	86
 874 00c1 20        		.byte	32
 875 00c2 50        		.byte	80
 876 00c3 00        		.byte	0
 877 00c4 03        		.byte	3
 878 00c5 00        		.byte	0
 879 00c6 00        		.byte	0
 880 00c7 00        		.byte	0
 881 00c8 00        		.byte	0
 882 00c9 1C        		.byte	28
 883 00ca 22        		.byte	34
 884 00cb 41        		.byte	65
 885 00cc 00        		.byte	0
 886 00cd 00        		.byte	0
 887 00ce 41        		.byte	65
 888 00cf 22        		.byte	34
 889 00d0 1C        		.byte	28
 890 00d1 00        		.byte	0
 891 00d2 00        		.byte	0
 892 00d3 14        		.byte	20
 893 00d4 0E        		.byte	14
 894 00d5 14        		.byte	20
 895 00d6 00        		.byte	0
 896 00d7 08        		.byte	8
 897 00d8 08        		.byte	8
 898 00d9 3E        		.byte	62
 899 00da 08        		.byte	8
 900 00db 08        		.byte	8
 901 00dc 00        		.byte	0
 902 00dd 60        		.byte	96
 903 00de 00        		.byte	0
 904 00df 00        		.byte	0
 905 00e0 00        		.byte	0
 906 00e1 08        		.byte	8
 907 00e2 08        		.byte	8
 908 00e3 08        		.byte	8
 909 00e4 08        		.byte	8
 910 00e5 00        		.byte	0
 911 00e6 00        		.byte	0
 912 00e7 40        		.byte	64
 913 00e8 00        		.byte	0
 914 00e9 00        		.byte	0
 915 00ea 00        		.byte	0
 916 00eb 60        		.byte	96
 917 00ec 10        		.byte	16
 918 00ed 08        		.byte	8
 919 00ee 04        		.byte	4
 920 00ef 03        		.byte	3
 921 00f0 3E        		.byte	62
 922 00f1 41        		.byte	65
 923 00f2 41        		.byte	65
 924 00f3 41        		.byte	65
 925 00f4 3E        		.byte	62
 926 00f5 04        		.byte	4
 927 00f6 02        		.byte	2
 928 00f7 7F        		.byte	127
 929 00f8 00        		.byte	0
 930 00f9 00        		.byte	0
 931 00fa 62        		.byte	98
 932 00fb 51        		.byte	81
 933 00fc 49        		.byte	73
 934 00fd 45        		.byte	69
 935 00fe 42        		.byte	66
 936 00ff 22        		.byte	34
 937 0100 41        		.byte	65
 938 0101 49        		.byte	73
 939 0102 49        		.byte	73
 940 0103 36        		.byte	54
 941 0104 0C        		.byte	12
 942 0105 0B        		.byte	11
 943 0106 08        		.byte	8
 944 0107 7E        		.byte	126
 945 0108 08        		.byte	8
 946 0109 4F        		.byte	79
 947 010a 49        		.byte	73
 948 010b 49        		.byte	73
 949 010c 49        		.byte	73
 950 010d 31        		.byte	49
 951 010e 3E        		.byte	62
 952 010f 49        		.byte	73
 953 0110 49        		.byte	73
 954 0111 49        		.byte	73
 955 0112 32        		.byte	50
 956 0113 61        		.byte	97
 957 0114 11        		.byte	17
 958 0115 09        		.byte	9
 959 0116 05        		.byte	5
 960 0117 03        		.byte	3
 961 0118 36        		.byte	54
 962 0119 49        		.byte	73
 963 011a 49        		.byte	73
 964 011b 49        		.byte	73
 965 011c 36        		.byte	54
 966 011d 26        		.byte	38
 967 011e 49        		.byte	73
 968 011f 49        		.byte	73
 969 0120 49        		.byte	73
 970 0121 3E        		.byte	62
 971 0122 00        		.byte	0
 972 0123 22        		.byte	34
 973 0124 00        		.byte	0
 974 0125 00        		.byte	0
 975 0126 00        		.byte	0
 976 0127 00        		.byte	0
 977 0128 61        		.byte	97
 978 0129 00        		.byte	0
 979 012a 00        		.byte	0
 980 012b 00        		.byte	0
 981 012c 08        		.byte	8
 982 012d 14        		.byte	20
 983 012e 14        		.byte	20
 984 012f 22        		.byte	34
 985 0130 22        		.byte	34
 986 0131 14        		.byte	20
 987 0132 14        		.byte	20
 988 0133 14        		.byte	20
 989 0134 14        		.byte	20
 990 0135 14        		.byte	20
 991 0136 22        		.byte	34
 992 0137 22        		.byte	34
 993 0138 14        		.byte	20
 994 0139 14        		.byte	20
 995 013a 08        		.byte	8
 996 013b 06        		.byte	6
 997 013c 01        		.byte	1
 998 013d 59        		.byte	89
 999 013e 05        		.byte	5
 1000 013f 02        		.byte	2
 1001 0140 3E        		.byte	62
 1002 0141 41        		.byte	65
 1003 0142 5D        		.byte	93
 1004 0143 55        		.byte	85
 1005 0144 5E        		.byte	94
 1006 0145 7E        		.byte	126
 1007 0146 09        		.byte	9
 1008 0147 09        		.byte	9
 1009 0148 09        		.byte	9
 1010 0149 7E        		.byte	126
 1011 014a 7F        		.byte	127
 1012 014b 49        		.byte	73
 1013 014c 49        		.byte	73
 1014 014d 49        		.byte	73
 1015 014e 36        		.byte	54
 1016 014f 3E        		.byte	62
 1017 0150 41        		.byte	65
 1018 0151 41        		.byte	65
 1019 0152 41        		.byte	65
 1020 0153 22        		.byte	34
 1021 0154 7F        		.byte	127
 1022 0155 41        		.byte	65
 1023 0156 41        		.byte	65
 1024 0157 41        		.byte	65
 1025 0158 3E        		.byte	62
 1026 0159 7F        		.byte	127
 1027 015a 49        		.byte	73
 1028 015b 49        		.byte	73
 1029 015c 49        		.byte	73
 1030 015d 41        		.byte	65
 1031 015e 7F        		.byte	127
 1032 015f 09        		.byte	9
 1033 0160 09        		.byte	9
 1034 0161 09        		.byte	9
 1035 0162 01        		.byte	1
 1036 0163 3E        		.byte	62
 1037 0164 41        		.byte	65
 1038 0165 49        		.byte	73
 1039 0166 49        		.byte	73
 1040 0167 32        		.byte	50
 1041 0168 7F        		.byte	127
 1042 0169 08        		.byte	8
 1043 016a 08        		.byte	8
 1044 016b 08        		.byte	8
 1045 016c 7F        		.byte	127
 1046 016d 00        		.byte	0
 1047 016e 00        		.byte	0
 1048 016f 7F        		.byte	127
 1049 0170 00        		.byte	0
 1050 0171 00        		.byte	0
 1051 0172 20        		.byte	32
 1052 0173 40        		.byte	64
 1053 0174 40        		.byte	64
 1054 0175 40        		.byte	64
 1055 0176 3F        		.byte	63
 1056 0177 7F        		.byte	127
 1057 0178 08        		.byte	8
 1058 0179 14        		.byte	20
 1059 017a 22        		.byte	34
 1060 017b 41        		.byte	65
 1061 017c 7F        		.byte	127
 1062 017d 40        		.byte	64
 1063 017e 40        		.byte	64
 1064 017f 40        		.byte	64
 1065 0180 00        		.byte	0
 1066 0181 7F        		.byte	127
 1067 0182 02        		.byte	2
 1068 0183 04        		.byte	4
 1069 0184 02        		.byte	2
 1070 0185 7F        		.byte	127
 1071 0186 7F        		.byte	127
 1072 0187 02        		.byte	2
 1073 0188 1C        		.byte	28
 1074 0189 20        		.byte	32
 1075 018a 7F        		.byte	127
 1076 018b 3E        		.byte	62
 1077 018c 41        		.byte	65
 1078 018d 41        		.byte	65
 1079 018e 41        		.byte	65
 1080 018f 3E        		.byte	62
 1081 0190 7F        		.byte	127
 1082 0191 09        		.byte	9
 1083 0192 09        		.byte	9
 1084 0193 09        		.byte	9
 1085 0194 06        		.byte	6
 1086 0195 3E        		.byte	62
 1087 0196 41        		.byte	65
 1088 0197 51        		.byte	81
 1089 0198 61        		.byte	97
 1090 0199 7E        		.byte	126
 1091 019a 7F        		.byte	127
 1092 019b 09        		.byte	9
 1093 019c 19        		.byte	25
 1094 019d 29        		.byte	41
 1095 019e 46        		.byte	70
 1096 019f 26        		.byte	38
 1097 01a0 49        		.byte	73
 1098 01a1 49        		.byte	73
 1099 01a2 49        		.byte	73
 1100 01a3 32        		.byte	50
 1101 01a4 01        		.byte	1
 1102 01a5 01        		.byte	1
 1103 01a6 7F        		.byte	127
 1104 01a7 01        		.byte	1
 1105 01a8 01        		.byte	1
 1106 01a9 3F        		.byte	63
 1107 01aa 40        		.byte	64
 1108 01ab 40        		.byte	64
 1109 01ac 40        		.byte	64
 1110 01ad 3F        		.byte	63
 1111 01ae 1F        		.byte	31
 1112 01af 20        		.byte	32
 1113 01b0 40        		.byte	64
 1114 01b1 20        		.byte	32
 1115 01b2 1F        		.byte	31
 1116 01b3 3F        		.byte	63
 1117 01b4 40        		.byte	64
 1118 01b5 30        		.byte	48
 1119 01b6 40        		.byte	64
 1120 01b7 3F        		.byte	63
 1121 01b8 63        		.byte	99
 1122 01b9 14        		.byte	20
 1123 01ba 08        		.byte	8
 1124 01bb 14        		.byte	20
 1125 01bc 63        		.byte	99
 1126 01bd 03        		.byte	3
 1127 01be 04        		.byte	4
 1128 01bf 78        		.byte	120
 1129 01c0 04        		.byte	4
 1130 01c1 03        		.byte	3
 1131 01c2 61        		.byte	97
 1132 01c3 51        		.byte	81
 1133 01c4 49        		.byte	73
 1134 01c5 45        		.byte	69
 1135 01c6 43        		.byte	67
 1136 01c7 7F        		.byte	127
 1137 01c8 41        		.byte	65
 1138 01c9 00        		.byte	0
 1139 01ca 00        		.byte	0
 1140 01cb 00        		.byte	0
 1141 01cc 00        		.byte	0
 1142 01cd 00        		.byte	0
 1143 01ce 00        		.byte	0
 1144 01cf 00        		.byte	0
 1145 01d0 00        		.byte	0
 1146 01d1 00        		.byte	0
 1147 01d2 00        		.byte	0
 1148 01d3 00        		.byte	0
 1149 01d4 41        		.byte	65
 1150 01d5 7F        		.byte	127
 1151 01d6 06        		.byte	6
 1152 01d7 01        		.byte	1
 1153 01d8 06        		.byte	6
 1154 01d9 00        		.byte	0
 1155 01da 00        		.byte	0
 1156 01db 40        		.byte	64
 1157 01dc 40        		.byte	64
 1158 01dd 40        		.byte	64
 1159 01de 40        		.byte	64
 1160 01df 40        		.byte	64
 1161 01e0 01        		.byte	1
 1162 01e1 02        		.byte	2
 1163 01e2 00        		.byte	0
 1164 01e3 00        		.byte	0
 1165 01e4 00        		.byte	0
 1166 01e5 20        		.byte	32
 1167 01e6 54        		.byte	84
 1168 01e7 54        		.byte	84
 1169 01e8 54        		.byte	84
 1170 01e9 78        		.byte	120
 1171 01ea 7F        		.byte	127
 1172 01eb 48        		.byte	72
 1173 01ec 48        		.byte	72
 1174 01ed 48        		.byte	72
 1175 01ee 30        		.byte	48
 1176 01ef 38        		.byte	56
 1177 01f0 44        		.byte	68
 1178 01f1 44        		.byte	68
 1179 01f2 44        		.byte	68
 1180 01f3 28        		.byte	40
 1181 01f4 38        		.byte	56
 1182 01f5 44        		.byte	68
 1183 01f6 44        		.byte	68
 1184 01f7 44        		.byte	68
 1185 01f8 7F        		.byte	127
 1186 01f9 38        		.byte	56
 1187 01fa 54        		.byte	84
 1188 01fb 54        		.byte	84
 1189 01fc 54        		.byte	84
 1190 01fd 18        		.byte	24
 1191 01fe 08        		.byte	8
 1192 01ff 7E        		.byte	126
 1193 0200 09        		.byte	9
 1194 0201 09        		.byte	9
 1195 0202 01        		.byte	1
 1196 0203 0C        		.byte	12
 1197 0204 52        		.byte	82
 1198 0205 52        		.byte	82
 1199 0206 52        		.byte	82
 1200 0207 3E        		.byte	62
 1201 0208 7F        		.byte	127
 1202 0209 04        		.byte	4
 1203 020a 04        		.byte	4
 1204 020b 04        		.byte	4
 1205 020c 78        		.byte	120
 1206 020d 04        		.byte	4
 1207 020e 7D        		.byte	125
 1208 020f 40        		.byte	64
 1209 0210 40        		.byte	64
 1210 0211 20        		.byte	32
 1211 0212 20        		.byte	32
 1212 0213 40        		.byte	64
 1213 0214 40        		.byte	64
 1214 0215 44        		.byte	68
 1215 0216 3D        		.byte	61
 1216 0217 00        		.byte	0
 1217 0218 7F        		.byte	127
 1218 0219 10        		.byte	16
 1219 021a 28        		.byte	40
 1220 021b 44        		.byte	68
 1221 021c 20        		.byte	32
 1222 021d 3E        		.byte	62
 1223 021e 51        		.byte	81
 1224 021f 49        		.byte	73
 1225 0220 46        		.byte	70
 1226 0221 7C        		.byte	124
 1227 0222 04        		.byte	4
 1228 0223 7C        		.byte	124
 1229 0224 04        		.byte	4
 1230 0225 78        		.byte	120
 1231 0226 7C        		.byte	124
 1232 0227 08        		.byte	8
 1233 0228 04        		.byte	4
 1234 0229 04        		.byte	4
 1235 022a 78        		.byte	120
 1236 022b 38        		.byte	56
 1237 022c 44        		.byte	68
 1238 022d 44        		.byte	68
 1239 022e 44        		.byte	68
 1240 022f 38        		.byte	56
 1241 0230 7E        		.byte	126
 1242 0231 12        		.byte	18
 1243 0232 12        		.byte	18
 1244 0233 12        		.byte	18
 1245 0234 0C        		.byte	12
 1246 0235 0C        		.byte	12
 1247 0236 12        		.byte	18
 1248 0237 12        		.byte	18
 1249 0238 12        		.byte	18
 1250 0239 7E        		.byte	126
 1251 023a 04        		.byte	4
 1252 023b 78        		.byte	120
 1253 023c 04        		.byte	4
 1254 023d 04        		.byte	4
 1255 023e 08        		.byte	8
 1256 023f 48        		.byte	72
 1257 0240 54        		.byte	84
 1258 0241 54        		.byte	84
 1259 0242 54        		.byte	84
 1260 0243 24        		.byte	36
 1261 0244 04        		.byte	4
 1262 0245 3F        		.byte	63
 1263 0246 44        		.byte	68
 1264 0247 44        		.byte	68
 1265 0248 40        		.byte	64
 1266 0249 3C        		.byte	60
 1267 024a 40        		.byte	64
 1268 024b 40        		.byte	64
 1269 024c 3C        		.byte	60
 1270 024d 40        		.byte	64
 1271 024e 1C        		.byte	28
 1272 024f 20        		.byte	32
 1273 0250 40        		.byte	64
 1274 0251 20        		.byte	32
 1275 0252 1C        		.byte	28
 1276 0253 3C        		.byte	60
 1277 0254 40        		.byte	64
 1278 0255 30        		.byte	48
 1279 0256 40        		.byte	64
 1280 0257 3C        		.byte	60
 1281 0258 44        		.byte	68
 1282 0259 28        		.byte	40
 1283 025a 10        		.byte	16
 1284 025b 28        		.byte	40
 1285 025c 44        		.byte	68
 1286 025d 26        		.byte	38
 1287 025e 48        		.byte	72
 1288 025f 48        		.byte	72
 1289 0260 48        		.byte	72
 1290 0261 3E        		.byte	62
 1291 0262 44        		.byte	68
 1292 0263 64        		.byte	100
 1293 0264 54        		.byte	84
 1294 0265 4C        		.byte	76
 1295 0266 44        		.byte	68
 1296 0267 00        		.byte	0
 1297 0268 08        		.byte	8
 1298 0269 3E        		.byte	62
 1299 026a 41        		.byte	65
 1300 026b 00        		.byte	0
 1301 026c 00        		.byte	0
 1302 026d 00        		.byte	0
 1303 026e 7F        		.byte	127
 1304 026f 00        		.byte	0
 1305 0270 00        		.byte	0
 1306 0271 00        		.byte	0
 1307 0272 41        		.byte	65
 1308 0273 3E        		.byte	62
 1309 0274 08        		.byte	8
 1310 0275 00        		.byte	0
 1311 0276 00        		.byte	0
 1312 0277 00        		.byte	0
 1313 0278 00        		.byte	0
 1314 0279 00        		.byte	0
 1315 027a 00        		.byte	0
 1316 027b 00        		.byte	0
 1317 027c 00        		.byte	0
 1318 027d 00        		.byte	0
 1319 027e 00        		.byte	0
 1320 027f 00        		.byte	0
 1321 0280 00        		.byte	0
 1322 0281 00        		.byte	0
 1323 0282 00        		.byte	0
 1324 0283 00        		.byte	0
 1325 0284 00        		.byte	0
 1326 0285 00        		.byte	0
 1327 0286 00        		.byte	0
 1328 0287 00        		.byte	0
 1329 0288 00        		.byte	0
 1330 0289 00        		.byte	0
 1331 028a 00        		.byte	0
 1332 028b 00        		.byte	0
 1333 028c 00        		.byte	0
 1334 028d 00        		.byte	0
 1335 028e 00        		.byte	0
 1336 028f 20        		.byte	32
 1337 0290 48        		.byte	72
 1338 0291 3E        		.byte	62
 1339 0292 09        		.byte	9
 1340 0293 02        		.byte	2
 1341 0294 00        		.byte	0
 1342 0295 00        		.byte	0
 1343 0296 00        		.byte	0
 1344 0297 00        		.byte	0
 1345 0298 00        		.byte	0
 1346 0299 00        		.byte	0
 1347 029a 00        		.byte	0
 1348 029b 00        		.byte	0
 1349 029c 00        		.byte	0
 1350 029d 00        		.byte	0
 1351 029e 04        		.byte	4
 1352 029f 04        		.byte	4
 1353 02a0 7F        		.byte	127
 1354 02a1 04        		.byte	4
 1355 02a2 04        		.byte	4
 1356 02a3 00        		.byte	0
 1357 02a4 00        		.byte	0
 1358 02a5 00        		.byte	0
 1359 02a6 00        		.byte	0
 1360 02a7 00        		.byte	0
 1361 02a8 00        		.byte	0
 1362 02a9 00        		.byte	0
 1363 02aa 00        		.byte	0
 1364 02ab 00        		.byte	0
 1365 02ac 00        		.byte	0
 1366 02ad 00        		.byte	0
 1367 02ae 00        		.byte	0
 1368 02af 00        		.byte	0
 1369 02b0 00        		.byte	0
 1370 02b1 00        		.byte	0
 1371 02b2 00        		.byte	0
 1372 02b3 00        		.byte	0
 1373 02b4 00        		.byte	0
 1374 02b5 00        		.byte	0
 1375 02b6 00        		.byte	0
 1376 02b7 00        		.byte	0
 1377 02b8 00        		.byte	0
 1378 02b9 00        		.byte	0
 1379 02ba 00        		.byte	0
 1380 02bb 00        		.byte	0
 1381 02bc 00        		.byte	0
 1382 02bd 00        		.byte	0
 1383 02be 00        		.byte	0
 1384 02bf 00        		.byte	0
 1385 02c0 00        		.byte	0
 1386 02c1 00        		.byte	0
 1387 02c2 00        		.byte	0
 1388 02c3 00        		.byte	0
 1389 02c4 00        		.byte	0
 1390 02c5 00        		.byte	0
 1391 02c6 00        		.byte	0
 1392 02c7 00        		.byte	0
 1393 02c8 00        		.byte	0
 1394 02c9 00        		.byte	0
 1395 02ca 00        		.byte	0
 1396 02cb 00        		.byte	0
 1397 02cc 00        		.byte	0
 1398 02cd 00        		.byte	0
 1399 02ce 00        		.byte	0
 1400 02cf 00        		.byte	0
 1401 02d0 00        		.byte	0
 1402 02d1 00        		.byte	0
 1403 02d2 00        		.byte	0
 1404 02d3 00        		.byte	0
 1405 02d4 00        		.byte	0
 1406 02d5 00        		.byte	0
 1407 02d6 00        		.byte	0
 1408 02d7 00        		.byte	0
 1409 02d8 00        		.byte	0
 1410 02d9 00        		.byte	0
 1411 02da 00        		.byte	0
 1412 02db 00        		.byte	0
 1413 02dc 00        		.byte	0
 1414 02dd 00        		.byte	0
 1415 02de 00        		.byte	0
 1416 02df 02        		.byte	2
 1417 02e0 04        		.byte	4
 1418 02e1 01        		.byte	1
 1419 02e2 02        		.byte	2
 1420 02e3 00        		.byte	0
 1421 02e4 00        		.byte	0
 1422 02e5 00        		.byte	0
 1423 02e6 00        		.byte	0
 1424 02e7 00        		.byte	0
 1425 02e8 00        		.byte	0
 1426 02e9 00        		.byte	0
 1427 02ea 18        		.byte	24
 1428 02eb 18        		.byte	24
 1429 02ec 00        		.byte	0
 1430 02ed 00        		.byte	0
 1431 02ee 00        		.byte	0
 1432 02ef 00        		.byte	0
 1433 02f0 00        		.byte	0
 1434 02f1 00        		.byte	0
 1435 02f2 00        		.byte	0
 1436 02f3 00        		.byte	0
 1437 02f4 00        		.byte	0
 1438 02f5 00        		.byte	0
 1439 02f6 00        		.byte	0
 1440 02f7 00        		.byte	0
 1441 02f8 00        		.byte	0
 1442 02f9 00        		.byte	0
 1443 02fa 00        		.byte	0
 1444 02fb 00        		.byte	0
 1445 02fc 00        		.byte	0
 1446 02fd 00        		.byte	0
 1447 02fe 00        		.byte	0
 1448 02ff 00        		.byte	0
 1449 0300 00        		.byte	0
 1450 0301 00        		.byte	0
 1451 0302 00        		.byte	0
 1452 0303 00        		.byte	0
 1453 0304 00        		.byte	0
 1454 0305 00        		.byte	0
 1455 0306 00        		.byte	0
 1456 0307 00        		.byte	0
 1457 0308 00        		.byte	0
 1458 0309 00        		.byte	0
 1459 030a 00        		.byte	0
 1460 030b 00        		.byte	0
 1461 030c 00        		.byte	0
 1462 030d 00        		.byte	0
 1463 030e 00        		.byte	0
 1464 030f 00        		.byte	0
 1465 0310 00        		.byte	0
 1466 0311 00        		.byte	0
 1467 0312 00        		.byte	0
 1468 0313 00        		.byte	0
 1469 0314 00        		.byte	0
 1470 0315 00        		.byte	0
 1471 0316 00        		.byte	0
 1472 0317 00        		.byte	0
 1473 0318 00        		.byte	0
 1474 0319 00        		.byte	0
 1475 031a 00        		.byte	0
 1476 031b 00        		.byte	0
 1477 031c 00        		.byte	0
 1478 031d 00        		.byte	0
 1479 031e 00        		.byte	0
 1480 031f 00        		.byte	0
 1481 0320 00        		.byte	0
 1482 0321 00        		.byte	0
 1483 0322 00        		.byte	0
 1484 0323 00        		.byte	0
 1485 0324 00        		.byte	0
 1486 0325 00        		.byte	0
 1487 0326 00        		.byte	0
 1488 0327 79        		.byte	121
 1489 0328 00        		.byte	0
 1490 0329 00        		.byte	0
 1491 032a 00        		.byte	0
 1492 032b 00        		.byte	0
 1493 032c 00        		.byte	0
 1494 032d 00        		.byte	0
 1495 032e 00        		.byte	0
 1496 032f 48        		.byte	72
 1497 0330 7E        		.byte	126
 1498 0331 49        		.byte	73
 1499 0332 49        		.byte	73
 1500 0333 42        		.byte	66
 1501 0334 00        		.byte	0
 1502 0335 00        		.byte	0
 1503 0336 00        		.byte	0
 1504 0337 00        		.byte	0
 1505 0338 00        		.byte	0
 1506 0339 15        		.byte	21
 1507 033a 16        		.byte	22
 1508 033b 7C        		.byte	124
 1509 033c 16        		.byte	22
 1510 033d 15        		.byte	21
 1511 033e 00        		.byte	0
 1512 033f 00        		.byte	0
 1513 0340 00        		.byte	0
 1514 0341 00        		.byte	0
 1515 0342 00        		.byte	0
 1516 0343 0A        		.byte	10
 1517 0344 55        		.byte	85
 1518 0345 55        		.byte	85
 1519 0346 55        		.byte	85
 1520 0347 28        		.byte	40
 1521 0348 00        		.byte	0
 1522 0349 01        		.byte	1
 1523 034a 00        		.byte	0
 1524 034b 01        		.byte	1
 1525 034c 00        		.byte	0
 1526 034d 3E        		.byte	62
 1527 034e 63        		.byte	99
 1528 034f 5D        		.byte	93
 1529 0350 6B        		.byte	107
 1530 0351 3E        		.byte	62
 1531 0352 00        		.byte	0
 1532 0353 00        		.byte	0
 1533 0354 00        		.byte	0
 1534 0355 00        		.byte	0
 1535 0356 00        		.byte	0
 1536 0357 08        		.byte	8
 1537 0358 14        		.byte	20
 1538 0359 2A        		.byte	42
 1539 035a 14        		.byte	20
 1540 035b 22        		.byte	34
 1541 035c 00        		.byte	0
 1542 035d 00        		.byte	0
 1543 035e 00        		.byte	0
 1544 035f 00        		.byte	0
 1545 0360 00        		.byte	0
 1546 0361 00        		.byte	0
 1547 0362 00        		.byte	0
 1548 0363 00        		.byte	0
 1549 0364 00        		.byte	0
 1550 0365 00        		.byte	0
 1551 0366 3E        		.byte	62
 1552 0367 41        		.byte	65
 1553 0368 75        		.byte	117
 1554 0369 4B        		.byte	75
 1555 036a 3E        		.byte	62
 1556 036b 01        		.byte	1
 1557 036c 01        		.byte	1
 1558 036d 01        		.byte	1
 1559 036e 01        		.byte	1
 1560 036f 01        		.byte	1
 1561 0370 00        		.byte	0
 1562 0371 02        		.byte	2
 1563 0372 05        		.byte	5
 1564 0373 02        		.byte	2
 1565 0374 00        		.byte	0
 1566 0375 00        		.byte	0
 1567 0376 00        		.byte	0
 1568 0377 00        		.byte	0
 1569 0378 00        		.byte	0
 1570 0379 00        		.byte	0
 1571 037a 00        		.byte	0
 1572 037b 00        		.byte	0
 1573 037c 00        		.byte	0
 1574 037d 00        		.byte	0
 1575 037e 00        		.byte	0
 1576 037f 00        		.byte	0
 1577 0380 00        		.byte	0
 1578 0381 00        		.byte	0
 1579 0382 00        		.byte	0
 1580 0383 00        		.byte	0
 1581 0384 00        		.byte	0
 1582 0385 00        		.byte	0
 1583 0386 00        		.byte	0
 1584 0387 00        		.byte	0
 1585 0388 00        		.byte	0
 1586 0389 00        		.byte	0
 1587 038a 00        		.byte	0
 1588 038b 00        		.byte	0
 1589 038c 00        		.byte	0
 1590 038d 00        		.byte	0
 1591 038e 06        		.byte	6
 1592 038f 0F        		.byte	15
 1593 0390 7F        		.byte	127
 1594 0391 01        		.byte	1
 1595 0392 7F        		.byte	127
 1596 0393 00        		.byte	0
 1597 0394 00        		.byte	0
 1598 0395 00        		.byte	0
 1599 0396 00        		.byte	0
 1600 0397 00        		.byte	0
 1601 0398 00        		.byte	0
 1602 0399 00        		.byte	0
 1603 039a 00        		.byte	0
 1604 039b 00        		.byte	0
 1605 039c 00        		.byte	0
 1606 039d 00        		.byte	0
 1607 039e 00        		.byte	0
 1608 039f 00        		.byte	0
 1609 03a0 00        		.byte	0
 1610 03a1 00        		.byte	0
 1611 03a2 07        		.byte	7
 1612 03a3 05        		.byte	5
 1613 03a4 07        		.byte	7
 1614 03a5 00        		.byte	0
 1615 03a6 00        		.byte	0
 1616 03a7 22        		.byte	34
 1617 03a8 14        		.byte	20
 1618 03a9 2A        		.byte	42
 1619 03aa 14        		.byte	20
 1620 03ab 08        		.byte	8
 1621 03ac 0F        		.byte	15
 1622 03ad 00        		.byte	0
 1623 03ae 3C        		.byte	60
 1624 03af 20        		.byte	32
 1625 03b0 78        		.byte	120
 1626 03b1 0F        		.byte	15
 1627 03b2 00        		.byte	0
 1628 03b3 48        		.byte	72
 1629 03b4 64        		.byte	100
 1630 03b5 58        		.byte	88
 1631 03b6 00        		.byte	0
 1632 03b7 00        		.byte	0
 1633 03b8 00        		.byte	0
 1634 03b9 00        		.byte	0
 1635 03ba 00        		.byte	0
 1636 03bb 30        		.byte	48
 1637 03bc 48        		.byte	72
 1638 03bd 45        		.byte	69
 1639 03be 40        		.byte	64
 1640 03bf 20        		.byte	32
 1641 03c0 00        		.byte	0
 1642 03c1 00        		.byte	0
 1643 03c2 00        		.byte	0
 1644 03c3 00        		.byte	0
 1645 03c4 00        		.byte	0
 1646 03c5 00        		.byte	0
 1647 03c6 00        		.byte	0
 1648 03c7 00        		.byte	0
 1649 03c8 00        		.byte	0
 1650 03c9 00        		.byte	0
 1651 03ca 00        		.byte	0
 1652 03cb 00        		.byte	0
 1653 03cc 00        		.byte	0
 1654 03cd 00        		.byte	0
 1655 03ce 00        		.byte	0
 1656 03cf 72        		.byte	114
 1657 03d0 29        		.byte	41
 1658 03d1 29        		.byte	41
 1659 03d2 2A        		.byte	42
 1660 03d3 71        		.byte	113
 1661 03d4 78        		.byte	120
 1662 03d5 25        		.byte	37
 1663 03d6 24        		.byte	36
 1664 03d7 25        		.byte	37
 1665 03d8 78        		.byte	120
 1666 03d9 70        		.byte	112
 1667 03da 2A        		.byte	42
 1668 03db 25        		.byte	37
 1669 03dc 2A        		.byte	42
 1670 03dd 70        		.byte	112
 1671 03de 7E        		.byte	126
 1672 03df 09        		.byte	9
 1673 03e0 7F        		.byte	127
 1674 03e1 49        		.byte	73
 1675 03e2 49        		.byte	73
 1676 03e3 0E        		.byte	14
 1677 03e4 51        		.byte	81
 1678 03e5 51        		.byte	81
 1679 03e6 71        		.byte	113
 1680 03e7 11        		.byte	17
 1681 03e8 00        		.byte	0
 1682 03e9 00        		.byte	0
 1683 03ea 00        		.byte	0
 1684 03eb 00        		.byte	0
 1685 03ec 00        		.byte	0
 1686 03ed 7C        		.byte	124
 1687 03ee 54        		.byte	84
 1688 03ef 56        		.byte	86
 1689 03f0 55        		.byte	85
 1690 03f1 44        		.byte	68
 1691 03f2 00        		.byte	0
 1692 03f3 00        		.byte	0
 1693 03f4 00        		.byte	0
 1694 03f5 00        		.byte	0
 1695 03f6 00        		.byte	0
 1696 03f7 00        		.byte	0
 1697 03f8 00        		.byte	0
 1698 03f9 00        		.byte	0
 1699 03fa 00        		.byte	0
 1700 03fb 00        		.byte	0
 1701 03fc 00        		.byte	0
 1702 03fd 00        		.byte	0
 1703 03fe 00        		.byte	0
 1704 03ff 00        		.byte	0
 1705 0400 00        		.byte	0
 1706 0401 00        		.byte	0
 1707 0402 00        		.byte	0
 1708 0403 00        		.byte	0
 1709 0404 00        		.byte	0
 1710 0405 00        		.byte	0
 1711 0406 00        		.byte	0
 1712 0407 00        		.byte	0
 1713 0408 00        		.byte	0
 1714 0409 00        		.byte	0
 1715 040a 00        		.byte	0
 1716 040b 00        		.byte	0
 1717 040c 00        		.byte	0
 1718 040d 00        		.byte	0
 1719 040e 00        		.byte	0
 1720 040f 00        		.byte	0
 1721 0410 00        		.byte	0
 1722 0411 00        		.byte	0
 1723 0412 00        		.byte	0
 1724 0413 00        		.byte	0
 1725 0414 00        		.byte	0
 1726 0415 7A        		.byte	122
 1727 0416 09        		.byte	9
 1728 0417 11        		.byte	17
 1729 0418 22        		.byte	34
 1730 0419 79        		.byte	121
 1731 041a 00        		.byte	0
 1732 041b 00        		.byte	0
 1733 041c 00        		.byte	0
 1734 041d 00        		.byte	0
 1735 041e 00        		.byte	0
 1736 041f 00        		.byte	0
 1737 0420 00        		.byte	0
 1738 0421 00        		.byte	0
 1739 0422 00        		.byte	0
 1740 0423 00        		.byte	0
 1741 0424 00        		.byte	0
 1742 0425 00        		.byte	0
 1743 0426 00        		.byte	0
 1744 0427 00        		.byte	0
 1745 0428 00        		.byte	0
 1746 0429 3A        		.byte	58
 1747 042a 45        		.byte	69
 1748 042b 45        		.byte	69
 1749 042c 46        		.byte	70
 1750 042d 39        		.byte	57
 1751 042e 3D        		.byte	61
 1752 042f 42        		.byte	66
 1753 0430 42        		.byte	66
 1754 0431 42        		.byte	66
 1755 0432 3D        		.byte	61
 1756 0433 22        		.byte	34
 1757 0434 14        		.byte	20
 1758 0435 08        		.byte	8
 1759 0436 14        		.byte	20
 1760 0437 22        		.byte	34
 1761 0438 5C        		.byte	92
 1762 0439 32        		.byte	50
 1763 043a 2A        		.byte	42
 1764 043b 26        		.byte	38
 1765 043c 1D        		.byte	29
 1766 043d 00        		.byte	0
 1767 043e 00        		.byte	0
 1768 043f 00        		.byte	0
 1769 0440 00        		.byte	0
 1770 0441 00        		.byte	0
 1771 0442 00        		.byte	0
 1772 0443 00        		.byte	0
 1773 0444 00        		.byte	0
 1774 0445 00        		.byte	0
 1775 0446 00        		.byte	0
 1776 0447 00        		.byte	0
 1777 0448 00        		.byte	0
 1778 0449 00        		.byte	0
 1779 044a 00        		.byte	0
 1780 044b 00        		.byte	0
 1781 044c 3C        		.byte	60
 1782 044d 41        		.byte	65
 1783 044e 40        		.byte	64
 1784 044f 41        		.byte	65
 1785 0450 3C        		.byte	60
 1786 0451 00        		.byte	0
 1787 0452 00        		.byte	0
 1788 0453 00        		.byte	0
 1789 0454 00        		.byte	0
 1790 0455 00        		.byte	0
 1791 0456 00        		.byte	0
 1792 0457 00        		.byte	0
 1793 0458 00        		.byte	0
 1794 0459 00        		.byte	0
 1795 045a 00        		.byte	0
 1796 045b 00        		.byte	0
 1797 045c 00        		.byte	0
 1798 045d 00        		.byte	0
 1799 045e 00        		.byte	0
 1800 045f 00        		.byte	0
 1801 0460 20        		.byte	32
 1802 0461 55        		.byte	85
 1803 0462 56        		.byte	86
 1804 0463 54        		.byte	84
 1805 0464 78        		.byte	120
 1806 0465 20        		.byte	32
 1807 0466 54        		.byte	84
 1808 0467 56        		.byte	86
 1809 0468 55        		.byte	85
 1810 0469 78        		.byte	120
 1811 046a 20        		.byte	32
 1812 046b 56        		.byte	86
 1813 046c 55        		.byte	85
 1814 046d 56        		.byte	86
 1815 046e 78        		.byte	120
 1816 046f 22        		.byte	34
 1817 0470 51        		.byte	81
 1818 0471 55        		.byte	85
 1819 0472 56        		.byte	86
 1820 0473 79        		.byte	121
 1821 0474 20        		.byte	32
 1822 0475 55        		.byte	85
 1823 0476 54        		.byte	84
 1824 0477 55        		.byte	85
 1825 0478 78        		.byte	120
 1826 0479 00        		.byte	0
 1827 047a 00        		.byte	0
 1828 047b 00        		.byte	0
 1829 047c 00        		.byte	0
 1830 047d 00        		.byte	0
 1831 047e 24        		.byte	36
 1832 047f 54        		.byte	84
 1833 0480 78        		.byte	120
 1834 0481 54        		.byte	84
 1835 0482 58        		.byte	88
 1836 0483 0C        		.byte	12
 1837 0484 52        		.byte	82
 1838 0485 52        		.byte	82
 1839 0486 72        		.byte	114
 1840 0487 12        		.byte	18
 1841 0488 38        		.byte	56
 1842 0489 55        		.byte	85
 1843 048a 56        		.byte	86
 1844 048b 54        		.byte	84
 1845 048c 18        		.byte	24
 1846 048d 38        		.byte	56
 1847 048e 54        		.byte	84
 1848 048f 56        		.byte	86
 1849 0490 55        		.byte	85
 1850 0491 18        		.byte	24
 1851 0492 38        		.byte	56
 1852 0493 56        		.byte	86
 1853 0494 55        		.byte	85
 1854 0495 56        		.byte	86
 1855 0496 18        		.byte	24
 1856 0497 38        		.byte	56
 1857 0498 55        		.byte	85
 1858 0499 54        		.byte	84
 1859 049a 55        		.byte	85
 1860 049b 18        		.byte	24
 1861 049c 00        		.byte	0
 1862 049d 49        		.byte	73
 1863 049e 7A        		.byte	122
 1864 049f 40        		.byte	64
 1865 04a0 00        		.byte	0
 1866 04a1 00        		.byte	0
 1867 04a2 48        		.byte	72
 1868 04a3 7A        		.byte	122
 1869 04a4 41        		.byte	65
 1870 04a5 00        		.byte	0
 1871 04a6 00        		.byte	0
 1872 04a7 4A        		.byte	74
 1873 04a8 79        		.byte	121
 1874 04a9 42        		.byte	66
 1875 04aa 00        		.byte	0
 1876 04ab 00        		.byte	0
 1877 04ac 4A        		.byte	74
 1878 04ad 78        		.byte	120
 1879 04ae 42        		.byte	66
 1880 04af 00        		.byte	0
 1881 04b0 00        		.byte	0
 1882 04b1 00        		.byte	0
 1883 04b2 00        		.byte	0
 1884 04b3 00        		.byte	0
 1885 04b4 00        		.byte	0
 1886 04b5 7A        		.byte	122
 1887 04b6 11        		.byte	17
 1888 04b7 09        		.byte	9
 1889 04b8 0A        		.byte	10
 1890 04b9 71        		.byte	113
 1891 04ba 30        		.byte	48
 1892 04bb 49        		.byte	73
 1893 04bc 4A        		.byte	74
 1894 04bd 48        		.byte	72
 1895 04be 30        		.byte	48
 1896 04bf 30        		.byte	48
 1897 04c0 48        		.byte	72
 1898 04c1 4A        		.byte	74
 1899 04c2 49        		.byte	73
 1900 04c3 30        		.byte	48
 1901 04c4 30        		.byte	48
 1902 04c5 4A        		.byte	74
 1903 04c6 49        		.byte	73
 1904 04c7 4A        		.byte	74
 1905 04c8 30        		.byte	48
 1906 04c9 32        		.byte	50
 1907 04ca 49        		.byte	73
 1908 04cb 49        		.byte	73
 1909 04cc 4A        		.byte	74
 1910 04cd 31        		.byte	49
 1911 04ce 30        		.byte	48
 1912 04cf 4A        		.byte	74
 1913 04d0 48        		.byte	72
 1914 04d1 4A        		.byte	74
 1915 04d2 30        		.byte	48
 1916 04d3 08        		.byte	8
 1917 04d4 08        		.byte	8
 1918 04d5 2A        		.byte	42
 1919 04d6 08        		.byte	8
 1920 04d7 08        		.byte	8
 1921 04d8 18        		.byte	24
 1922 04d9 64        		.byte	100
 1923 04da 3C        		.byte	60
 1924 04db 26        		.byte	38
 1925 04dc 18        		.byte	24
 1926 04dd 38        		.byte	56
 1927 04de 41        		.byte	65
 1928 04df 42        		.byte	66
 1929 04e0 20        		.byte	32
 1930 04e1 78        		.byte	120
 1931 04e2 38        		.byte	56
 1932 04e3 40        		.byte	64
 1933 04e4 42        		.byte	66
 1934 04e5 21        		.byte	33
 1935 04e6 78        		.byte	120
 1936 04e7 38        		.byte	56
 1937 04e8 42        		.byte	66
 1938 04e9 41        		.byte	65
 1939 04ea 22        		.byte	34
 1940 04eb 78        		.byte	120
 1941 04ec 38        		.byte	56
 1942 04ed 42        		.byte	66
 1943 04ee 40        		.byte	64
 1944 04ef 22        		.byte	34
 1945 04f0 78        		.byte	120
 1946 04f1 00        		.byte	0
 1947 04f2 00        		.byte	0
 1948 04f3 00        		.byte	0
 1949 04f4 00        		.byte	0
 1950 04f5 00        		.byte	0
 1951 04f6 00        		.byte	0
 1952 04f7 00        		.byte	0
 1953 04f8 00        		.byte	0
 1954 04f9 00        		.byte	0
 1955 04fa 00        		.byte	0
 1956 04fb 0C        		.byte	12
 1957 04fc 51        		.byte	81
 1958 04fd 50        		.byte	80
 1959 04fe 51        		.byte	81
 1960 04ff 3C        		.byte	60
 1962               		.text
 1964               	.Letext0:
DEFINED SYMBOLS
                            *ABS*:00000000 DOGM128-6_Graphicdisplay_driver.c
     /tmp/cclCOtsV.s:2      *ABS*:0000003f __SREG__
     /tmp/cclCOtsV.s:3      *ABS*:0000003e __SP_H__
     /tmp/cclCOtsV.s:4      *ABS*:0000003d __SP_L__
     /tmp/cclCOtsV.s:5      *ABS*:00000034 __CCP__
     /tmp/cclCOtsV.s:6      *ABS*:00000000 __tmp_reg__
     /tmp/cclCOtsV.s:7      *ABS*:00000001 __zero_reg__
     /tmp/cclCOtsV.s:95     .text:00000000 DOGM128_6_usart1_sendByte
     /tmp/cclCOtsV.s:242    .text:00000078 DOGM128_6_clear_display
     /tmp/cclCOtsV.s:334    .text:000000da DOGM128_6_display_init
     /tmp/cclCOtsV.s:534    .text:00000180 DOGM128_6_display_backlight
     /tmp/cclCOtsV.s:561    .text:0000018c DOGM128_6_LCD_print
     /tmp/cclCOtsV.s:680    .progmem.data:00000000 font5x7

UNDEFINED SYMBOLS
__do_copy_data
__do_clear_bss
