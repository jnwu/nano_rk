   1               		.file	"ad5242.c"
   2               	__SREG__ = 0x3f
   3               	__SP_H__ = 0x3e
   4               	__SP_L__ = 0x3d
   5               	__CCP__  = 0x34
   6               	__tmp_reg__ = 0
   7               	__zero_reg__ = 1
   8               		.global __do_copy_data
   9               		.global __do_clear_bss
  12               		.text
  13               	.Ltext0:
  34               	.global	ad5242_set
  36               	ad5242_set:
  37               		.stabd	46,0,0
   0:../../../src/drivers/platform/micaZ/source/ad5242.c **** /******************************************************************************
   1:../../../src/drivers/platform/micaZ/source/ad5242.c **** *  Nano-RK, a real-time operating system for sensor networks.
   2:../../../src/drivers/platform/micaZ/source/ad5242.c **** *  Copyright (C) 2011 Technische Universität München (www.vmi.ei.tum.de)
   3:../../../src/drivers/platform/micaZ/source/ad5242.c **** *  All rights reserved.
   4:../../../src/drivers/platform/micaZ/source/ad5242.c **** *
   5:../../../src/drivers/platform/micaZ/source/ad5242.c **** *  This is the Open Source Version of Nano-RK included as part of a Dual
   6:../../../src/drivers/platform/micaZ/source/ad5242.c **** *  Licensing Model. If you are unsure which license to use please refer to:
   7:../../../src/drivers/platform/micaZ/source/ad5242.c **** *  http://www.nanork.org/nano-RK/wiki/Licensing
   8:../../../src/drivers/platform/micaZ/source/ad5242.c **** *
   9:../../../src/drivers/platform/micaZ/source/ad5242.c **** *  This program is free software: you can redistribute it and/or modify
  10:../../../src/drivers/platform/micaZ/source/ad5242.c **** *  it under the terms of the GNU General Public License as published by
  11:../../../src/drivers/platform/micaZ/source/ad5242.c **** *  the Free Software Foundation, version 2.0 of the License.
  12:../../../src/drivers/platform/micaZ/source/ad5242.c **** *
  13:../../../src/drivers/platform/micaZ/source/ad5242.c **** *  This program is distributed in the hope that it will be useful,
  14:../../../src/drivers/platform/micaZ/source/ad5242.c **** *  but WITHOUT ANY WARRANTY; without even the implied warranty of
  15:../../../src/drivers/platform/micaZ/source/ad5242.c **** *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  16:../../../src/drivers/platform/micaZ/source/ad5242.c **** *  GNU General Public License for more details.
  17:../../../src/drivers/platform/micaZ/source/ad5242.c **** *
  18:../../../src/drivers/platform/micaZ/source/ad5242.c **** *  You should have received a copy of the GNU General Public License
  19:../../../src/drivers/platform/micaZ/source/ad5242.c **** *  along with this program.  If not, see <http://www.gnu.org/licenses/>.
  20:../../../src/drivers/platform/micaZ/source/ad5242.c **** *
  21:../../../src/drivers/platform/micaZ/source/ad5242.c **** *
  22:../../../src/drivers/platform/micaZ/source/ad5242.c **** *  AD5242 digital potentiometer driver
  23:../../../src/drivers/platform/micaZ/source/ad5242.c **** *
  24:../../../src/drivers/platform/micaZ/source/ad5242.c **** *  Contributing Authors (specific to this file):
  25:../../../src/drivers/platform/micaZ/source/ad5242.c **** *  Author: Peter Diener
  26:../../../src/drivers/platform/micaZ/source/ad5242.c **** *
  27:../../../src/drivers/platform/micaZ/source/ad5242.c **** ***************************************************************************************/
  28:../../../src/drivers/platform/micaZ/source/ad5242.c **** 
  29:../../../src/drivers/platform/micaZ/source/ad5242.c **** #include "ad5242.h"
  30:../../../src/drivers/platform/micaZ/source/ad5242.c **** #include "i2c_driver.h"
  31:../../../src/drivers/platform/micaZ/source/ad5242.c **** 
  32:../../../src/drivers/platform/micaZ/source/ad5242.c **** 
  33:../../../src/drivers/platform/micaZ/source/ad5242.c **** 
  34:../../../src/drivers/platform/micaZ/source/ad5242.c **** // Initialize the interface
  35:../../../src/drivers/platform/micaZ/source/ad5242.c **** void ad5242_init()
  36:../../../src/drivers/platform/micaZ/source/ad5242.c **** {
  37:../../../src/drivers/platform/micaZ/source/ad5242.c **** 	i2c_init();
  38:../../../src/drivers/platform/micaZ/source/ad5242.c **** }
  39:../../../src/drivers/platform/micaZ/source/ad5242.c **** 
  40:../../../src/drivers/platform/micaZ/source/ad5242.c **** 
  41:../../../src/drivers/platform/micaZ/source/ad5242.c **** // hwAddress is defined by the Pin settings [AD1 AD0]
  42:../../../src/drivers/platform/micaZ/source/ad5242.c **** // channel is 1 or 2
  43:../../../src/drivers/platform/micaZ/source/ad5242.c **** // value is the resistor divider value
  44:../../../src/drivers/platform/micaZ/source/ad5242.c **** void ad5242_set(unsigned char hwAddress, unsigned char channel, unsigned char value)
  45:../../../src/drivers/platform/micaZ/source/ad5242.c **** {
  39               	.LM0:
  40               	.LFBB1:
  41 0000 0F93      		push r16
  42 0002 1F93      		push r17
  43               	/* prologue: function */
  44               	/* frame size = 0 */
  45 0004 162F      		mov r17,r22
  46 0006 042F      		mov r16,r20
  46:../../../src/drivers/platform/micaZ/source/ad5242.c **** 	unsigned char address = 0b0101100 | (hwAddress & 0b11);
  47:../../../src/drivers/platform/micaZ/source/ad5242.c **** 	
  48:../../../src/drivers/platform/micaZ/source/ad5242.c **** 	i2c_controlByte_TX(address);
  48               	.LM1:
  49 0008 8370      		andi r24,lo8(3)
  50 000a 8C62      		ori r24,lo8(44)
  51 000c 0E94 0000 		call i2c_controlByte_TX
  49:../../../src/drivers/platform/micaZ/source/ad5242.c **** 	
  50:../../../src/drivers/platform/micaZ/source/ad5242.c **** 	// Instruction byte
  51:../../../src/drivers/platform/micaZ/source/ad5242.c **** 	if (channel == 1)
  53               	.LM2:
  54 0010 1130      		cpi r17,lo8(1)
  55 0012 01F4      		brne .L2
  52:../../../src/drivers/platform/micaZ/source/ad5242.c **** 		i2c_send(0x00);		// Channel A (1)
  57               	.LM3:
  58 0014 80E0      		ldi r24,lo8(0)
  59 0016 00C0      		rjmp .L5
  60               	.L2:
  53:../../../src/drivers/platform/micaZ/source/ad5242.c **** 	else
  54:../../../src/drivers/platform/micaZ/source/ad5242.c **** 		i2c_send(0x80);		// Channel B (2)
  62               	.LM4:
  63 0018 80E8      		ldi r24,lo8(-128)
  64               	.L5:
  65 001a 0E94 0000 		call i2c_send
  55:../../../src/drivers/platform/micaZ/source/ad5242.c **** 		
  56:../../../src/drivers/platform/micaZ/source/ad5242.c **** 	// Resistor divider value
  57:../../../src/drivers/platform/micaZ/source/ad5242.c **** 	i2c_send(value);
  67               	.LM5:
  68 001e 802F      		mov r24,r16
  69 0020 0E94 0000 		call i2c_send
  58:../../../src/drivers/platform/micaZ/source/ad5242.c **** 		
  59:../../../src/drivers/platform/micaZ/source/ad5242.c **** 	i2c_stop();
  71               	.LM6:
  72 0024 0E94 0000 		call i2c_stop
  73               	/* epilogue start */
  60:../../../src/drivers/platform/micaZ/source/ad5242.c **** }
  75               	.LM7:
  76 0028 1F91      		pop r17
  77 002a 0F91      		pop r16
  78 002c 0895      		ret
  80               	.Lscope1:
  82               		.stabd	78,0,0
  84               	.global	ad5242_init
  86               	ad5242_init:
  87               		.stabd	46,0,0
  37:../../../src/drivers/platform/micaZ/source/ad5242.c **** {
  89               	.LM8:
  90               	.LFBB2:
  91               	/* prologue: function */
  92               	/* frame size = 0 */
  38:../../../src/drivers/platform/micaZ/source/ad5242.c **** 	i2c_init();
  94               	.LM9:
  95 002e 0E94 0000 		call i2c_init
  96               	/* epilogue start */
  39:../../../src/drivers/platform/micaZ/source/ad5242.c **** }
  98               	.LM10:
  99 0032 0895      		ret
 101               	.Lscope2:
 103               		.stabd	78,0,0
 105               	.Letext0:
DEFINED SYMBOLS
                            *ABS*:00000000 ad5242.c
     /tmp/cc9oQOWO.s:2      *ABS*:0000003f __SREG__
     /tmp/cc9oQOWO.s:3      *ABS*:0000003e __SP_H__
     /tmp/cc9oQOWO.s:4      *ABS*:0000003d __SP_L__
     /tmp/cc9oQOWO.s:5      *ABS*:00000034 __CCP__
     /tmp/cc9oQOWO.s:6      *ABS*:00000000 __tmp_reg__
     /tmp/cc9oQOWO.s:7      *ABS*:00000001 __zero_reg__
     /tmp/cc9oQOWO.s:36     .text:00000000 ad5242_set
     /tmp/cc9oQOWO.s:86     .text:0000002e ad5242_init

UNDEFINED SYMBOLS
__do_copy_data
__do_clear_bss
i2c_controlByte_TX
i2c_send
i2c_stop
i2c_init
