   1               		.file	"DS2401.c"
   2               	__SREG__ = 0x3f
   3               	__SP_H__ = 0x3e
   4               	__SP_L__ = 0x3d
   5               	__CCP__  = 0x34
   6               	__tmp_reg__ = 0
   7               	__zero_reg__ = 1
   8               		.global __do_copy_data
   9               		.global __do_clear_bss
  12               		.text
  13               	.Ltext0:
 134               	.global	Maxim_1Wire_ResetPulse
 136               	Maxim_1Wire_ResetPulse:
 137               		.stabd	46,0,0
   0:../../../src/drivers/platform/micaZ/source/DS2401.c **** /******************************************************************************
   1:../../../src/drivers/platform/micaZ/source/DS2401.c **** *  Nano-RK, a real-time operating system for sensor networks.
   2:../../../src/drivers/platform/micaZ/source/DS2401.c **** *  Copyright (C) 2011 Technische Universität München (www.vmi.ei.tum.de)
   3:../../../src/drivers/platform/micaZ/source/DS2401.c **** *  All rights reserved.
   4:../../../src/drivers/platform/micaZ/source/DS2401.c **** *
   5:../../../src/drivers/platform/micaZ/source/DS2401.c **** *  This is the Open Source Version of Nano-RK included as part of a Dual
   6:../../../src/drivers/platform/micaZ/source/DS2401.c **** *  Licensing Model. If you are unsure which license to use please refer to:
   7:../../../src/drivers/platform/micaZ/source/DS2401.c **** *  http://www.nanork.org/nano-RK/wiki/Licensing
   8:../../../src/drivers/platform/micaZ/source/DS2401.c **** *
   9:../../../src/drivers/platform/micaZ/source/DS2401.c **** *  This program is free software: you can redistribute it and/or modify
  10:../../../src/drivers/platform/micaZ/source/DS2401.c **** *  it under the terms of the GNU General Public License as published by
  11:../../../src/drivers/platform/micaZ/source/DS2401.c **** *  the Free Software Foundation, version 2.0 of the License.
  12:../../../src/drivers/platform/micaZ/source/DS2401.c **** *
  13:../../../src/drivers/platform/micaZ/source/DS2401.c **** *  This program is distributed in the hope that it will be useful,
  14:../../../src/drivers/platform/micaZ/source/DS2401.c **** *  but WITHOUT ANY WARRANTY; without even the implied warranty of
  15:../../../src/drivers/platform/micaZ/source/DS2401.c **** *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  16:../../../src/drivers/platform/micaZ/source/DS2401.c **** *  GNU General Public License for more details.
  17:../../../src/drivers/platform/micaZ/source/DS2401.c **** *
  18:../../../src/drivers/platform/micaZ/source/DS2401.c **** *  You should have received a copy of the GNU General Public License
  19:../../../src/drivers/platform/micaZ/source/DS2401.c **** *  along with this program.  If not, see <http://www.gnu.org/licenses/>.
  20:../../../src/drivers/platform/micaZ/source/DS2401.c **** *
  21:../../../src/drivers/platform/micaZ/source/DS2401.c **** *
  22:../../../src/drivers/platform/micaZ/source/DS2401.c **** *  Serial ID Driver for Maxim DS2401.h
  23:../../../src/drivers/platform/micaZ/source/DS2401.c **** *
  24:../../../src/drivers/platform/micaZ/source/DS2401.c **** *  Contributing Authors (specific to this file):
  25:../../../src/drivers/platform/micaZ/source/DS2401.c **** *  Author: Peter Diener
  26:../../../src/drivers/platform/micaZ/source/DS2401.c **** *
  27:../../../src/drivers/platform/micaZ/source/DS2401.c **** ***************************************************************************************/
  28:../../../src/drivers/platform/micaZ/source/DS2401.c **** 
  29:../../../src/drivers/platform/micaZ/source/DS2401.c **** 
  30:../../../src/drivers/platform/micaZ/source/DS2401.c **** #include "DS2401.h"
  31:../../../src/drivers/platform/micaZ/source/DS2401.c **** #include <avr/io.h>
  32:../../../src/drivers/platform/micaZ/source/DS2401.c **** #include <util/delay.h>
  33:../../../src/drivers/platform/micaZ/source/DS2401.c **** 
  34:../../../src/drivers/platform/micaZ/source/DS2401.c **** 
  35:../../../src/drivers/platform/micaZ/source/DS2401.c **** 
  36:../../../src/drivers/platform/micaZ/source/DS2401.c **** // DataPin_DriveLow forces a low state to the data pin
  37:../../../src/drivers/platform/micaZ/source/DS2401.c **** #define DataPin_DriveLow   do {OUTPUT &= ~(1 << PIN); DIRECTION |= (1 << PIN);} while(0)
  38:../../../src/drivers/platform/micaZ/source/DS2401.c **** // DataPin_PullUp switches the data pin to input and enables the pullup resistor
  39:../../../src/drivers/platform/micaZ/source/DS2401.c **** #define DataPin_PullUp     do {DIRECTION &= ~(1 << PIN); OUTPUT |= (1 << PIN);} while(0)
  40:../../../src/drivers/platform/micaZ/source/DS2401.c **** // DataPin_State returns 1 if the data pin is high, else 0
  41:../../../src/drivers/platform/micaZ/source/DS2401.c **** #define DataPin_State      ((INPUT & (1 << PIN)) >> PIN)
  42:../../../src/drivers/platform/micaZ/source/DS2401.c **** 
  43:../../../src/drivers/platform/micaZ/source/DS2401.c **** // The Maxim 1Wire interface is designed for a slot time of 100µs
  44:../../../src/drivers/platform/micaZ/source/DS2401.c **** 
  45:../../../src/drivers/platform/micaZ/source/DS2401.c **** // Applies a reset pulse and checks for the presence pulse of a slave device
  46:../../../src/drivers/platform/micaZ/source/DS2401.c **** // Returns 0 if slave is present, else -1
  47:../../../src/drivers/platform/micaZ/source/DS2401.c **** inline signed char Maxim_1Wire_ResetPulse(void)
  48:../../../src/drivers/platform/micaZ/source/DS2401.c **** {
 139               	.LM0:
 140               	.LFBB1:
 141               	/* prologue: function */
 142               	/* frame size = 0 */
 143               	.LBB134:
 144               	.LBB135:
 145               	.LBB136:
 146               	.LBB137:
 147               	.LBB138:
 148               	.LBB139:
 150               	.Ltext1:
   0:/usr/lib/gcc/avr/4.3.4/../../../avr/include/util/delay_basic.h **** /* Copyright (c) 2002, Marek Michalkiewicz
   1:/usr/lib/gcc/avr/4.3.4/../../../avr/include/util/delay_basic.h ****    Copyright (c) 2007 Joerg Wunsch
   2:/usr/lib/gcc/avr/4.3.4/../../../avr/include/util/delay_basic.h ****    All rights reserved.
   3:/usr/lib/gcc/avr/4.3.4/../../../avr/include/util/delay_basic.h **** 
   4:/usr/lib/gcc/avr/4.3.4/../../../avr/include/util/delay_basic.h ****    Redistribution and use in source and binary forms, with or without
   5:/usr/lib/gcc/avr/4.3.4/../../../avr/include/util/delay_basic.h ****    modification, are permitted provided that the following conditions are met:
   6:/usr/lib/gcc/avr/4.3.4/../../../avr/include/util/delay_basic.h **** 
   7:/usr/lib/gcc/avr/4.3.4/../../../avr/include/util/delay_basic.h ****    * Redistributions of source code must retain the above copyright
   8:/usr/lib/gcc/avr/4.3.4/../../../avr/include/util/delay_basic.h ****      notice, this list of conditions and the following disclaimer.
   9:/usr/lib/gcc/avr/4.3.4/../../../avr/include/util/delay_basic.h **** 
  10:/usr/lib/gcc/avr/4.3.4/../../../avr/include/util/delay_basic.h ****    * Redistributions in binary form must reproduce the above copyright
  11:/usr/lib/gcc/avr/4.3.4/../../../avr/include/util/delay_basic.h ****      notice, this list of conditions and the following disclaimer in
  12:/usr/lib/gcc/avr/4.3.4/../../../avr/include/util/delay_basic.h ****      the documentation and/or other materials provided with the
  13:/usr/lib/gcc/avr/4.3.4/../../../avr/include/util/delay_basic.h ****      distribution.
  14:/usr/lib/gcc/avr/4.3.4/../../../avr/include/util/delay_basic.h **** 
  15:/usr/lib/gcc/avr/4.3.4/../../../avr/include/util/delay_basic.h ****    * Neither the name of the copyright holders nor the names of
  16:/usr/lib/gcc/avr/4.3.4/../../../avr/include/util/delay_basic.h ****      contributors may be used to endorse or promote products derived
  17:/usr/lib/gcc/avr/4.3.4/../../../avr/include/util/delay_basic.h ****      from this software without specific prior written permission.
  18:/usr/lib/gcc/avr/4.3.4/../../../avr/include/util/delay_basic.h **** 
  19:/usr/lib/gcc/avr/4.3.4/../../../avr/include/util/delay_basic.h ****   THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  20:/usr/lib/gcc/avr/4.3.4/../../../avr/include/util/delay_basic.h ****   AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  21:/usr/lib/gcc/avr/4.3.4/../../../avr/include/util/delay_basic.h ****   IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
  22:/usr/lib/gcc/avr/4.3.4/../../../avr/include/util/delay_basic.h ****   ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE
  23:/usr/lib/gcc/avr/4.3.4/../../../avr/include/util/delay_basic.h ****   LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
  24:/usr/lib/gcc/avr/4.3.4/../../../avr/include/util/delay_basic.h ****   CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
  25:/usr/lib/gcc/avr/4.3.4/../../../avr/include/util/delay_basic.h ****   SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
  26:/usr/lib/gcc/avr/4.3.4/../../../avr/include/util/delay_basic.h ****   INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
  27:/usr/lib/gcc/avr/4.3.4/../../../avr/include/util/delay_basic.h ****   CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
  28:/usr/lib/gcc/avr/4.3.4/../../../avr/include/util/delay_basic.h ****   ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
  29:/usr/lib/gcc/avr/4.3.4/../../../avr/include/util/delay_basic.h ****   POSSIBILITY OF SUCH DAMAGE. */
  30:/usr/lib/gcc/avr/4.3.4/../../../avr/include/util/delay_basic.h **** 
  31:/usr/lib/gcc/avr/4.3.4/../../../avr/include/util/delay_basic.h **** /* $Id: delay_basic.h,v 1.1 2007/05/13 21:23:20 joerg_wunsch Exp $ */
  32:/usr/lib/gcc/avr/4.3.4/../../../avr/include/util/delay_basic.h **** 
  33:/usr/lib/gcc/avr/4.3.4/../../../avr/include/util/delay_basic.h **** #ifndef _UTIL_DELAY_BASIC_H_
  34:/usr/lib/gcc/avr/4.3.4/../../../avr/include/util/delay_basic.h **** #define _UTIL_DELAY_BASIC_H_ 1
  35:/usr/lib/gcc/avr/4.3.4/../../../avr/include/util/delay_basic.h **** 
  36:/usr/lib/gcc/avr/4.3.4/../../../avr/include/util/delay_basic.h **** #include <inttypes.h>
  37:/usr/lib/gcc/avr/4.3.4/../../../avr/include/util/delay_basic.h **** 
  38:/usr/lib/gcc/avr/4.3.4/../../../avr/include/util/delay_basic.h **** /** \file */
  39:/usr/lib/gcc/avr/4.3.4/../../../avr/include/util/delay_basic.h **** /** \defgroup util_delay_basic <util/delay_basic.h>: Basic busy-wait delay loops
  40:/usr/lib/gcc/avr/4.3.4/../../../avr/include/util/delay_basic.h ****     \code
  41:/usr/lib/gcc/avr/4.3.4/../../../avr/include/util/delay_basic.h ****     #include <util/delay_basic.h>
  42:/usr/lib/gcc/avr/4.3.4/../../../avr/include/util/delay_basic.h ****     \endcode
  43:/usr/lib/gcc/avr/4.3.4/../../../avr/include/util/delay_basic.h **** 
  44:/usr/lib/gcc/avr/4.3.4/../../../avr/include/util/delay_basic.h ****     The functions in this header file implement simple delay loops
  45:/usr/lib/gcc/avr/4.3.4/../../../avr/include/util/delay_basic.h ****     that perform a busy-waiting.  They are typically used to
  46:/usr/lib/gcc/avr/4.3.4/../../../avr/include/util/delay_basic.h ****     facilitate short delays in the program execution.  They are
  47:/usr/lib/gcc/avr/4.3.4/../../../avr/include/util/delay_basic.h ****     implemented as count-down loops with a well-known CPU cycle
  48:/usr/lib/gcc/avr/4.3.4/../../../avr/include/util/delay_basic.h ****     count per loop iteration.  As such, no other processing can
  49:/usr/lib/gcc/avr/4.3.4/../../../avr/include/util/delay_basic.h ****     occur simultaneously.  It should be kept in mind that the
  50:/usr/lib/gcc/avr/4.3.4/../../../avr/include/util/delay_basic.h ****     functions described here do not disable interrupts.
  51:/usr/lib/gcc/avr/4.3.4/../../../avr/include/util/delay_basic.h **** 
  52:/usr/lib/gcc/avr/4.3.4/../../../avr/include/util/delay_basic.h ****     In general, for long delays, the use of hardware timers is
  53:/usr/lib/gcc/avr/4.3.4/../../../avr/include/util/delay_basic.h ****     much preferrable, as they free the CPU, and allow for
  54:/usr/lib/gcc/avr/4.3.4/../../../avr/include/util/delay_basic.h ****     concurrent processing of other events while the timer is
  55:/usr/lib/gcc/avr/4.3.4/../../../avr/include/util/delay_basic.h ****     running.  However, in particular for very short delays, the
  56:/usr/lib/gcc/avr/4.3.4/../../../avr/include/util/delay_basic.h ****     overhead of setting up a hardware timer is too much compared
  57:/usr/lib/gcc/avr/4.3.4/../../../avr/include/util/delay_basic.h ****     to the overall delay time.
  58:/usr/lib/gcc/avr/4.3.4/../../../avr/include/util/delay_basic.h **** 
  59:/usr/lib/gcc/avr/4.3.4/../../../avr/include/util/delay_basic.h ****     Two inline functions are provided for the actual delay algorithms.
  60:/usr/lib/gcc/avr/4.3.4/../../../avr/include/util/delay_basic.h **** 
  61:/usr/lib/gcc/avr/4.3.4/../../../avr/include/util/delay_basic.h **** */
  62:/usr/lib/gcc/avr/4.3.4/../../../avr/include/util/delay_basic.h **** 
  63:/usr/lib/gcc/avr/4.3.4/../../../avr/include/util/delay_basic.h **** #if !defined(__DOXYGEN__)
  64:/usr/lib/gcc/avr/4.3.4/../../../avr/include/util/delay_basic.h **** static inline void _delay_loop_1(uint8_t __count) __attribute__((always_inline));
  65:/usr/lib/gcc/avr/4.3.4/../../../avr/include/util/delay_basic.h **** static inline void _delay_loop_2(uint16_t __count) __attribute__((always_inline));
  66:/usr/lib/gcc/avr/4.3.4/../../../avr/include/util/delay_basic.h **** #endif
  67:/usr/lib/gcc/avr/4.3.4/../../../avr/include/util/delay_basic.h **** 
  68:/usr/lib/gcc/avr/4.3.4/../../../avr/include/util/delay_basic.h **** /** \ingroup util_delay_basic
  69:/usr/lib/gcc/avr/4.3.4/../../../avr/include/util/delay_basic.h **** 
  70:/usr/lib/gcc/avr/4.3.4/../../../avr/include/util/delay_basic.h ****     Delay loop using an 8-bit counter \c __count, so up to 256
  71:/usr/lib/gcc/avr/4.3.4/../../../avr/include/util/delay_basic.h ****     iterations are possible.  (The value 256 would have to be passed
  72:/usr/lib/gcc/avr/4.3.4/../../../avr/include/util/delay_basic.h ****     as 0.)  The loop executes three CPU cycles per iteration, not
  73:/usr/lib/gcc/avr/4.3.4/../../../avr/include/util/delay_basic.h ****     including the overhead the compiler needs to setup the counter
  74:/usr/lib/gcc/avr/4.3.4/../../../avr/include/util/delay_basic.h ****     register.
  75:/usr/lib/gcc/avr/4.3.4/../../../avr/include/util/delay_basic.h **** 
  76:/usr/lib/gcc/avr/4.3.4/../../../avr/include/util/delay_basic.h ****     Thus, at a CPU speed of 1 MHz, delays of up to 768 microseconds
  77:/usr/lib/gcc/avr/4.3.4/../../../avr/include/util/delay_basic.h ****     can be achieved.
  78:/usr/lib/gcc/avr/4.3.4/../../../avr/include/util/delay_basic.h **** */
  79:/usr/lib/gcc/avr/4.3.4/../../../avr/include/util/delay_basic.h **** void
  80:/usr/lib/gcc/avr/4.3.4/../../../avr/include/util/delay_basic.h **** _delay_loop_1(uint8_t __count)
  81:/usr/lib/gcc/avr/4.3.4/../../../avr/include/util/delay_basic.h **** {
  82:/usr/lib/gcc/avr/4.3.4/../../../avr/include/util/delay_basic.h **** 	__asm__ volatile (
  83:/usr/lib/gcc/avr/4.3.4/../../../avr/include/util/delay_basic.h **** 		"1: dec %0" "\n\t"
  84:/usr/lib/gcc/avr/4.3.4/../../../avr/include/util/delay_basic.h **** 		"brne 1b"
  85:/usr/lib/gcc/avr/4.3.4/../../../avr/include/util/delay_basic.h **** 		: "=r" (__count)
  86:/usr/lib/gcc/avr/4.3.4/../../../avr/include/util/delay_basic.h **** 		: "0" (__count)
  87:/usr/lib/gcc/avr/4.3.4/../../../avr/include/util/delay_basic.h **** 	);
  88:/usr/lib/gcc/avr/4.3.4/../../../avr/include/util/delay_basic.h **** }
  89:/usr/lib/gcc/avr/4.3.4/../../../avr/include/util/delay_basic.h **** 
  90:/usr/lib/gcc/avr/4.3.4/../../../avr/include/util/delay_basic.h **** /** \ingroup util_delay_basic
  91:/usr/lib/gcc/avr/4.3.4/../../../avr/include/util/delay_basic.h **** 
  92:/usr/lib/gcc/avr/4.3.4/../../../avr/include/util/delay_basic.h ****     Delay loop using a 16-bit counter \c __count, so up to 65536
  93:/usr/lib/gcc/avr/4.3.4/../../../avr/include/util/delay_basic.h ****     iterations are possible.  (The value 65536 would have to be
  94:/usr/lib/gcc/avr/4.3.4/../../../avr/include/util/delay_basic.h ****     passed as 0.)  The loop executes four CPU cycles per iteration,
  95:/usr/lib/gcc/avr/4.3.4/../../../avr/include/util/delay_basic.h ****     not including the overhead the compiler requires to setup the
  96:/usr/lib/gcc/avr/4.3.4/../../../avr/include/util/delay_basic.h ****     counter register pair.
  97:/usr/lib/gcc/avr/4.3.4/../../../avr/include/util/delay_basic.h **** 
  98:/usr/lib/gcc/avr/4.3.4/../../../avr/include/util/delay_basic.h ****     Thus, at a CPU speed of 1 MHz, delays of up to about 262.1
  99:/usr/lib/gcc/avr/4.3.4/../../../avr/include/util/delay_basic.h ****     milliseconds can be achieved.
 100:/usr/lib/gcc/avr/4.3.4/../../../avr/include/util/delay_basic.h ****  */
 101:/usr/lib/gcc/avr/4.3.4/../../../avr/include/util/delay_basic.h **** void
 102:/usr/lib/gcc/avr/4.3.4/../../../avr/include/util/delay_basic.h **** _delay_loop_2(uint16_t __count)
 103:/usr/lib/gcc/avr/4.3.4/../../../avr/include/util/delay_basic.h **** {
 104:/usr/lib/gcc/avr/4.3.4/../../../avr/include/util/delay_basic.h **** 	__asm__ volatile (
 152               	.LM1:
 153 0000 89E9      		ldi r24,lo8(921)
 154 0002 93E0      		ldi r25,hi8(921)
 155 0004 FC01      		movw r30,r24
 156               	/* #APP */
 157               	 ;  105 "/usr/lib/gcc/avr/4.3.4/../../../avr/include/util/delay_basic.h" 1
 158 0006 3197      		1: sbiw r30,1
 159 0008 01F4      		brne 1b
 160               	 ;  0 "" 2
 161               	/* #NOAPP */
 162               	.LBE139:
 163               	.LBE138:
 164               	.LBE137:
 165               	.LBE136:
 166               	.LBE135:
 167               	.LBE134:
 169               	.Ltext2:
  49:../../../src/drivers/platform/micaZ/source/DS2401.c ****     unsigned char delaytime = 0;
  50:../../../src/drivers/platform/micaZ/source/DS2401.c ****     _delay_us(500);
  51:../../../src/drivers/platform/micaZ/source/DS2401.c ****     DataPin_DriveLow;
 171               	.LM2:
 172 000a DC98      		cbi 59-32,4
 173 000c D49A      		sbi 58-32,4
 174               	.LBB140:
 175               	.LBB141:
 176               	.LBB142:
 177               	.LBB143:
 178               	.LBB144:
 179               	.LBB145:
 181               	.Ltext3:
 183               	.LM3:
 184               	/* #APP */
 185               	 ;  105 "/usr/lib/gcc/avr/4.3.4/../../../avr/include/util/delay_basic.h" 1
 186 000e 0197      		1: sbiw r24,1
 187 0010 01F4      		brne 1b
 188               	 ;  0 "" 2
 189               	/* #NOAPP */
 190               	.LBE145:
 191               	.LBE144:
 192               	.LBE143:
 193               	.LBE142:
 194               	.LBE141:
 195               	.LBE140:
 197               	.Ltext4:
  52:../../../src/drivers/platform/micaZ/source/DS2401.c ****     _delay_us(500);   // datasheet value: 480 µs
  53:../../../src/drivers/platform/micaZ/source/DS2401.c ****     DataPin_PullUp;
 199               	.LM4:
 200 0012 D498      		cbi 58-32,4
 201 0014 DC9A      		sbi 59-32,4
 202               	.L2:
  54:../../../src/drivers/platform/micaZ/source/DS2401.c **** 
  55:../../../src/drivers/platform/micaZ/source/DS2401.c ****     // Wait for data line to go high
  56:../../../src/drivers/platform/micaZ/source/DS2401.c ****     while (DataPin_State == 0);
 204               	.LM5:
 205 0016 CC9B      		sbis 57-32,4
 206 0018 00C0      		rjmp .L2
 207 001a 90E0      		ldi r25,lo8(0)
 208               	.LBB146:
 209               	.LBB147:
 210               	.LBB148:
 211               	.LBB149:
 213               	.Ltext5:
  83:/usr/lib/gcc/avr/4.3.4/../../../avr/include/util/delay_basic.h **** 	__asm__ volatile (
 215               	.LM6:
 216 001c 21E3      		ldi r18,lo8(49)
 217 001e 00C0      		rjmp .L3
 218               	.L5:
 219 0020 822F      		mov r24,r18
 220               	/* #APP */
 221               	 ;  83 "/usr/lib/gcc/avr/4.3.4/../../../avr/include/util/delay_basic.h" 1
 222 0022 8A95      		1: dec r24
 223 0024 01F4      		brne 1b
 224               	 ;  0 "" 2
 225               	/* #NOAPP */
 226               	.LBE149:
 227               	.LBE148:
 228               	.LBE147:
 229               	.LBE146:
 231               	.Ltext6:
  57:../../../src/drivers/platform/micaZ/source/DS2401.c **** 
  58:../../../src/drivers/platform/micaZ/source/DS2401.c ****     // Wait for presence pulse
  59:../../../src/drivers/platform/micaZ/source/DS2401.c ****     while (DataPin_State == 1)
  60:../../../src/drivers/platform/micaZ/source/DS2401.c ****     {
  61:../../../src/drivers/platform/micaZ/source/DS2401.c ****         _delay_us(20);
  62:../../../src/drivers/platform/micaZ/source/DS2401.c ****         delaytime ++;
 233               	.LM7:
 234 0026 9F5F      		subi r25,lo8(-(1))
  63:../../../src/drivers/platform/micaZ/source/DS2401.c ****         if (delaytime > 30) return -1;  // Timeout 600 µs: no presence pulse detected
 236               	.LM8:
 237 0028 9F31      		cpi r25,lo8(31)
 238 002a 01F4      		brne .L3
 239 002c 8FEF      		ldi r24,lo8(-1)
 240 002e 0895      		ret
 241               	.L3:
  60:../../../src/drivers/platform/micaZ/source/DS2401.c ****     while (DataPin_State == 1)
 243               	.LM9:
 244 0030 CC99      		sbic 57-32,4
 245 0032 00C0      		rjmp .L5
 246               	.LBB150:
 247               	.LBB151:
 248               	.LBB152:
 249               	.LBB153:
 250               	.LBB154:
 251               	.LBB155:
 253               	.Ltext7:
 255               	.LM10:
 256 0034 89E9      		ldi r24,lo8(921)
 257 0036 93E0      		ldi r25,hi8(921)
 258               	/* #APP */
 259               	 ;  105 "/usr/lib/gcc/avr/4.3.4/../../../avr/include/util/delay_basic.h" 1
 260 0038 0197      		1: sbiw r24,1
 261 003a 01F4      		brne 1b
 262               	 ;  0 "" 2
 263               	/* #NOAPP */
 264 003c 80E0      		ldi r24,lo8(0)
 265               	.LBE155:
 266               	.LBE154:
 267               	.LBE153:
 268               	.LBE152:
 269               	.LBE151:
 270               	.LBE150:
 272               	.Ltext8:
  64:../../../src/drivers/platform/micaZ/source/DS2401.c ****     }
  65:../../../src/drivers/platform/micaZ/source/DS2401.c **** 
  66:../../../src/drivers/platform/micaZ/source/DS2401.c ****     // Presence pulse detected, wait until bus is free
  67:../../../src/drivers/platform/micaZ/source/DS2401.c ****     _delay_us(500);   // Datasheet: Trsth
  68:../../../src/drivers/platform/micaZ/source/DS2401.c **** 
  69:../../../src/drivers/platform/micaZ/source/DS2401.c ****     return 0;
  70:../../../src/drivers/platform/micaZ/source/DS2401.c **** }
 274               	.LM11:
 275 003e 0895      		ret
 280               	.Lscope1:
 282               		.stabd	78,0,0
 285               	.global	Maxim_1Wire_WriteBit
 287               	Maxim_1Wire_WriteBit:
 288               		.stabd	46,0,0
  71:../../../src/drivers/platform/micaZ/source/DS2401.c **** 
  72:../../../src/drivers/platform/micaZ/source/DS2401.c **** 
  73:../../../src/drivers/platform/micaZ/source/DS2401.c **** // Write will take a 100 µs time slot and write one or zero
  74:../../../src/drivers/platform/micaZ/source/DS2401.c **** // Wrtie One will pull low for 10 µs
  75:../../../src/drivers/platform/micaZ/source/DS2401.c **** // Write Zero will pull down for 80 µs
  76:../../../src/drivers/platform/micaZ/source/DS2401.c **** inline void Maxim_1Wire_WriteBit(unsigned char databit)
  77:../../../src/drivers/platform/micaZ/source/DS2401.c **** {
 290               	.LM12:
 291               	.LFBB2:
 292               	/* prologue: function */
 293               	/* frame size = 0 */
  78:../../../src/drivers/platform/micaZ/source/DS2401.c ****    if (databit == 0) // Write Zero
 295               	.LM13:
 296 0040 8823      		tst r24
 297 0042 01F4      		brne .L10
  79:../../../src/drivers/platform/micaZ/source/DS2401.c ****    {
  80:../../../src/drivers/platform/micaZ/source/DS2401.c ****       DataPin_DriveLow;
 299               	.LM14:
 300 0044 DC98      		cbi 59-32,4
 301 0046 D49A      		sbi 58-32,4
 302               	.LBB156:
 303               	.LBB157:
 304               	.LBB158:
 305               	.LBB159:
 307               	.Ltext9:
  83:/usr/lib/gcc/avr/4.3.4/../../../avr/include/util/delay_basic.h **** 	__asm__ volatile (
 309               	.LM15:
 310 0048 84EC      		ldi r24,lo8(-60)
 311               	/* #APP */
 312               	 ;  83 "/usr/lib/gcc/avr/4.3.4/../../../avr/include/util/delay_basic.h" 1
 313 004a 8A95      		1: dec r24
 314 004c 01F4      		brne 1b
 315               	 ;  0 "" 2
 316               	/* #NOAPP */
 317               	.LBE159:
 318               	.LBE158:
 319               	.LBE157:
 320               	.LBE156:
 322               	.Ltext10:
  81:../../../src/drivers/platform/micaZ/source/DS2401.c ****       _delay_us(80);    //80
  82:../../../src/drivers/platform/micaZ/source/DS2401.c ****       DataPin_PullUp;
 324               	.LM16:
 325 004e D498      		cbi 58-32,4
 326 0050 DC9A      		sbi 59-32,4
 327               	.LBB160:
 328               	.LBB161:
 329               	.LBB162:
 330               	.LBB163:
 332               	.Ltext11:
  83:/usr/lib/gcc/avr/4.3.4/../../../avr/include/util/delay_basic.h **** 	__asm__ volatile (
 334               	.LM17:
 335 0052 81E3      		ldi r24,lo8(49)
 336 0054 00C0      		rjmp .L13
 337               	.L10:
 338               	.LBE163:
 339               	.LBE162:
 340               	.LBE161:
 341               	.LBE160:
 343               	.Ltext12:
  83:../../../src/drivers/platform/micaZ/source/DS2401.c ****       _delay_us(20);    //20
  84:../../../src/drivers/platform/micaZ/source/DS2401.c ****    }
  85:../../../src/drivers/platform/micaZ/source/DS2401.c ****    else              // Write One
  86:../../../src/drivers/platform/micaZ/source/DS2401.c ****    {
  87:../../../src/drivers/platform/micaZ/source/DS2401.c ****       DataPin_DriveLow;
 345               	.LM18:
 346 0056 DC98      		cbi 59-32,4
 347 0058 D49A      		sbi 58-32,4
 348               	.LBB164:
 349               	.LBB165:
 350               	.LBB166:
 351               	.LBB167:
 353               	.Ltext13:
  83:/usr/lib/gcc/avr/4.3.4/../../../avr/include/util/delay_basic.h **** 	__asm__ volatile (
 355               	.LM19:
 356 005a 88E1      		ldi r24,lo8(24)
 357               	/* #APP */
 358               	 ;  83 "/usr/lib/gcc/avr/4.3.4/../../../avr/include/util/delay_basic.h" 1
 359 005c 8A95      		1: dec r24
 360 005e 01F4      		brne 1b
 361               	 ;  0 "" 2
 362               	/* #NOAPP */
 363               	.LBE167:
 364               	.LBE166:
 365               	.LBE165:
 366               	.LBE164:
 368               	.Ltext14:
  88:../../../src/drivers/platform/micaZ/source/DS2401.c ****       _delay_us(10);    //10
  89:../../../src/drivers/platform/micaZ/source/DS2401.c ****       DataPin_PullUp;
 370               	.LM20:
 371 0060 D498      		cbi 58-32,4
 372 0062 DC9A      		sbi 59-32,4
 373               	.LBB168:
 374               	.LBB169:
 375               	.LBB170:
 376               	.LBB171:
 378               	.Ltext15:
  83:/usr/lib/gcc/avr/4.3.4/../../../avr/include/util/delay_basic.h **** 	__asm__ volatile (
 380               	.LM21:
 381 0064 8DED      		ldi r24,lo8(-35)
 382               	.L13:
 383               	/* #APP */
 384               	 ;  83 "/usr/lib/gcc/avr/4.3.4/../../../avr/include/util/delay_basic.h" 1
 385 0066 8A95      		1: dec r24
 386 0068 01F4      		brne 1b
 387               	 ;  0 "" 2
 388               	/* #NOAPP */
 389 006a 0895      		ret
 390               	.LBE171:
 391               	.LBE170:
 392               	.LBE169:
 393               	.LBE168:
 395               	.Lscope2:
 397               		.stabd	78,0,0
 399               	.global	Maxim_1Wire_ReadBit
 401               	Maxim_1Wire_ReadBit:
 402               		.stabd	46,0,0
 404               	.Ltext16:
  90:../../../src/drivers/platform/micaZ/source/DS2401.c ****       _delay_us(90);    //90
  91:../../../src/drivers/platform/micaZ/source/DS2401.c ****    }
  92:../../../src/drivers/platform/micaZ/source/DS2401.c **** }
  93:../../../src/drivers/platform/micaZ/source/DS2401.c **** 
  94:../../../src/drivers/platform/micaZ/source/DS2401.c **** 
  95:../../../src/drivers/platform/micaZ/source/DS2401.c **** 
  96:../../../src/drivers/platform/micaZ/source/DS2401.c **** // Reads a bit
  97:../../../src/drivers/platform/micaZ/source/DS2401.c **** inline unsigned char Maxim_1Wire_ReadBit(void)
  98:../../../src/drivers/platform/micaZ/source/DS2401.c **** {
 406               	.LM22:
 407               	.LFBB3:
 408               	/* prologue: function */
 409               	/* frame size = 0 */
  99:../../../src/drivers/platform/micaZ/source/DS2401.c ****    unsigned char bit;
 100:../../../src/drivers/platform/micaZ/source/DS2401.c **** 
 101:../../../src/drivers/platform/micaZ/source/DS2401.c ****    DataPin_DriveLow;
 411               	.LM23:
 412 006c DC98      		cbi 59-32,4
 413 006e D49A      		sbi 58-32,4
 414               	.LBB172:
 415               	.LBB173:
 416               	.LBB174:
 417               	.LBB175:
 419               	.Ltext17:
  83:/usr/lib/gcc/avr/4.3.4/../../../avr/include/util/delay_basic.h **** 	__asm__ volatile (
 421               	.LM24:
 422 0070 82E0      		ldi r24,lo8(2)
 423               	/* #APP */
 424               	 ;  83 "/usr/lib/gcc/avr/4.3.4/../../../avr/include/util/delay_basic.h" 1
 425 0072 8A95      		1: dec r24
 426 0074 01F4      		brne 1b
 427               	 ;  0 "" 2
 428               	/* #NOAPP */
 429               	.LBE175:
 430               	.LBE174:
 431               	.LBE173:
 432               	.LBE172:
 434               	.Ltext18:
 102:../../../src/drivers/platform/micaZ/source/DS2401.c ****    _delay_us(1);    //1
 103:../../../src/drivers/platform/micaZ/source/DS2401.c ****    DataPin_PullUp;
 436               	.LM25:
 437 0076 D498      		cbi 58-32,4
 438 0078 DC9A      		sbi 59-32,4
 439               	.LBB176:
 440               	.LBB177:
 441               	.LBB178:
 442               	.LBB179:
 444               	.Ltext19:
  83:/usr/lib/gcc/avr/4.3.4/../../../avr/include/util/delay_basic.h **** 	__asm__ volatile (
 446               	.LM26:
 447 007a 86E1      		ldi r24,lo8(22)
 448               	/* #APP */
 449               	 ;  83 "/usr/lib/gcc/avr/4.3.4/../../../avr/include/util/delay_basic.h" 1
 450 007c 8A95      		1: dec r24
 451 007e 01F4      		brne 1b
 452               	 ;  0 "" 2
 453               	/* #NOAPP */
 454               	.LBE179:
 455               	.LBE178:
 456               	.LBE177:
 457               	.LBE176:
 459               	.Ltext20:
 104:../../../src/drivers/platform/micaZ/source/DS2401.c ****    _delay_us(9);   //9
 105:../../../src/drivers/platform/micaZ/source/DS2401.c ****    bit = DataPin_State;
 461               	.LM27:
 462 0080 89B3      		in r24,57-32
 463               	.LBB180:
 464               	.LBB181:
 465               	.LBB182:
 466               	.LBB183:
 468               	.Ltext21:
  83:/usr/lib/gcc/avr/4.3.4/../../../avr/include/util/delay_basic.h **** 	__asm__ volatile (
 470               	.LM28:
 471 0082 94EC      		ldi r25,lo8(-60)
 472               	/* #APP */
 473               	 ;  83 "/usr/lib/gcc/avr/4.3.4/../../../avr/include/util/delay_basic.h" 1
 474 0084 9A95      		1: dec r25
 475 0086 01F4      		brne 1b
 476               	 ;  0 "" 2
 477               	/* #NOAPP */
 478 0088 90E0      		ldi r25,lo8(0)
 479 008a 8071      		andi r24,lo8(16)
 480 008c 9070      		andi r25,hi8(16)
 481 008e 24E0      		ldi r18,4
 482 0090 9595      	1:	asr r25
 483 0092 8795      		ror r24
 484 0094 2A95      		dec r18
 485 0096 01F4      		brne 1b
 486               	/* epilogue start */
 487               	.LBE183:
 488               	.LBE182:
 489               	.LBE181:
 490               	.LBE180:
 492               	.Ltext22:
 106:../../../src/drivers/platform/micaZ/source/DS2401.c ****    _delay_us(80);   //80
 107:../../../src/drivers/platform/micaZ/source/DS2401.c **** 
 108:../../../src/drivers/platform/micaZ/source/DS2401.c ****    return bit;
 109:../../../src/drivers/platform/micaZ/source/DS2401.c **** }
 494               	.LM29:
 495 0098 0895      		ret
 497               	.Lscope3:
 499               		.stabd	78,0,0
 502               	.global	Maxim_1Wire_WriteByte
 504               	Maxim_1Wire_WriteByte:
 505               		.stabd	46,0,0
 110:../../../src/drivers/platform/micaZ/source/DS2401.c **** 
 111:../../../src/drivers/platform/micaZ/source/DS2401.c **** 
 112:../../../src/drivers/platform/micaZ/source/DS2401.c **** inline void Maxim_1Wire_WriteByte(unsigned char data)
 113:../../../src/drivers/platform/micaZ/source/DS2401.c **** {
 507               	.LM30:
 508               	.LFBB4:
 509 009a FF92      		push r15
 510 009c 0F93      		push r16
 511 009e 1F93      		push r17
 512 00a0 CF93      		push r28
 513 00a2 DF93      		push r29
 514               	/* prologue: function */
 515               	/* frame size = 0 */
 516 00a4 F82E      		mov r15,r24
 518               	.LM31:
 519 00a6 C0E0      		ldi r28,lo8(0)
 520 00a8 D0E0      		ldi r29,hi8(0)
 114:../../../src/drivers/platform/micaZ/source/DS2401.c ****    // Data order is lsb first
 115:../../../src/drivers/platform/micaZ/source/DS2401.c ****    unsigned char currentBit;
 116:../../../src/drivers/platform/micaZ/source/DS2401.c **** 
 117:../../../src/drivers/platform/micaZ/source/DS2401.c ****    for (currentBit = 0; currentBit < 8; currentBit++)
 118:../../../src/drivers/platform/micaZ/source/DS2401.c ****    {
 119:../../../src/drivers/platform/micaZ/source/DS2401.c ****       Maxim_1Wire_WriteBit(data & (1 << currentBit));
 522               	.LM32:
 523 00aa 01E0      		ldi r16,lo8(1)
 524 00ac 10E0      		ldi r17,hi8(1)
 525               	.L17:
 526 00ae C801      		movw r24,r16
 527 00b0 0C2E      		mov r0,r28
 528 00b2 00C0      		rjmp 2f
 529 00b4 880F      	1:	lsl r24
 530 00b6 991F      		rol r25
 531 00b8 0A94      	2:	dec r0
 532 00ba 02F4      		brpl 1b
 533 00bc 8F21      		and r24,r15
 534 00be 0E94 0000 		call Maxim_1Wire_WriteBit
 535 00c2 2196      		adiw r28,1
 118:../../../src/drivers/platform/micaZ/source/DS2401.c ****    for (currentBit = 0; currentBit < 8; currentBit++)
 537               	.LM33:
 538 00c4 C830      		cpi r28,8
 539 00c6 D105      		cpc r29,__zero_reg__
 540 00c8 01F4      		brne .L17
 541               	/* epilogue start */
 120:../../../src/drivers/platform/micaZ/source/DS2401.c ****    }
 121:../../../src/drivers/platform/micaZ/source/DS2401.c **** }
 543               	.LM34:
 544 00ca DF91      		pop r29
 545 00cc CF91      		pop r28
 546 00ce 1F91      		pop r17
 547 00d0 0F91      		pop r16
 548 00d2 FF90      		pop r15
 549 00d4 0895      		ret
 551               	.Lscope4:
 553               		.stabd	78,0,0
 555               	.global	Maxim_1Wire_ReadByte
 557               	Maxim_1Wire_ReadByte:
 558               		.stabd	46,0,0
 122:../../../src/drivers/platform/micaZ/source/DS2401.c **** 
 123:../../../src/drivers/platform/micaZ/source/DS2401.c **** 
 124:../../../src/drivers/platform/micaZ/source/DS2401.c **** inline unsigned char Maxim_1Wire_ReadByte(void)
 125:../../../src/drivers/platform/micaZ/source/DS2401.c **** {
 560               	.LM35:
 561               	.LFBB5:
 562 00d6 1F93      		push r17
 563 00d8 CF93      		push r28
 564 00da DF93      		push r29
 565               	/* prologue: function */
 566               	/* frame size = 0 */
 568               	.LM36:
 569 00dc 10E0      		ldi r17,lo8(0)
 570 00de C0E0      		ldi r28,lo8(0)
 571 00e0 D0E0      		ldi r29,hi8(0)
 572               	.L21:
 126:../../../src/drivers/platform/micaZ/source/DS2401.c ****    // Data order is lsb first
 127:../../../src/drivers/platform/micaZ/source/DS2401.c ****    unsigned char data = 0;
 128:../../../src/drivers/platform/micaZ/source/DS2401.c ****    unsigned char currentBit;
 129:../../../src/drivers/platform/micaZ/source/DS2401.c **** 
 130:../../../src/drivers/platform/micaZ/source/DS2401.c ****    for (currentBit = 0; currentBit < 8; currentBit++)
 131:../../../src/drivers/platform/micaZ/source/DS2401.c ****    {
 132:../../../src/drivers/platform/micaZ/source/DS2401.c ****       data |= (Maxim_1Wire_ReadBit() << currentBit);
 574               	.LM37:
 575 00e2 0E94 0000 		call Maxim_1Wire_ReadBit
 576 00e6 90E0      		ldi r25,lo8(0)
 577 00e8 0C2E      		mov r0,r28
 578 00ea 00C0      		rjmp 2f
 579 00ec 880F      	1:	lsl r24
 580 00ee 991F      		rol r25
 581 00f0 0A94      	2:	dec r0
 582 00f2 02F4      		brpl 1b
 583 00f4 182B      		or r17,r24
 584 00f6 2196      		adiw r28,1
 131:../../../src/drivers/platform/micaZ/source/DS2401.c ****    for (currentBit = 0; currentBit < 8; currentBit++)
 586               	.LM38:
 587 00f8 C830      		cpi r28,8
 588 00fa D105      		cpc r29,__zero_reg__
 589 00fc 01F4      		brne .L21
 133:../../../src/drivers/platform/micaZ/source/DS2401.c ****    }
 134:../../../src/drivers/platform/micaZ/source/DS2401.c **** 
 135:../../../src/drivers/platform/micaZ/source/DS2401.c ****    return data;
 136:../../../src/drivers/platform/micaZ/source/DS2401.c **** }
 591               	.LM39:
 592 00fe 812F      		mov r24,r17
 593               	/* epilogue start */
 594 0100 DF91      		pop r29
 595 0102 CF91      		pop r28
 596 0104 1F91      		pop r17
 597 0106 0895      		ret
 602               	.Lscope5:
 604               		.stabd	78,0,0
 606               	.global	Maxim_1Wire_CommandReadRom
 608               	Maxim_1Wire_CommandReadRom:
 609               		.stabd	46,0,0
 137:../../../src/drivers/platform/micaZ/source/DS2401.c **** 
 138:../../../src/drivers/platform/micaZ/source/DS2401.c **** 
 139:../../../src/drivers/platform/micaZ/source/DS2401.c **** 
 140:../../../src/drivers/platform/micaZ/source/DS2401.c **** inline void Maxim_1Wire_CommandReadRom(void)
 141:../../../src/drivers/platform/micaZ/source/DS2401.c **** {
 611               	.LM40:
 612               	.LFBB6:
 613               	/* prologue: function */
 614               	/* frame size = 0 */
 142:../../../src/drivers/platform/micaZ/source/DS2401.c ****    Maxim_1Wire_WriteByte(0x0f);
 616               	.LM41:
 617 0108 8FE0      		ldi r24,lo8(15)
 618 010a 0E94 0000 		call Maxim_1Wire_WriteByte
 619               	/* epilogue start */
 143:../../../src/drivers/platform/micaZ/source/DS2401.c **** }
 621               	.LM42:
 622 010e 0895      		ret
 624               	.Lscope6:
 626               		.stabd	78,0,0
 628               	.global	DS2401_init
 630               	DS2401_init:
 631               		.stabd	46,0,0
 144:../../../src/drivers/platform/micaZ/source/DS2401.c **** 
 145:../../../src/drivers/platform/micaZ/source/DS2401.c **** 
 146:../../../src/drivers/platform/micaZ/source/DS2401.c **** 
 147:../../../src/drivers/platform/micaZ/source/DS2401.c **** inline void DS2401_init(void)
 148:../../../src/drivers/platform/micaZ/source/DS2401.c **** {
 633               	.LM43:
 634               	.LFBB7:
 635               	/* prologue: function */
 636               	/* frame size = 0 */
 149:../../../src/drivers/platform/micaZ/source/DS2401.c ****     SFIOR &= ~(1 << PUD);
 638               	.LM44:
 639 0110 80B5      		in r24,64-32
 640 0112 8B7F      		andi r24,lo8(-5)
 641 0114 80BD      		out 64-32,r24
 150:../../../src/drivers/platform/micaZ/source/DS2401.c ****     DataPin_PullUp;
 643               	.LM45:
 644 0116 D498      		cbi 58-32,4
 645 0118 DC9A      		sbi 59-32,4
 646               	.LBB184:
 647               	.LBB185:
 648               	.LBB186:
 649               	.LBB187:
 651               	.Ltext23:
  83:/usr/lib/gcc/avr/4.3.4/../../../avr/include/util/delay_basic.h **** 	__asm__ volatile (
 653               	.LM46:
 654 011a 85EF      		ldi r24,lo8(-11)
 655               	/* #APP */
 656               	 ;  83 "/usr/lib/gcc/avr/4.3.4/../../../avr/include/util/delay_basic.h" 1
 657 011c 8A95      		1: dec r24
 658 011e 01F4      		brne 1b
 659               	 ;  0 "" 2
 660               	/* epilogue start */
 661               	/* #NOAPP */
 662               	.LBE187:
 663               	.LBE186:
 664               	.LBE185:
 665               	.LBE184:
 667               	.Ltext24:
 151:../../../src/drivers/platform/micaZ/source/DS2401.c ****     _delay_us(100);   // One time slot for powerup
 152:../../../src/drivers/platform/micaZ/source/DS2401.c **** }
 669               	.LM47:
 670 0120 0895      		ret
 672               	.Lscope7:
 674               		.stabd	78,0,0
 677               	.global	DS2401_getSerialNumber
 679               	DS2401_getSerialNumber:
 680               		.stabd	46,0,0
 153:../../../src/drivers/platform/micaZ/source/DS2401.c **** 
 154:../../../src/drivers/platform/micaZ/source/DS2401.c **** 
 155:../../../src/drivers/platform/micaZ/source/DS2401.c **** // Reads the 32 bit world wide unique serial number
 156:../../../src/drivers/platform/micaZ/source/DS2401.c **** // valid is set to 0 in case of success, -2 in case of family code mismatch, -1 in case of CRC erro
 157:../../../src/drivers/platform/micaZ/source/DS2401.c **** inline uint32_t DS2401_getSerialNumber(int8_t *valid) {
 682               	.LM48:
 683               	.LFBB8:
 684 0122 EF92      		push r14
 685 0124 FF92      		push r15
 686 0126 0F93      		push r16
 687 0128 1F93      		push r17
 688 012a DF93      		push r29
 689 012c CF93      		push r28
 690 012e 00D0      		rcall .
 691 0130 00D0      		rcall .
 692 0132 CDB7      		in r28,__SP_L__
 693 0134 DEB7      		in r29,__SP_H__
 694               	/* prologue: function */
 695               	/* frame size = 4 */
 696 0136 7C01      		movw r14,r24
 158:../../../src/drivers/platform/micaZ/source/DS2401.c ****     uint32_t serialNumber = 0;
 698               	.LM49:
 699 0138 1982      		std Y+1,__zero_reg__
 700 013a 1A82      		std Y+2,__zero_reg__
 701 013c 1B82      		std Y+3,__zero_reg__
 702 013e 1C82      		std Y+4,__zero_reg__
 159:../../../src/drivers/platform/micaZ/source/DS2401.c ****     uint8_t byte;
 160:../../../src/drivers/platform/micaZ/source/DS2401.c ****     signed char returnVal;
 161:../../../src/drivers/platform/micaZ/source/DS2401.c ****     returnVal = Maxim_1Wire_ResetPulse();
 704               	.LM50:
 705 0140 0E94 0000 		call Maxim_1Wire_ResetPulse
 162:../../../src/drivers/platform/micaZ/source/DS2401.c ****     if (returnVal != 0) return returnVal;
 707               	.LM51:
 708 0144 8823      		tst r24
 709 0146 01F0      		breq .L29
 710 0148 282F      		mov r18,r24
 711 014a 3327      		clr r19
 712 014c 27FD      		sbrc r18,7
 713 014e 3095      		com r19
 714 0150 432F      		mov r20,r19
 715 0152 532F      		mov r21,r19
 716 0154 00C0      		rjmp .L30
 717               	.L29:
 163:../../../src/drivers/platform/micaZ/source/DS2401.c ****     Maxim_1Wire_CommandReadRom();
 719               	.LM52:
 720 0156 0E94 0000 		call Maxim_1Wire_CommandReadRom
 164:../../../src/drivers/platform/micaZ/source/DS2401.c ****     if (Maxim_1Wire_ReadByte() != 0x01) *valid = -2;      //  Read device code
 722               	.LM53:
 723 015a 0E94 0000 		call Maxim_1Wire_ReadByte
 724 015e 8130      		cpi r24,lo8(1)
 725 0160 01F0      		breq .L31
 726 0162 8EEF      		ldi r24,lo8(-2)
 727 0164 F701      		movw r30,r14
 728 0166 8083      		st Z,r24
 729               	.L31:
 165:../../../src/drivers/platform/micaZ/source/DS2401.c **** 
 166:../../../src/drivers/platform/micaZ/source/DS2401.c ****     *(uint8_t*)&serialNumber = Maxim_1Wire_ReadByte();          //  Read ID Byte 0 - last significa
 731               	.LM54:
 732 0168 8E01      		movw r16,r28
 733 016a 0F5F      		subi r16,lo8(-(1))
 734 016c 1F4F      		sbci r17,hi8(-(1))
 735 016e 0E94 0000 		call Maxim_1Wire_ReadByte
 736 0172 8983      		std Y+1,r24
 167:../../../src/drivers/platform/micaZ/source/DS2401.c **** 
 168:../../../src/drivers/platform/micaZ/source/DS2401.c ****     *((uint8_t*)&serialNumber + 1) = Maxim_1Wire_ReadByte();    //  Read ID Byte 1
 738               	.LM55:
 739 0174 0E94 0000 		call Maxim_1Wire_ReadByte
 740 0178 F801      		movw r30,r16
 741 017a 8183      		std Z+1,r24
 169:../../../src/drivers/platform/micaZ/source/DS2401.c **** 
 170:../../../src/drivers/platform/micaZ/source/DS2401.c ****     *((uint8_t*)&serialNumber + 2) = Maxim_1Wire_ReadByte();    //  Read ID Byte 2
 743               	.LM56:
 744 017c 0E94 0000 		call Maxim_1Wire_ReadByte
 745 0180 F801      		movw r30,r16
 746 0182 8283      		std Z+2,r24
 171:../../../src/drivers/platform/micaZ/source/DS2401.c **** 
 172:../../../src/drivers/platform/micaZ/source/DS2401.c ****     *((uint8_t*)&serialNumber + 3) = Maxim_1Wire_ReadByte();    //  Read ID Byte 3
 748               	.LM57:
 749 0184 0E94 0000 		call Maxim_1Wire_ReadByte
 750 0188 F801      		movw r30,r16
 751 018a 8383      		std Z+3,r24
 173:../../../src/drivers/platform/micaZ/source/DS2401.c **** 
 174:../../../src/drivers/platform/micaZ/source/DS2401.c ****     Maxim_1Wire_ReadByte();                                     //  Read ID Byte 4 = 0
 753               	.LM58:
 754 018c 0E94 0000 		call Maxim_1Wire_ReadByte
 175:../../../src/drivers/platform/micaZ/source/DS2401.c ****     Maxim_1Wire_ReadByte();                                     //  Read ID Byte 5 = 0 - most signi
 756               	.LM59:
 757 0190 0E94 0000 		call Maxim_1Wire_ReadByte
 176:../../../src/drivers/platform/micaZ/source/DS2401.c ****     Maxim_1Wire_ReadByte();                                     //  Read CRC, tbd.
 759               	.LM60:
 760 0194 0E94 0000 		call Maxim_1Wire_ReadByte
 177:../../../src/drivers/platform/micaZ/source/DS2401.c ****     *valid = 0;
 762               	.LM61:
 763 0198 F701      		movw r30,r14
 764 019a 1082      		st Z,__zero_reg__
 178:../../../src/drivers/platform/micaZ/source/DS2401.c ****     return serialNumber;
 766               	.LM62:
 767 019c 2981      		ldd r18,Y+1
 768 019e 3A81      		ldd r19,Y+2
 769 01a0 4B81      		ldd r20,Y+3
 770 01a2 5C81      		ldd r21,Y+4
 771               	.L30:
 179:../../../src/drivers/platform/micaZ/source/DS2401.c **** }
 773               	.LM63:
 774 01a4 B901      		movw r22,r18
 775 01a6 CA01      		movw r24,r20
 776               	/* epilogue start */
 777 01a8 0F90      		pop __tmp_reg__
 778 01aa 0F90      		pop __tmp_reg__
 779 01ac 0F90      		pop __tmp_reg__
 780 01ae 0F90      		pop __tmp_reg__
 781 01b0 CF91      		pop r28
 782 01b2 DF91      		pop r29
 783 01b4 1F91      		pop r17
 784 01b6 0F91      		pop r16
 785 01b8 FF90      		pop r15
 786 01ba EF90      		pop r14
 787 01bc 0895      		ret
 793               	.Lscope8:
 795               		.stabd	78,0,0
 796               		.comm _nrk_signal_list,4,1
 797               		.comm nrk_idle_task_stk,128,1
 798               		.comm nrk_kernel_stk_ptr,2,1
 803               	.Letext0:
DEFINED SYMBOLS
                            *ABS*:00000000 DS2401.c
     /tmp/cc3LIiAq.s:2      *ABS*:0000003f __SREG__
     /tmp/cc3LIiAq.s:3      *ABS*:0000003e __SP_H__
     /tmp/cc3LIiAq.s:4      *ABS*:0000003d __SP_L__
     /tmp/cc3LIiAq.s:5      *ABS*:00000034 __CCP__
     /tmp/cc3LIiAq.s:6      *ABS*:00000000 __tmp_reg__
     /tmp/cc3LIiAq.s:7      *ABS*:00000001 __zero_reg__
     /tmp/cc3LIiAq.s:136    .text:00000000 Maxim_1Wire_ResetPulse
     /tmp/cc3LIiAq.s:287    .text:00000040 Maxim_1Wire_WriteBit
     /tmp/cc3LIiAq.s:401    .text:0000006c Maxim_1Wire_ReadBit
     /tmp/cc3LIiAq.s:504    .text:0000009a Maxim_1Wire_WriteByte
     /tmp/cc3LIiAq.s:557    .text:000000d6 Maxim_1Wire_ReadByte
     /tmp/cc3LIiAq.s:608    .text:00000108 Maxim_1Wire_CommandReadRom
     /tmp/cc3LIiAq.s:630    .text:00000110 DS2401_init
     /tmp/cc3LIiAq.s:679    .text:00000122 DS2401_getSerialNumber
                            *COM*:00000004 _nrk_signal_list
                            *COM*:00000080 nrk_idle_task_stk
                            *COM*:00000002 nrk_kernel_stk_ptr

UNDEFINED SYMBOLS
__do_copy_data
__do_clear_bss
